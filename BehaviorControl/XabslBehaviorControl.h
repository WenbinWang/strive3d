/***************************************************************************
 *   Copyright (C) 2008 by Zhu_Ming,Zheng Yonglei  Qu Junjun *
 *   zhuming535984@gmail.com,zhengyonglei@gmail.com   *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef XABSLBEHAVIORCONTROL_H
#define XABSLBEHAVIORCONTROL_H

#include "BehaviorControl.h"
#include "XabslEngineExecutor.h"

/**
* Base class for all BehaviorControl solutions that use a XabslEngine
*/ 
class XabslBehaviorControl : public BehaviorControl, public XabslEngineExecutor
{
public:
/** 
* Constructor.
* @param interfaces The paramters of the BehaviorControl module.
* @param id The id of the Xabsl2Engine.
  */
  XabslBehaviorControl(const BehaviorControlInterfaces& interfaces,
    SolutionRequest::xabslEngineID id);
  
  /** destructor */
  ~XabslBehaviorControl() {};
  
protected:

  /** Is called if the engine could not be created */
  virtual void executeIfEngineCouldNotBeCreated();

  /** 
  * Prints the main action that was generated by the execution of the engine to a string
  * @param buf the string where to print the action
  */
  virtual void printGeneratedMainActionToString(char* buf);

};

/**
* Allows to register the same XabslBehaviorControl instance more than once
* at a ModuleHandler to be able to switch between different agents using the
* GT Module mechanism.
*/
class XabslBehaviorControlAgentInterface : public BehaviorControl, public NamedItem
{
public:
/**
* Constructor
* @param name The name of the agent
* @param behaviorControl A newly created XabslBehaviorControl can contains the agent.
* @param interfaces The paramters of the BehaviorControl module.
  */
  XabslBehaviorControlAgentInterface(const char* name,
    					XabslBehaviorControl* behaviorControl,
    					const BehaviorControlInterfaces& interfaces);
  
  /** Destructor. Deletes the XabslBehaviorControl */
  ~XabslBehaviorControlAgentInterface();

  /** Executes the agent */
  virtual void execute();
  
private:
  /** A pointer to the XabslBehaviorControl can contains the agent. */
  XabslBehaviorControl* behaviorControl;
};

#endif

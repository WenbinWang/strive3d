!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AA	AdvancedAgent/AdvancedAgent.h	13;"	d
AABB2	salt/bounds.h	/^    f_inline AABB2()$/;"	f	class:salt::AABB2
AABB2	salt/bounds.h	/^    f_inline AABB2(const Vector2f &mn, const Vector2f &mx)$/;"	f	class:salt::AABB2
AABB2	salt/bounds.h	/^class AABB2$/;"	c	namespace:salt
AABB3	salt/bounds.h	/^    f_inline AABB3() { Init(); }$/;"	f	class:salt::AABB3
AABB3	salt/bounds.h	/^    f_inline AABB3(const Vector3f &mn, const Vector3f &mx)$/;"	f	class:salt::AABB3
AABB3	salt/bounds.h	/^class AABB3$/;"	c	namespace:salt
ACTIONCONTROLSELECTOR_H	Action/ActionSelector.h	22;"	d
ACTIONREQUEST_H	Action/ActionRequest.h	22;"	d
ACTION_H	Action/ActionControl.h	22;"	d
AFTERKICK	WorldModel/ball.h	/^		AFTERKICK	= 2,	$/;"	e	enum:Ball::BallState
ANY	Net/addr.cpp	/^        const Addr::HostType Addr::ANY = INADDR_ANY;$/;"	m	class:rcss::net::Addr	file:
ANY	Net/addr.hpp	/^            static const HostType ANY;$/;"	m	class:rcss::net::Addr
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
ARCHITECTURE_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
AcceptErr	Net/exception.cpp	/^        AcceptErr::AcceptErr( int err ) throw()$/;"	f	class:rcss::net::AcceptErr
AcceptErr	Net/exception.hpp	/^        class AcceptErr$/;"	c	namespace:rcss::net
Action	Xabsl/XabslAction.h	/^  Action($/;"	f	class:xabsl::Action
Action	Xabsl/XabslAction.h	/^class Action$/;"	c	namespace:xabsl
ActionBasicBehavior	Xabsl/XabslAction.h	/^  ActionBasicBehavior($/;"	f	class:xabsl::ActionBasicBehavior
ActionBasicBehavior	Xabsl/XabslAction.h	/^class ActionBasicBehavior : public ActionBehavior$/;"	c	namespace:xabsl
ActionBehavior	Xabsl/XabslAction.h	/^  ActionBehavior($/;"	f	class:xabsl::ActionBehavior
ActionBehavior	Xabsl/XabslAction.h	/^class ActionBehavior : public Action$/;"	c	namespace:xabsl
ActionBooleanOutputSymbol	Xabsl/XabslAction.h	/^  ActionBooleanOutputSymbol($/;"	f	class:xabsl::ActionBooleanOutputSymbol
ActionBooleanOutputSymbol	Xabsl/XabslAction.h	/^class ActionBooleanOutputSymbol : public Action$/;"	c	namespace:xabsl
ActionControl	Action/ActionControl.h	/^ 	ActionControl(const ActionControlInterfaces& interfaces) : ActionControlInterfaces(interfaces) {}$/;"	f	class:ActionControl
ActionControl	Action/ActionControl.h	/^class ActionControl : public Module, public ActionControlInterfaces$/;"	c
ActionControlInterfaces	Action/ActionControl.h	/^  ActionControlInterfaces(const unsigned long& frameNumber,$/;"	f	class:ActionControlInterfaces
ActionControlInterfaces	Action/ActionControl.h	/^class ActionControlInterfaces$/;"	c
ActionControlSelector	Action/ActionSelector.h	/^  ActionControlSelector(ModuleHandler &handler, const ActionControlInterfaces& interfaces) $/;"	f	class:ActionControlSelector
ActionControlSelector	Action/ActionSelector.h	/^class ActionControlSelector : public ModuleSelector, public ActionControlInterfaces$/;"	c
ActionDecimalOutputSymbol	Xabsl/XabslAction.h	/^  ActionDecimalOutputSymbol($/;"	f	class:xabsl::ActionDecimalOutputSymbol
ActionDecimalOutputSymbol	Xabsl/XabslAction.h	/^class ActionDecimalOutputSymbol : public Action$/;"	c	namespace:xabsl
ActionEnumeratedOutputSymbol	Xabsl/XabslAction.h	/^  ActionEnumeratedOutputSymbol($/;"	f	class:xabsl::ActionEnumeratedOutputSymbol
ActionEnumeratedOutputSymbol	Xabsl/XabslAction.h	/^class ActionEnumeratedOutputSymbol : public Action$/;"	c	namespace:xabsl
ActionID	Action/ActionRequest.h	/^    enum ActionID$/;"	g	class:ActionRequest
ActionInfo	Action/ActionInfo.h	/^  ActionInfo():positionInWalkCycle(0) , bodyTilt(0), actionIsStable(true), stopWalking(false){};$/;"	f	class:ActionInfo
ActionInfo	Action/ActionInfo.h	/^class ActionInfo $/;"	c
ActionOption	Xabsl/XabslAction.h	/^  ActionOption($/;"	f	class:xabsl::ActionOption
ActionOption	Xabsl/XabslAction.h	/^class ActionOption : public ActionBehavior$/;"	c	namespace:xabsl
ActionRequest	Action/ActionRequest.h	/^    ActionRequest():actionType(stand),stabilize(false),frameNumber(0) {}$/;"	f	class:ActionRequest
ActionRequest	Action/ActionRequest.h	/^class ActionRequest$/;"	c
AddArea	WorldModel/convexhullmanager.cpp	/^bool ConvexHullManager::AddArea(const vector<Vector3f> & area)$/;"	f	class:ConvexHullManager
AddConvexHull	WorldModel/convexhull.cpp	/^void ConvexHull::AddConvexHull(ConvexHull& ch)$/;"	f	class:ConvexHull
AddPolygon	WorldModel/convexhull.cpp	/^bool ConvexHull::AddPolygon(const vector<Vector3f> & polygon)$/;"	f	class:ConvexHull
Addr	Net/addr.cpp	/^        Addr::Addr( PortType port, HostType host )$/;"	f	class:rcss::net::Addr
Addr	Net/addr.cpp	/^        Addr::Addr( PortType port, const std::string& host )$/;"	f	class:rcss::net::Addr
Addr	Net/addr.cpp	/^        Addr::Addr( const AddrType& addr )$/;"	f	class:rcss::net::Addr
Addr	Net/addr.hpp	/^        class Addr$/;"	c	namespace:rcss::net
AddrImpl	Net/addr.cpp	/^			AddrImpl( Addr::PortType port, Addr::HostType host )$/;"	f	class:rcss::net::AddrImpl
AddrImpl	Net/addr.cpp	/^            AddrImpl( Addr::PortType port, const std::string& host )$/;"	f	class:rcss::net::AddrImpl
AddrImpl	Net/addr.cpp	/^            AddrImpl( const Addr::AddrType& addr )$/;"	f	class:rcss::net::AddrImpl
AddrImpl	Net/addr.cpp	/^        class AddrImpl$/;"	c	namespace:rcss::net	file:
AddrType	Net/addr.hpp	/^            typedef struct sockaddr_in AddrType;$/;"	t	class:rcss::net::Addr	typeref:struct:rcss::net::Addr::sockaddr_in
Adjustment	BehaviorControl/NaoBehaviorControl.h	/^	enum Adjustment$/;"	g	class:NaoBehaviorControl
AdjustmentForKick	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::AdjustmentForKick( float AdjustX,float AdjustY)$/;"	f	class:NaoBehaviorControl
AdjustmentForKick	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::AdjustmentForKick(Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
AdjustmentForPass	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::AdjustmentForPass(Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
AdvancedAgent	AdvancedAgent/AdvancedAgent.cpp	/^AdvancedAgent::AdvancedAgent() :$/;"	f	class:AdvancedAgent
AdvancedAgent	AdvancedAgent/AdvancedAgent.h	/^class AdvancedAgent$/;"	c
Agent	Xabsl/XabslAgent.cpp	/^  Agent::Agent(const char* name, Behavior* rootOption,$/;"	f	class:xabsl::Agent
Agent	Xabsl/XabslAgent.h	/^class Agent : public NamedItem$/;"	c	namespace:xabsl
AnalysePlayerPosition	WorldModel/worldmodel.cpp	/^void WorldModel::AnalysePlayerPosition()$/;"	f	class:WorldModel
AndOperator	Xabsl/XabslBooleanExpression.cpp	/^AndOperator::AndOperator() $/;"	f	class:xabsl::AndOperator
AndOperator	Xabsl/XabslBooleanExpression.h	/^class AndOperator : public BooleanExpression$/;"	c	namespace:xabsl
AnkleMass	RobotModel/nao.h	/^	float AnkleMass;$/;"	m	class:Nao
AnkleRelShank_X	RobotModel/nao.h	/^    float AnkleRelShank_X;$/;"	m	class:Nao
AnkleRelShank_Y	RobotModel/nao.h	/^    float AnkleRelShank_Y;$/;"	m	class:Nao
AnkleRelShank_Z	RobotModel/nao.h	/^    float AnkleRelShank_Z;$/;"	m	class:Nao
ApplyJVel	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::ApplyJVel(bool left, float slowgain)$/;"	f	class:NaoDynamicKickEngine
ApplyJVel	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::ApplyJVel(bool left, float slowgain)$/;"	f	class:NaoSpecialAction
ApplyJVel	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::ApplyJVel(bool left)$/;"	f	class:NaoWalkingEngine
ApplyTrajectory	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::ApplyTrajectory(bool lefthold)$/;"	f	class:NaoWalkingEngine
ArithmeticOperator	Xabsl/XabslDecimalExpression.h	/^class ArithmeticOperator : public DecimalExpression$/;"	c	namespace:xabsl
Array	Xabsl/XabslArray.h	/^    Array() $/;"	f	class:xabsl::Array
Array	Xabsl/XabslArray.h	/^template <class T> class Array$/;"	c	namespace:xabsl
ArrayElement	Xabsl/XabslArray.h	/^    ArrayElement(const char* name, T element)$/;"	f	class:xabsl::ArrayElement
ArrayElement	Xabsl/XabslArray.h	/^template<class T> class ArrayElement : public NamedItem$/;"	c	namespace:xabsl
ArriveKickPosition	BehaviorControl/NaoBehaviorControl.cpp	/^bool NaoBehaviorControl::ArriveKickPosition()$/;"	f	class:NaoBehaviorControl
Assert	salt/defines.h	62;"	d
AutoMode	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::AutoMode()$/;"	f	class:NaoHeadControl
BALL	types.h	/^    BALL        = 8,$/;"	e	enum:VisionObject
BALL_H	WorldModel/ball.h	19;"	d
BASEAGENT_H	BaseAgent.h	22;"	d
BEHAVIORCONTROLSELECTOR_H	BehaviorControl/BehaviorControlSelector.h	22;"	d
BEHAVIORCONTROL_H	BehaviorControl/BehaviorControl.h	22;"	d
BROADCAST	Net/addr.cpp	/^        const Addr::HostType Addr::BROADCAST = INADDR_BROADCAST;$/;"	m	class:rcss::net::Addr	file:
BROADCAST	Net/addr.hpp	/^            static const HostType BROADCAST;$/;"	m	class:rcss::net::Addr
Ball	WorldModel/ball.cpp	/^Ball::Ball()$/;"	f	class:Ball
Ball	WorldModel/ball.h	/^class Ball : public DynamicObject$/;"	c
BallHolder	BehaviorControl/Strive3DBehaviorControl.h	/^	enum BallHolder$/;"	g	class:Strive3DBehaviorControl
BallPos	AdvancedAgent/PathPlanning.h	/^	Vector2f BallPos;$/;"	m	class:PathPlanning
BallState	BehaviorControl/Strive3DBehaviorControl.h	/^	enum BallState$/;"	g	class:Strive3DBehaviorControl
BallState	WorldModel/ball.h	/^	enum BallState$/;"	g	class:Ball
BallTime_KeepSeeing	HeadControl/NaoHeadControl.h	/^    inline const int BallTime_KeepSeeing()$/;"	f	class:NaoHeadControl
BallTime_SinceLastSeen	HeadControl/NaoHeadControl.h	/^    inline const int BallTime_SinceLastSeen()$/;"	f	class:NaoHeadControl
BaseAgent	BaseAgent.cpp	/^BaseAgent::BaseAgent() : mCycle(0),saycycle(0)$/;"	f	class:BaseAgent
BaseAgent	BaseAgent.h	/^class BaseAgent$/;"	c
BasicBehavior	Xabsl/XabslBasicBehavior.h	/^  BasicBehavior(const char* name, ErrorHandler& errorHandler)$/;"	f	class:xabsl::BasicBehavior
BasicBehavior	Xabsl/XabslBasicBehavior.h	/^class BasicBehavior : public Behavior$/;"	c	namespace:xabsl
BasicBehaviorDoNothing	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorDoNothing(const BehaviorControlInterfaces& interfaces,$/;"	f	class:BasicBehaviorDoNothing
BasicBehaviorDoNothing	BehaviorControl/CommonBasicBehaviors.h	/^class BasicBehaviorDoNothing : public BasicBehavior, public BehaviorControlInterfaces$/;"	c
BasicBehaviorSpecialAction	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorSpecialAction(const BehaviorControlInterfaces& interfaces,$/;"	f	class:BasicBehaviorSpecialAction
BasicBehaviorSpecialAction	BehaviorControl/CommonBasicBehaviors.h	/^class BasicBehaviorSpecialAction : public BasicBehavior, public BehaviorControlInterfaces$/;"	c
BasicBehaviorStand	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorStand(const BehaviorControlInterfaces& interfaces,$/;"	f	class:BasicBehaviorStand
BasicBehaviorStand	BehaviorControl/CommonBasicBehaviors.h	/^class BasicBehaviorStand : public BasicBehavior, public BehaviorControlInterfaces$/;"	c
BasicBehaviorStop	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorStop(const BehaviorControlInterfaces& interfaces,$/;"	f	class:BasicBehaviorStop
BasicBehaviorStop	BehaviorControl/CommonBasicBehaviors.h	/^class BasicBehaviorStop : public BasicBehavior, public BehaviorControlInterfaces$/;"	c
BasicBehaviorWalk	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorWalk(const BehaviorControlInterfaces& interfaces,$/;"	f	class:BasicBehaviorWalk
BasicBehaviorWalk	BehaviorControl/CommonBasicBehaviors.h	/^class BasicBehaviorWalk : public BasicBehavior, public BehaviorControlInterfaces$/;"	c
Behavior	Xabsl/XabslBehavior.h	/^  Behavior(const char* name) : $/;"	f	class:xabsl::Behavior
Behavior	Xabsl/XabslBehavior.h	/^class Behavior : public NamedItem$/;"	c	namespace:xabsl
BehaviorControl	BehaviorControl/BehaviorControl.h	/^	BehaviorControl(const BehaviorControlInterfaces& interfaces): BehaviorControlInterfaces(interfaces) {}$/;"	f	class:BehaviorControl
BehaviorControl	BehaviorControl/BehaviorControl.h	/^class BehaviorControl : public Module, public BehaviorControlInterfaces$/;"	c
BehaviorControlInterfaces	BehaviorControl/BehaviorControl.h	/^  	BehaviorControlInterfaces( const ActionInfo& actionInfo,$/;"	f	class:BehaviorControlInterfaces
BehaviorControlInterfaces	BehaviorControl/BehaviorControl.h	/^class BehaviorControlInterfaces$/;"	c
BehaviorControlSelector	BehaviorControl/BehaviorControlSelector.h	/^  BehaviorControlSelector(ModuleHandler &handler, const BehaviorControlInterfaces& interfaces)$/;"	f	class:BehaviorControlSelector
BehaviorControlSelector	BehaviorControl/BehaviorControlSelector.h	/^class BehaviorControlSelector : public ModuleSelector, public BehaviorControlInterfaces$/;"	c
BehaviorControlState	BehaviorControl/NaoBehaviorControl.h	/^    enum BehaviorControlState$/;"	g	class:NaoBehaviorControl
BindErr	Net/exception.cpp	/^        BindErr::BindErr( int err ) throw()$/;"	f	class:rcss::net::BindErr
BindErr	Net/exception.hpp	/^        class BindErr$/;"	c	namespace:rcss::net
BlindEye	WorldModel/player.h	/^	inline void BlindEye()$/;"	f	class:Player
BooleanExpression	Xabsl/XabslBooleanExpression.h	/^class BooleanExpression$/;"	c	namespace:xabsl
BooleanInputSymbol	Xabsl/XabslSymbols.h	/^  BooleanInputSymbol(const char* name, FunctionProvider* pInstance,$/;"	f	class:xabsl::BooleanInputSymbol
BooleanInputSymbol	Xabsl/XabslSymbols.h	/^  BooleanInputSymbol(const char* name, const bool* pVariable, ErrorHandler& errorHandler)$/;"	f	class:xabsl::BooleanInputSymbol
BooleanInputSymbol	Xabsl/XabslSymbols.h	/^class BooleanInputSymbol : public InputSymbol<bool>$/;"	c	namespace:xabsl
BooleanInputSymbolRef	Xabsl/XabslBooleanExpression.cpp	/^BooleanInputSymbolRef::BooleanInputSymbolRef(InputSource& input, $/;"	f	class:xabsl::BooleanInputSymbolRef
BooleanInputSymbolRef	Xabsl/XabslBooleanExpression.h	/^class BooleanInputSymbolRef : public BooleanExpression$/;"	c	namespace:xabsl
BooleanOptionParameterRef	Xabsl/XabslBooleanExpression.cpp	/^BooleanOptionParameterRef::BooleanOptionParameterRef(InputSource& input, $/;"	f	class:xabsl::BooleanOptionParameterRef
BooleanOptionParameterRef	Xabsl/XabslBooleanExpression.h	/^class BooleanOptionParameterRef : public BooleanExpression$/;"	c	namespace:xabsl
BooleanOutputSymbol	Xabsl/XabslSymbols.h	/^  BooleanOutputSymbol(const char* name, FunctionProvider* pInstance,$/;"	f	class:xabsl::BooleanOutputSymbol
BooleanOutputSymbol	Xabsl/XabslSymbols.h	/^  BooleanOutputSymbol(const char* name, bool* pVariable)$/;"	f	class:xabsl::BooleanOutputSymbol
BooleanOutputSymbol	Xabsl/XabslSymbols.h	/^class BooleanOutputSymbol : public OutputSymbol<bool>$/;"	c	namespace:xabsl
BooleanOutputSymbolRef	Xabsl/XabslBooleanExpression.cpp	/^BooleanOutputSymbolRef::BooleanOutputSymbolRef(InputSource& input, $/;"	f	class:xabsl::BooleanOutputSymbolRef
BooleanOutputSymbolRef	Xabsl/XabslBooleanExpression.h	/^class BooleanOutputSymbolRef : public BooleanExpression$/;"	c	namespace:xabsl
BooleanValue	Xabsl/XabslBooleanExpression.cpp	/^BooleanValue::BooleanValue(InputSource& input, $/;"	f	class:xabsl::BooleanValue
BooleanValue	Xabsl/XabslBooleanExpression.h	/^  BooleanValue(bool value) : value(value) {}$/;"	f	class:xabsl::BooleanValue
BooleanValue	Xabsl/XabslBooleanExpression.h	/^class BooleanValue : public BooleanExpression$/;"	c	namespace:xabsl
Bottom	salt/rect.h	/^    f_inline int    Bottom() const                  { return mBottom; }$/;"	f	class:salt::Rect
BoundingSphere	salt/bounds.h	/^    f_inline BoundingSphere()$/;"	f	class:salt::BoundingSphere
BoundingSphere	salt/bounds.h	/^    f_inline BoundingSphere(const Vector3f &pos, float rad)$/;"	f	class:salt::BoundingSphere
BoundingSphere	salt/bounds.h	/^    f_inline BoundingSphere(const Vector3f &pos, float rad, float radSq)$/;"	f	class:salt::BoundingSphere
BoundingSphere	salt/bounds.h	/^class BoundingSphere$/;"	c	namespace:salt
CHECK	Net/socket.hpp	/^            enum CheckingType { CHECK, DONT_CHECK };$/;"	e	enum:rcss::net::Socket::CheckingType
CLASS_EXPORT	salt/defines.h	57;"	d
CLASS_EXPORT	salt/defines.h	59;"	d
CMAKE_BINARY_DIR	one_build/Action/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/AdvancedAgent/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/BehaviorControl/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Geometry/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/HeadControl/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Module/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Net/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Parser/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/RobotModel/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Trainer_Client/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Utilities/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/WorldModel/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/Xabsl/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_BINARY_DIR	one_build/salt/Makefile	/^CMAKE_BINARY_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01\/one_build$/;"	m
CMAKE_COMMAND	one_build/Action/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/AdvancedAgent/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/BehaviorControl/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Geometry/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/HeadControl/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Module/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Net/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Parser/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/RobotModel/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Trainer_Client/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Utilities/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/WorldModel/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/Xabsl/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	one_build/salt/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Action/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/AdvancedAgent/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/BehaviorControl/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Geometry/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/HeadControl/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Module/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Net/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Parser/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/RobotModel/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Trainer_Client/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Utilities/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/WorldModel/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/Xabsl/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	one_build/salt/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_SOURCE_DIR	one_build/Action/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/AdvancedAgent/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/BehaviorControl/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Geometry/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/HeadControl/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Module/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Net/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Parser/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/RobotModel/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Trainer_Client/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Utilities/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/WorldModel/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/Xabsl/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
CMAKE_SOURCE_DIR	one_build/salt/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wenbin\/strive3D\/2.01\/strive3d_2.01$/;"	m
COMMONBASICBEHAVIORS_H	BehaviorControl/CommonBasicBehaviors.h	21;"	d
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	109;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	26;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	31;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	17;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	82;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	54;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	91;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	35;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_VERSION_TWEAK	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_TWEAK	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_TWEAK	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
CONF	Utilities/xmlParser.h	19;"	d
CONN_ON_READ	Net/socketstreambuf.hpp	/^            enum ConnType { CONN_ON_READ, NO_CONN };$/;"	e	enum:rcss::net::SocketStreamBuf::ConnType
CONVEXHULLMANAGER_H	WorldModel/convexhullmanager.h	21;"	d
CONVEXHULL_H	WorldModel/convexhull.h	21;"	d
CSTRING	Parser/cstring.h	/^} CSTRING;$/;"	t	typeref:struct:__cstring
CT_Destination	BehaviorControl/WalkPathPlanningControl.h	/^	CT_Destination$/;"	e	enum:CmdType
CT_JoyStick	BehaviorControl/WalkPathPlanningControl.h	/^	CT_JoyStick,$/;"	e	enum:CmdType
CT_MsgRcvd	BehaviorControl/WalkPathPlanningControl.h	/^	CT_MsgRcvd,$/;"	e	enum:CmdType
CT_NoMsg	BehaviorControl/WalkPathPlanningControl.h	/^	CT_NoMsg,$/;"	e	enum:CmdType
CT_WayPoint	BehaviorControl/WalkPathPlanningControl.h	/^	CT_WayPoint,$/;"	e	enum:CmdType
CalEndTrajectoryMatrix	Geometry/trajectory.cpp	/^void Trajectory::CalEndTrajectoryMatrix(float t)$/;"	f	class:Trajectory
CalStartTrajectoryMatrix	Geometry/trajectory.cpp	/^void Trajectory::CalStartTrajectoryMatrix(float t)$/;"	f	class:Trajectory
CalTrajectoryMatrix	Geometry/trajectory.cpp	/^void Trajectory::CalTrajectoryMatrix(float t)$/;"	f	class:Trajectory
CalWalkTrajectoryMatrix	Geometry/trajectory.cpp	/^void Trajectory::CalWalkTrajectoryMatrix(bool lefthold)$/;"	f	class:Trajectory
CalcAttenuationNoRotation	salt/matrix.cpp	/^void Matrix::CalcAttenuationNoRotation(const Vector3f &pos, float radius)$/;"	f	class:Matrix
CalcAttenuationWithRotation	salt/matrix.cpp	/^void Matrix::CalcAttenuationWithRotation(const Matrix &lightWorldMatrix, float radius)$/;"	f	class:Matrix
CalcCoM	RobotModel/robot.cpp	/^void Robot::CalcCoM()$/;"	f	class:Robot
CalcInfiniteFrustum	salt/matrix.cpp	/^void Matrix::CalcInfiniteFrustum(float left, float right, float bottom, float top, float zNear)$/;"	f	class:Matrix
CalcInfiniteProjection	salt/matrix.cpp	/^void Matrix::CalcInfiniteProjection(float width, float height, float fov, float zNear)$/;"	f	class:Matrix
CalcJacobian	RobotModel/robot.cpp	/^void Robot::CalcJacobian(float** J, const TIndex& idx)$/;"	f	class:Robot
CalcLegJointVel	RobotModel/nao.cpp	/^void Nao::CalcLegJointVel(const salt::Vector3f& vb, const salt::Vector3f& wb,$/;"	f	class:Nao
CalcLegJointVel	RobotModel/robot.h	/^    virtual void CalcLegJointVel(const salt::Vector3f& vb, const salt::Vector3f& wb,$/;"	f	class:Robot
CalcMC	RobotModel/robot.cpp	/^Vector3f Robot::CalcMC( int j )$/;"	f	class:Robot
CalcSpotLight	salt/matrix.cpp	/^void Matrix::CalcSpotLight(const Matrix &lightWorldTransform, float fov, float width, float height, float zNear)$/;"	f	class:Matrix
CalcVWerr	RobotModel/robot.cpp	/^void Robot::CalcVWerr(float err[6], const salt::Matrix& ref, const salt::Matrix& now)$/;"	f	class:Robot
CalculateVel	Action/NaoActionControl.cpp	/^void NaoActionControl::CalculateVel(JointID id, float angle, float maxVel)$/;"	f	class:NaoActionControl
CalculateVel	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::CalculateVel(JointID id, float angle, float maxVel)$/;"	f	class:NaoDynamicKickEngine
CalculateVel	Action/NaoGetUp.cpp	/^void NaoGetupEngine::CalculateVel(JointID id, float startAngle ,float endAngle, float maxVel)$/;"	f	class:NaoGetupEngine
CalculateVel	Action/NaoKick.cpp	/^void NaoKickEngine::CalculateVel(JointID id, float angle, float maxVel)$/;"	f	class:NaoKickEngine
CalculateVel	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::CalculateVel(JointID id, float angle, float maxVel)$/;"	f	class:NaoSpecialAction
CalculateVel	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::CalculateVel(JointID id, float angle, float maxVel)$/;"	f	class:NaoWalkingEngine
CalculateVel	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::CalculateVel(JointID id, float angle, float maxVel)$/;"	f	class:Strive3DGetupEngine
CalculateVel1	Action/NaoGetUp.cpp	/^void NaoGetupEngine::CalculateVel1(JointID id, float angle, float maxVel)$/;"	f	class:NaoGetupEngine
CalculateVel2	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::CalculateVel2(JointID id, float angle, float maxVel)$/;"	f	class:NaoDynamicKickEngine
CalculateVel2	Action/NaoGetUp.cpp	/^void NaoGetupEngine::CalculateVel2(JointID id, float foreangle ,float angle, float maxVel)$/;"	f	class:NaoGetupEngine
CalculateVel2	Action/NaoKick.cpp	/^void NaoKickEngine::CalculateVel2(JointID id, float angle, float maxVel)$/;"	f	class:NaoKickEngine
CalculateVel3	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::CalculateVel3(JointID id, float angle, float maxVel)$/;"	f	class:NaoDynamicKickEngine
CalculateVel3	Action/NaoKick.cpp	/^void NaoKickEngine::CalculateVel3(JointID id, float angle, float maxVel)$/;"	f	class:NaoKickEngine
CalculateVisionObjectLocalPos	WorldModel/worldmodel.cpp	/^void WorldModel::CalculateVisionObjectLocalPos()$/;"	f	class:WorldModel
CanLocalize	WorldModel/worldmodel.h	/^	bool CanLocalize() { return mCanLocalize; }$/;"	f	class:WorldModel
CauculateConvexHull	WorldModel/convexhull.cpp	/^void ConvexHull::CauculateConvexHull()$/;"	f	class:ConvexHull
CauculateOutPut	WorldModel/convexhullmanager.cpp	/^void ConvexHullManager::CauculateOutPut()$/;"	f	class:ConvexHullManager
Center	WorldModel/convexhull.h	/^		inline const Vector3f& Center() { return  mCenterPoint; }$/;"	f	class:ConvexHull
CenterDefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::CenterDefDecision()$/;"	f	class:Strive3DBehaviorControl
CenterOffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::CenterOffDecision()$/;"	f	class:Strive3DBehaviorControl
ChangeWalkParams	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::ChangeWalkParams(WalkRequest currentRequest)$/;"	f	class:NaoWalkingEngine
CheckingType	Net/socket.hpp	/^            enum CheckingType { CHECK, DONT_CHECK };$/;"	g	class:rcss::net::Socket
ClassifyBox	salt/plane.cpp	/^EPlaneSide Plane::ClassifyBox(const AABB3& bb) const$/;"	f	class:Plane
Clear	WorldModel/convexhull.h	/^		void Clear() { mPointList.clear(); }$/;"	f	class:ConvexHull
Clear	WorldModel/convexhullmanager.cpp	/^void ConvexHullManager::Clear()$/;"	f	class:ConvexHullManager
ClearanceKick	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::ClearanceKick()$/;"	f	class:Strive3DBehaviorControl
CmdType	BehaviorControl/WalkPathPlanningControl.h	/^enum CmdType$/;"	g
CoM	RobotModel/robot.h	/^	salt::Vector3f CoM;$/;"	m	class:Robot
CommonBasicBehaviors	BehaviorControl/CommonBasicBehaviors.h	/^    CommonBasicBehaviors(const BehaviorControlInterfaces& interfaces,$/;"	f	class:CommonBasicBehaviors
CommonBasicBehaviors	BehaviorControl/CommonBasicBehaviors.h	/^class CommonBasicBehaviors : public BehaviorControlInterfaces$/;"	c
CommunicateWithTeammate	BaseAgent.cpp	/^void BaseAgent::CommunicateWithTeammate()$/;"	f	class:BaseAgent
ConditionalDecimalExpression	Xabsl/XabslDecimalExpression.cpp	/^ConditionalDecimalExpression::ConditionalDecimalExpression(InputSource& input, $/;"	f	class:xabsl::ConditionalDecimalExpression
ConditionalDecimalExpression	Xabsl/XabslDecimalExpression.h	/^class ConditionalDecimalExpression : public DecimalExpression$/;"	c	namespace:xabsl
ConditionalEnumeratedExpression	Xabsl/XabslEnumeratedExpression.cpp	/^ConditionalEnumeratedExpression::ConditionalEnumeratedExpression(const Enumeration* enumeration,$/;"	f	class:xabsl::ConditionalEnumeratedExpression
ConditionalEnumeratedExpression	Xabsl/XabslEnumeratedExpression.h	/^class ConditionalEnumeratedExpression : public EnumeratedExpression$/;"	c	namespace:xabsl
ConnType	Net/socketstreambuf.hpp	/^            enum ConnType { CONN_ON_READ, NO_CONN };$/;"	g	class:rcss::net::SocketStreamBuf
ConnectErr	Net/exception.cpp	/^        ConnectErr::ConnectErr( int err ) throw()$/;"	f	class:rcss::net::ConnectErr
ConnectErr	Net/exception.hpp	/^        class ConnectErr$/;"	c	namespace:rcss::net
Constrain	Geometry/geometry.h	/^inline float Constrain(float value, float min, float max)$/;"	f
Contains	salt/bounds.cpp	/^bool BoundingSphere::Contains(const AABB3 &b) const$/;"	f	class:BoundingSphere
Contains	salt/bounds.h	/^    f_inline bool Contains(const AABB2 &b) const$/;"	f	class:salt::AABB2
Contains	salt/bounds.h	/^    f_inline bool Contains(const AABB3 &b) const$/;"	f	class:salt::AABB3
Contains	salt/bounds.h	/^    f_inline bool Contains(const BoundingSphere &s) const$/;"	f	class:salt::BoundingSphere
Contains	salt/bounds.h	/^    f_inline bool Contains(const Vector2f &v) const$/;"	f	class:salt::AABB2
Contains	salt/bounds.h	/^    f_inline bool Contains(const Vector3f &v) const$/;"	f	class:salt::AABB3
Contains	salt/bounds.h	/^    f_inline bool Contains(const Vector3f &v)$/;"	f	class:salt::BoundingSphere
ConvexHull	WorldModel/convexhull.cpp	/^ConvexHull::ConvexHull() : mCenterPoint(Vector3f(0, 0, 0))$/;"	f	class:ConvexHull
ConvexHull	WorldModel/convexhull.h	/^class ConvexHull$/;"	c
ConvexHullManager	WorldModel/convexhullmanager.cpp	/^ConvexHullManager::ConvexHullManager()$/;"	f	class:ConvexHullManager
ConvexHullManager	WorldModel/convexhullmanager.h	/^class ConvexHullManager$/;"	c
CoverTeammate	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::CoverTeammate(float dist)$/;"	f	class:Strive3DBehaviorControl
CoverTeammate	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::CoverTeammate(float dist, Vector2f offset)$/;"	f	class:Strive3DBehaviorControl
Cross	Geometry/geometry.cpp	/^float Cross(const Vector2f& O, const Vector2f& end1, const Vector2f& end2)$/;"	f
Cross	salt/tvector.h	/^    const TYPE Cross(const TVector<DATATYPE, 3, TYPE>& v) const$/;"	f	class:salt::TVector3
CurrentCycle	WorldModel/self.h	/^    int CurrentCycle;$/;"	m	class:Self
DEBUG	Utilities/Logger.h	47;"	d
DEBUG_NET	Net/Net.h	39;"	d
DEC	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
DEC	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
DEFAULTBALLAREA	WorldModel/ball.h	23;"	d
DEFAULTPLAYERAREA	WorldModel/player.cpp	23;"	d	file:
DIVINGSAVE1	Action/NaoSpecialAction.h	/^	{	DIVINGSAVE1,$/;"	e	enum:NaoSpecialAction::TPhaseForDivingSave
DIVINGSAVE2	Action/NaoSpecialAction.h	/^		DIVINGSAVE2,$/;"	e	enum:NaoSpecialAction::TPhaseForDivingSave
DIVINGSAVE3	Action/NaoSpecialAction.h	/^		DIVINGSAVE3,$/;"	e	enum:NaoSpecialAction::TPhaseForDivingSave
DONT_CHECK	Net/socket.hpp	/^            enum CheckingType { CHECK, DONT_CHECK };$/;"	e	enum:rcss::net::Socket::CheckingType
DRIBBLE	WorldModel/ball.h	/^		DRIBBLE		= 1,$/;"	e	enum:Ball::BallState
DYNAMICOBJECT_H	WorldModel/dynamicobject.h	19;"	d
DebugMsgParser	BehaviorControl/WalkPathPlanningControl.cpp	/^DebugMsgParser::DebugMsgParser() :$/;"	f	class:DebugMsgParser
DebugMsgParser	BehaviorControl/WalkPathPlanningControl.h	/^class DebugMsgParser$/;"	c
DebugObstacle	BehaviorControl/WalkPathPlanningControl.h	/^	DebugObstacle(Vector2f p, float r) :$/;"	f	class:DebugObstacle
DebugObstacle	BehaviorControl/WalkPathPlanningControl.h	/^	DebugObstacle(const DebugObstacle& other) :$/;"	f	class:DebugObstacle
DebugObstacle	BehaviorControl/WalkPathPlanningControl.h	/^class DebugObstacle$/;"	c
DebugWayPoint	BehaviorControl/WalkPathPlanningControl.h	/^	DebugWayPoint(Vector2f p, bool pa = false):$/;"	f	class:DebugWayPoint
DebugWayPoint	BehaviorControl/WalkPathPlanningControl.h	/^	DebugWayPoint(const DebugWayPoint& other) :$/;"	f	class:DebugWayPoint
DebugWayPoint	BehaviorControl/WalkPathPlanningControl.h	/^class DebugWayPoint$/;"	c
DecimalExpression	Xabsl/XabslDecimalExpression.h	/^class DecimalExpression$/;"	c	namespace:xabsl
DecimalInputSymbol	Xabsl/XabslSymbols.h	/^  DecimalInputSymbol(const char* name, const double* pVariable, ErrorHandler& errorHandler)$/;"	f	class:xabsl::DecimalInputSymbol
DecimalInputSymbol	Xabsl/XabslSymbols.h	/^  DecimalInputSymbol(const char* name,$/;"	f	class:xabsl::DecimalInputSymbol
DecimalInputSymbol	Xabsl/XabslSymbols.h	/^class DecimalInputSymbol : public InputSymbol<double>$/;"	c	namespace:xabsl
DecimalInputSymbolRef	Xabsl/XabslDecimalExpression.cpp	/^DecimalInputSymbolRef::DecimalInputSymbolRef(InputSource& input, $/;"	f	class:xabsl::DecimalInputSymbolRef
DecimalInputSymbolRef	Xabsl/XabslDecimalExpression.h	/^class DecimalInputSymbolRef : public DecimalExpression$/;"	c	namespace:xabsl
DecimalOptionParameterRef	Xabsl/XabslDecimalExpression.cpp	/^DecimalOptionParameterRef::DecimalOptionParameterRef(InputSource& input, $/;"	f	class:xabsl::DecimalOptionParameterRef
DecimalOptionParameterRef	Xabsl/XabslDecimalExpression.h	/^class DecimalOptionParameterRef : public DecimalExpression$/;"	c	namespace:xabsl
DecimalOutputSymbol	Xabsl/XabslSymbols.h	/^  DecimalOutputSymbol(const char* name, FunctionProvider* pInstance,$/;"	f	class:xabsl::DecimalOutputSymbol
DecimalOutputSymbol	Xabsl/XabslSymbols.h	/^  DecimalOutputSymbol(const char* name, double* pVariable)$/;"	f	class:xabsl::DecimalOutputSymbol
DecimalOutputSymbol	Xabsl/XabslSymbols.h	/^class DecimalOutputSymbol : public OutputSymbol<double>$/;"	c	namespace:xabsl
DecimalOutputSymbolRef	Xabsl/XabslDecimalExpression.cpp	/^DecimalOutputSymbolRef::DecimalOutputSymbolRef(InputSource& input, $/;"	f	class:xabsl::DecimalOutputSymbolRef
DecimalOutputSymbolRef	Xabsl/XabslDecimalExpression.h	/^class DecimalOutputSymbolRef : public DecimalExpression$/;"	c	namespace:xabsl
DecimalValue	Xabsl/XabslDecimalExpression.cpp	/^DecimalValue::DecimalValue(InputSource& input, $/;"	f	class:xabsl::DecimalValue
DecimalValue	Xabsl/XabslDecimalExpression.h	/^  DecimalValue(double value) : value(value) {}$/;"	f	class:xabsl::DecimalValue
DecimalValue	Xabsl/XabslDecimalExpression.h	/^class DecimalValue : public DecimalExpression$/;"	c	namespace:xabsl
Decision	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool	Strive3DBehaviorControl::Decision()$/;"	f	class:Strive3DBehaviorControl
DefaultPoint	WorldModel/ball.cpp	/^const Vector3f Ball::DefaultPoint[8] = {	$/;"	m	class:Ball	file:
DefaultPoint	WorldModel/ball.h	/^	static const Vector3f DefaultPoint[8];$/;"	m	class:Ball
DefenceState	BehaviorControl/Strive3DBehaviorControl.h	/^	enum DefenceState$/;"	g	class:Strive3DBehaviorControl
DefensiveDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool	Strive3DBehaviorControl::DefensiveDecision()$/;"	f	class:Strive3DBehaviorControl
DestPos	AdvancedAgent/PathPlanning.h	/^	Vector2f DestPos;$/;"	m	class:PathPlanning
Direction	Action/ActionRequest.h	/^    float Direction;$/;"	m	class:KickRequest
DisPallSeg	WorldModel/convexhullmanager.cpp	/^float DisPallSeg ( Vector3f& p1, Vector3f& p2, Vector3f& p3, Vector3f& p4 )$/;"	f
DisPointToSeg	WorldModel/convexhullmanager.cpp	/^float DisPointToSeg ( Vector3f& p1, Vector3f& p2, Vector3f& p3 )$/;"	f
DistTowConvexHulls	WorldModel/convexhullmanager.cpp	/^float ConvexHullManager::DistTowConvexHulls(ConvexHull& ch1, ConvexHull& ch2)$/;"	f	class:ConvexHullManager
DistanceToLine	Geometry/geometry.cpp	/^float DistanceToLine(const Vector2f& p, const Vector2f& lineStart,$/;"	f
DivideOperator	Xabsl/XabslDecimalExpression.h	/^class DivideOperator : public ArithmeticOperator$/;"	c	namespace:xabsl
DivingAction	Action/NaoSpecialAction.h	/^	{	DivingAction,$/;"	e	enum:NaoSpecialAction::State
DivingSave	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::DivingSave()$/;"	f	class:NaoSpecialAction
DivingSave	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::DivingSave(bool left)$/;"	f	class:Strive3DBehaviorControl
DoAction	Action/NaoActionControl.cpp	/^void NaoActionControl::DoAction()$/;"	f	class:NaoActionControl
Done	Net/Net.cpp	/^void Net::Done()$/;"	f	class:Net
Dot	Geometry/geometry.cpp	/^float Dot(const Vector2f& O, const Vector2f& end1, const Vector2f& end2)$/;"	f
Dot	salt/tvector.h	/^f_inline DATATYPE TVector<DATATYPE, ELEMENTS, TYPE>::Dot(const TYPE& v) const$/;"	f	class:salt::TVector
DribblePlan	AdvancedAgent/DribblePlan.cpp	/^DribblePlan::DribblePlan()$/;"	f	class:DribblePlan
DribblePlan	AdvancedAgent/DribblePlan.h	/^class DribblePlan:public Plan$/;"	c
DribbleTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::DribbleTo(salt::Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
Ds	Action/NaoWalkingEngine.h	/^	float Ds;$/;"	m	class:NaoWalkingEngine
Ds	Geometry/trajectory.h	/^    float Ds;$/;"	m	class:Trajectory
DsfromWalkingEngine	WorldModel/self.h	/^    Vector3f DsfromWalkingEngine;\/\/for localization$/;"	m	class:Self
Dump	salt/frustum.cpp	/^void Frustum::Dump() const$/;"	f	class:Frustum
Dump	salt/matrix.cpp	/^void Matrix::Dump() const$/;"	f	class:Matrix
Dump	salt/tvector.h	/^inline void TVector<DATATYPE, ELEMENTS, TYPE>::Dump() const$/;"	f	class:salt::TVector
DynamicObject	WorldModel/dynamicobject.h	/^	DynamicObject():mIsValid(false){}$/;"	f	class:DynamicObject
DynamicObject	WorldModel/dynamicobject.h	/^class DynamicObject$/;"	c
EFallDir	types.h	/^enum EFallDir$/;"	g
ENaoModel	WorldModel/self.h	/^        ENaoModel,$/;"	e	enum:Self::ERobotModel
EPlane	salt/plane.h	/^enum EPlane$/;"	g	namespace:salt
EPlaneSide	salt/plane.h	/^enum EPlaneSide$/;"	g	namespace:salt
ERobotModel	WorldModel/self.h	/^    enum ERobotModel$/;"	g	class:Self
ESoccerbotModel	WorldModel/self.h	/^        ESoccerbotModel$/;"	e	enum:Self::ERobotModel
EUnknownModel	WorldModel/self.h	/^        EUnknownModel,$/;"	e	enum:Self::ERobotModel
El	salt/matrix.h	/^    f_inline const float& El(int inRow, int inColumn) const {   return m[inColumn*4 + inRow];   }$/;"	f	class:salt::Matrix
El	salt/matrix.h	/^    f_inline float& El(int inRow, int inColumn) {       return m[inColumn*4 + inRow];   }$/;"	f	class:salt::Matrix
El	salt/tvector.h	/^    DATATYPE& El(int index)$/;"	f	class:salt::TVector
El	salt/tvector.h	/^    const DATATYPE& El(int index) const$/;"	f	class:salt::TVector
ElbowMass	RobotModel/nao.h	/^	float ElbowMass;$/;"	m	class:Nao
ElbowRelUpperarm_X	RobotModel/nao.h	/^	float ElbowRelUpperarm_X;$/;"	m	class:Nao
ElbowRelUpperarm_Y	RobotModel/nao.h	/^	float ElbowRelUpperarm_Y;$/;"	m	class:Nao
ElbowRelUpperarm_Z	RobotModel/nao.h	/^	float ElbowRelUpperarm_Z;$/;"	m	class:Nao
Empty	WorldModel/convexhull.h	/^		inline bool Empty() { return mPointList.empty(); }$/;"	f	class:ConvexHull
Encapsulate	salt/bounds.cpp	/^void BoundingSphere::Encapsulate(const Vector3f &v)$/;"	f	class:BoundingSphere
Encapsulate	salt/bounds.h	/^    f_inline void Encapsulate(const AABB2 &box)$/;"	f	class:salt::AABB2
Encapsulate	salt/bounds.h	/^    f_inline void Encapsulate(const AABB3 &box)$/;"	f	class:salt::AABB3
Encapsulate	salt/bounds.h	/^    f_inline void Encapsulate(const Vector2f &v)$/;"	f	class:salt::AABB2
Encapsulate	salt/bounds.h	/^    f_inline void Encapsulate(const Vector3f &v)$/;"	f	class:salt::AABB3
Encapsulate	salt/bounds.h	/^    f_inline void Encapsulate(const float x, const float y)$/;"	f	class:salt::AABB2
Encapsulate	salt/bounds.h	/^    f_inline void Encapsulate(const float x, const float y, const float z)$/;"	f	class:salt::AABB3
EncapsulateFast	salt/bounds.h	/^    f_inline void EncapsulateFast(const Vector3f &v)$/;"	f	class:salt::BoundingSphere
Engine	Xabsl/XabslEngine.cpp	/^Engine::Engine(ErrorHandler& e,unsigned long (*pTimeFunction)())$/;"	f	class:xabsl::Engine
Engine	Xabsl/XabslEngine.h	/^class Engine : public Symbols$/;"	c	namespace:xabsl
EntryTime	Module/Module.h	/^	unsigned long EntryTime;$/;"	m	class:Module
EnumElement	Xabsl/XabslSymbols.h	/^  EnumElement(const char* name, int value)$/;"	f	class:xabsl::EnumElement
EnumElement	Xabsl/XabslSymbols.h	/^class EnumElement : public NamedItem$/;"	c	namespace:xabsl
EnumeratedExpression	Xabsl/XabslEnumeratedExpression.h	/^class EnumeratedExpression$/;"	c	namespace:xabsl
EnumeratedInputSymbol	Xabsl/XabslSymbols.h	/^  EnumeratedInputSymbol(const char* name, Enumeration* enumeration, FunctionProvider* pInstance,$/;"	f	class:xabsl::EnumeratedInputSymbol
EnumeratedInputSymbol	Xabsl/XabslSymbols.h	/^  EnumeratedInputSymbol(const char* name, Enumeration* enumeration, const int* pVariable, $/;"	f	class:xabsl::EnumeratedInputSymbol
EnumeratedInputSymbol	Xabsl/XabslSymbols.h	/^class EnumeratedInputSymbol : public InputSymbol<int>$/;"	c	namespace:xabsl
EnumeratedInputSymbolComparison	Xabsl/XabslBooleanExpression.cpp	/^EnumeratedInputSymbolComparison::EnumeratedInputSymbolComparison(InputSource& input,$/;"	f	class:xabsl::EnumeratedInputSymbolComparison
EnumeratedInputSymbolComparison	Xabsl/XabslBooleanExpression.h	/^class EnumeratedInputSymbolComparison : public BooleanExpression$/;"	c	namespace:xabsl
EnumeratedInputSymbolRef	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedInputSymbolRef::EnumeratedInputSymbolRef(const Enumeration* enumeration,$/;"	f	class:xabsl::EnumeratedInputSymbolRef
EnumeratedInputSymbolRef	Xabsl/XabslEnumeratedExpression.h	/^class EnumeratedInputSymbolRef : public EnumeratedExpression$/;"	c	namespace:xabsl
EnumeratedOptionParameterRef	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedOptionParameterRef::EnumeratedOptionParameterRef(const Enumeration* enumeration,$/;"	f	class:xabsl::EnumeratedOptionParameterRef
EnumeratedOptionParameterRef	Xabsl/XabslEnumeratedExpression.h	/^class EnumeratedOptionParameterRef : public EnumeratedExpression$/;"	c	namespace:xabsl
EnumeratedOutputSymbol	Xabsl/XabslSymbols.h	/^  EnumeratedOutputSymbol(const char* name, Enumeration* enumeration, FunctionProvider* pInstance,$/;"	f	class:xabsl::EnumeratedOutputSymbol
EnumeratedOutputSymbol	Xabsl/XabslSymbols.h	/^  EnumeratedOutputSymbol(const char* name, Enumeration* enumeration, int* pVariable)$/;"	f	class:xabsl::EnumeratedOutputSymbol
EnumeratedOutputSymbol	Xabsl/XabslSymbols.h	/^class EnumeratedOutputSymbol : public OutputSymbol<int>$/;"	c	namespace:xabsl
EnumeratedOutputSymbolRef	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedOutputSymbolRef::EnumeratedOutputSymbolRef(const Enumeration* enumeration,$/;"	f	class:xabsl::EnumeratedOutputSymbolRef
EnumeratedOutputSymbolRef	Xabsl/XabslEnumeratedExpression.h	/^class EnumeratedOutputSymbolRef : public EnumeratedExpression$/;"	c	namespace:xabsl
EnumeratedValue	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedValue::EnumeratedValue(const Enumeration* enumeration,$/;"	f	class:xabsl::EnumeratedValue
EnumeratedValue	Xabsl/XabslEnumeratedExpression.h	/^  EnumeratedValue(const Enumeration* enumeration, int value) : $/;"	f	class:xabsl::EnumeratedValue
EnumeratedValue	Xabsl/XabslEnumeratedExpression.h	/^class EnumeratedValue : public EnumeratedExpression$/;"	c	namespace:xabsl
Enumeration	Xabsl/XabslSymbols.h	/^  Enumeration(const char* name) : NamedItem(name) {};$/;"	f	class:xabsl::Enumeration
Enumeration	Xabsl/XabslSymbols.h	/^class Enumeration : public NamedItem$/;"	c	namespace:xabsl
EqualToOperator	Xabsl/XabslBooleanExpression.h	/^class EqualToOperator : public RelationalAndEqualityOperator$/;"	c	namespace:xabsl
Error	Net/addr.hpp	/^            enum Error { eADDR_OK, eSERV_NOT_FOUND, eHOST_NOT_FOUND };$/;"	g	class:rcss::net::Addr
ErrorHandler	Xabsl/XabslTools.h	/^  ErrorHandler() : errorsOccurred(false) {};$/;"	f	class:xabsl::ErrorHandler
ErrorHandler	Xabsl/XabslTools.h	/^class ErrorHandler$/;"	c	namespace:xabsl
ExponentialRNG	salt/random.h	/^    ExponentialRNG(double lambda = RealType(1))$/;"	f	class:salt::ExponentialRNG
ExponentialRNG	salt/random.h	/^class ExponentialRNG : public boost::exponential_distribution<salt::RandomEngine>$/;"	c	namespace:salt
ExponentialRNG	salt/random.h	/^class ExponentialRNG : public boost::variate_generator<salt::RandomEngine,$/;"	c	namespace:salt
FALL_BACK	types.h	/^    FALL_BACK,$/;"	e	enum:EFallDir
FALL_FRONT	types.h	/^    FALL_FRONT,$/;"	e	enum:EFallDir
FALL_LEFT	types.h	/^    FALL_LEFT,$/;"	e	enum:EFallDir
FALL_RIGHT	types.h	/^    FALL_RIGHT$/;"	e	enum:EFallDir
FASTSPEEDLOWERTHRESHOLD	WorldModel/player.h	25;"	d
FASTSPEEDUPERTHRESHOLD	WorldModel/player.h	24;"	d
FASTWALK	WorldModel/player.h	/^	FASTWALK	= 2,$/;"	e	enum:PlayerState
FIELDINFO_H	WorldModel/fieldinfo.h	19;"	d
FIELD_FILL	Utilities/Logger.h	39;"	d
FIELD_WIDTH	Utilities/Logger.h	41;"	d
FIRST_STEP	Action/NaoWalkingEngine.h	/^        FIRST_STEP,$/;"	e	enum:NaoWalkingEngine::TPhase
FLAG_1_L	types.h	/^    FLAG_1_L    = 0,$/;"	e	enum:VisionObject
FLAG_1_R	types.h	/^    FLAG_1_R    = 1,$/;"	e	enum:VisionObject
FLAG_2_L	types.h	/^    FLAG_2_L    = 2,$/;"	e	enum:VisionObject
FLAG_2_R	types.h	/^    FLAG_2_R    = 3,$/;"	e	enum:VisionObject
FLOAT_EPS	Geometry/trajectory.cpp	21;"	d	file:
FS_INSIDE	salt/frustum.h	/^        FS_INSIDE  = 0,$/;"	e	enum:salt::Frustum::eFrustumSide
FS_OUTSIDE	salt/frustum.h	/^        FS_OUTSIDE = 1,$/;"	e	enum:salt::Frustum::eFrustumSide
FS_SPLIT	salt/frustum.h	/^        FS_SPLIT   = 2$/;"	e	enum:salt::Frustum::eFrustumSide
FieldInfo	WorldModel/fieldinfo.cpp	/^FieldInfo::FieldInfo() :$/;"	f	class:FieldInfo
FieldInfo	WorldModel/fieldinfo.h	/^class FieldInfo$/;"	c
Fill	salt/tvector.h	/^f_inline const TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::Fill(const DATATYPE& fill)$/;"	f	class:salt::TVector
FindNextPoint	WorldModel/convexhull.cpp	/^list<Vector3f>::iterator ConvexHull::FindNextPoint(list<Vector3f>::iterator currentpoint, float currentangle)$/;"	f	class:ConvexHull
FindRoute	RobotModel/robot.cpp	/^Robot::TIndex Robot::FindRoute(int to)$/;"	f	class:Robot
FirstStep	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::FirstStep()$/;"	f	class:NaoWalkingEngine
FootHeight	RobotModel/nao.h	/^    float FootHeight;$/;"	m	class:Nao
FootLength	RobotModel/nao.h	/^    float FootLength;$/;"	m	class:Nao
FootMass	RobotModel/nao.h	/^    float FootMass;$/;"	m	class:Nao
FootOffset_X	Geometry/trajectory.h	/^    float FootOffset_X;$/;"	m	class:Trajectory
FootRelAnkle_X	RobotModel/nao.h	/^    float FootRelAnkle_X;$/;"	m	class:Nao
FootRelAnkle_Y	RobotModel/nao.h	/^    float FootRelAnkle_Y;$/;"	m	class:Nao
FootRelAnkle_Z	RobotModel/nao.h	/^    float FootRelAnkle_Z;$/;"	m	class:Nao
FootWidth	RobotModel/nao.h	/^    float FootWidth;$/;"	m	class:Nao
Force	Action/ActionRequest.h	/^    float Force;$/;"	m	class:KickRequest
Forward	salt/matrix.h	/^    f_inline Vector3f & Forward()                       { return *(Vector3f*)  &El(0, 2); }$/;"	f	class:salt::Matrix
Forward	salt/matrix.h	/^    f_inline const Vector3f &   Forward() const         { return *(const Vector3f*) &El(0, 2); }$/;"	f	class:salt::Matrix
Forward1DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Forward1DefDecision()$/;"	f	class:Strive3DBehaviorControl
Forward1OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Forward1OffDecision()$/;"	f	class:Strive3DBehaviorControl
Forward2DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Forward2DefDecision()$/;"	f	class:Strive3DBehaviorControl
Forward2OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Forward2OffDecision()$/;"	f	class:Strive3DBehaviorControl
ForwardKinematics	RobotModel/robot.cpp	/^void Robot::ForwardKinematics(int j)$/;"	f	class:Robot
ForwardKinematicsForCamera	RobotModel/robot.cpp	/^void Robot::ForwardKinematicsForCamera(int j)$/;"	f	class:Robot
ForwardVelocity	RobotModel/robot.cpp	/^void Robot::ForwardVelocity(int j)$/;"	f	class:Robot
Frustum	salt/frustum.h	/^class Frustum$/;"	c	namespace:salt
FunctionProvider	Xabsl/XabslSymbols.h	/^class FunctionProvider {$/;"	c	namespace:xabsl
FuzzyControl	BehaviorControl/Strive3DBehaviorControl.cpp	/^float Strive3DBehaviorControl::FuzzyControl(float distance,float angle)$/;"	f	class:Strive3DBehaviorControl
GETUP	Action/NaoGetUp.h	/^	{	GETUP,$/;"	e	enum:NaoGetupEngine::State
GETUP	Action/Strive3DGetUp.h	/^	{	GETUP,$/;"	e	enum:Strive3DGetupEngine::State
GETUP1	Action/NaoGetUp.h	/^	{	GETUP1,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUP1	Action/Strive3DGetUp.h	/^	{	GETUP1,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUp
GETUP2	Action/NaoGetUp.h	/^		GETUP2,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUP2	Action/Strive3DGetUp.h	/^		GETUP2,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUp
GETUP3	Action/NaoGetUp.h	/^		GETUP3,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUP3	Action/Strive3DGetUp.h	/^		GETUP3,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUp
GETUP4	Action/NaoGetUp.h	/^		GETUP4,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUP4	Action/Strive3DGetUp.h	/^		GETUP4,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUp
GETUP5	Action/NaoGetUp.h	/^		GETUP5,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUP5	Action/Strive3DGetUp.h	/^		GETUP5,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUp
GETUP6	Action/NaoGetUp.h	/^		GETUP6,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUP6	Action/Strive3DGetUp.h	/^		GETUP6,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUp
GETUP7	Action/NaoGetUp.h	/^		GETUP7$/;"	e	enum:NaoGetupEngine::TPhaseForGetUp
GETUPENGINESELECTOR_H	Action/GetUpEngineSelector.h	22;"	d
GETUPENGINE_H	Action/GetUpEngine.h	22;"	d
GETUPFB1	Action/NaoGetUp.h	/^	{	GETUPFB1,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUpFromBack
GETUPFB1	Action/Strive3DGetUp.h	/^	{	GETUPFB1,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUpFromBack
GETUPFB2	Action/NaoGetUp.h	/^		GETUPFB2,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUpFromBack
GETUPFB2	Action/Strive3DGetUp.h	/^		GETUPFB2,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUpFromBack
GETUPFB3	Action/NaoGetUp.h	/^		GETUPFB3,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUpFromBack
GETUPFB3	Action/Strive3DGetUp.h	/^		GETUPFB3,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUpFromBack
GETUPFB4	Action/NaoGetUp.h	/^		GETUPFB4,$/;"	e	enum:NaoGetupEngine::TPhaseForGetUpFromBack
GETUPFB4	Action/Strive3DGetUp.h	/^		GETUPFB4,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUpFromBack
GETUPFB5	Action/NaoGetUp.h	/^		GETUPFB5$/;"	e	enum:NaoGetupEngine::TPhaseForGetUpFromBack
GETUPFB5	Action/Strive3DGetUp.h	/^		GETUPFB5,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUpFromBack
GETUPFB6	Action/Strive3DGetUp.h	/^		GETUPFB6,$/;"	e	enum:Strive3DGetupEngine::TPhaseForGetUpFromBack
GETUPFROMBACK	Action/NaoGetUp.h	/^		GETUPFROMBACK,$/;"	e	enum:NaoGetupEngine::State
GETUPFROMBACK	Action/Strive3DGetUp.h	/^		GETUPFROMBACK,$/;"	e	enum:Strive3DGetupEngine::State
GH_FIRST	soccertypes.h	/^    GH_FIRST = 1,$/;"	e	enum:TGameHalf
GH_NONE	soccertypes.h	/^    GH_NONE = 0,$/;"	e	enum:TGameHalf
GH_SECOND	soccertypes.h	/^    GH_SECOND = 2$/;"	e	enum:TGameHalf
GOAL_1_L	types.h	/^    GOAL_1_L    = 4,$/;"	e	enum:VisionObject
GOAL_1_R	types.h	/^    GOAL_1_R    = 5,$/;"	e	enum:VisionObject
GOAL_2_L	types.h	/^    GOAL_2_L    = 6,$/;"	e	enum:VisionObject
GOAL_2_R	types.h	/^    GOAL_2_R    = 7,$/;"	e	enum:VisionObject
General	Geometry/MatrixSpline.cpp	/^bool MatrixSpline::General()$/;"	f	class:MatrixSpline
General	Geometry/spline.cpp	/^bool Spline::General()$/;"	f	class:Spline
General	Geometry/trajectory.cpp	/^bool Trajectory::General()$/;"	f	class:Trajectory
GeneralActionCommand	Action/NaoActionControl.cpp	/^void NaoActionControl::GeneralActionCommand()$/;"	f	class:NaoActionControl
GeneralTrajectory	Action/NaoWalkingEngine.cpp	/^bool NaoWalkingEngine::GeneralTrajectory()$/;"	f	class:NaoWalkingEngine
Get	salt/tvector.h	/^    f_inline DATATYPE& Get(int row) { return El(row); }$/;"	f	class:salt::TVector
Get	salt/tvector.h	/^    f_inline const DATATYPE& Get(int row) const { return El(row); }$/;"	f	class:salt::TVector
GetAcceleration	WorldModel/self.cpp	/^Vector3f Self::GetAcceleration() const$/;"	f	class:Self
GetActionCommand	Action/GetUpEngine.h	/^	virtual std::string GetActionCommand() {return "";};$/;"	f	class:GetupEngine
GetActionCommand	Action/KickEngine.h	/^	virtual std::string GetActionCommand() {return "";};$/;"	f	class:KickEngine
GetActionCommand	Action/NaoActionControl.h	/^    virtual std::string GetActionCommand()$/;"	f	class:NaoActionControl
GetActionCommand	Action/SpecialAction.h	/^	virtual std::string GetActionCommand() {return "";};$/;"	f	class:SpecialAction
GetActionCommand	Action/WalkingEngine.h	/^	virtual std::string GetActionCommand() {return "";};$/;"	f	class:WalkingEngine
GetActionCommand	BehaviorControl/NaoBehaviorControl.h	/^    virtual std::string GetActionCommand() {return "";}$/;"	f	class:NaoBehaviorControl
GetActionCommand	BehaviorControl/Strive3DBehaviorControl.h	/^	virtual std::string GetActionCommand() {return "";}$/;"	f	class:Strive3DBehaviorControl
GetActionCommand	BehaviorControl/WalkPathPlanningControl.h	/^    	virtual std::string GetActionCommand() {return "";}$/;"	f	class:WalkPathPlanningControl
GetActionCommand	HeadControl/NaoHeadControl.h	/^    virtual std::string GetActionCommand() {return "";}$/;"	f	class:NaoHeadControl
GetAngleDeg	salt/vector.h	/^    float           GetAngleDeg() const$/;"	f	class:salt::Vector2f
GetAngleRad	salt/vector.h	/^    float           GetAngleRad() const$/;"	f	class:salt::Vector2f
GetBallDistance	WorldModel/ball.h	/^	inline const double GetBallDistance()$/;"	f	class:Ball
GetBallLocalPos	WorldModel/ball.h	/^	inline const Vector3f GetBallLocalPos()$/;"	f	class:Ball
GetBallPhi	WorldModel/ball.h	/^	inline const double GetBallPhi()$/;"	f	class:Ball
GetBallPosByCommunication	WorldModel/ball.h	/^	inline const Vector3f GetBallPosByCommunication()$/;"	f	class:Ball
GetBallTheta	WorldModel/ball.h	/^	inline const double GetBallTheta()$/;"	f	class:Ball
GetCommand	BaseAgent.cpp	/^const string& BaseAgent::GetCommand() const$/;"	f	class:BaseAgent
GetConvexHull	WorldModel/convexhullmanager.h	/^	vector< vector<Vector3f> > & GetConvexHull() { return mOutput; }$/;"	f	class:ConvexHullManager
GetCycle	BaseAgent.cpp	/^int BaseAgent::GetCycle() const$/;"	f	class:BaseAgent
GetData	salt/tvector.h	/^    f_inline DATATYPE* GetData()$/;"	f	class:salt::TVector
GetDepth	salt/bounds.h	/^    f_inline float GetDepth() const$/;"	f	class:salt::AABB3
GetDistanceTo	salt/plane.h	/^    f_inline float              GetDistanceTo(const Vector3f &v) const$/;"	f	class:salt::Plane
GetDominantPlane	salt/plane.h	/^    f_inline EPlane             GetDominantPlane() const                                                                        { return (gAbs(normal.y()) > gAbs(normal.x()) ? (gAbs(normal.z()) > gAbs(normal.y()) ? PLANE_XY : PLANE_XZ) : (gAbs(normal.z()) > gAbs(normal.x()) ? PLANE_XY : PLANE_YZ)); }$/;"	f	class:salt::Plane
GetDs	Geometry/trajectory.h	/^    float GetDs() const { return Ds; }$/;"	f	class:Trajectory
GetEndTrajectoryMatrix	Geometry/trajectory.cpp	/^bool Trajectory::GetEndTrajectoryMatrix(float t,$/;"	f	class:Trajectory
GetFootTheta	Geometry/trajectory.cpp	/^float Trajectory::GetFootTheta(float t, int der) const$/;"	f	class:Trajectory
GetFootX	Geometry/trajectory.cpp	/^float Trajectory::GetFootX(float t, int der) const$/;"	f	class:Trajectory
GetFootZ	Geometry/trajectory.cpp	/^float Trajectory::GetFootZ(float t, int der) const$/;"	f	class:Trajectory
GetHeadGloblePosition	WorldModel/player.h	/^	inline const Vector3f &  	GetHeadGloblePosition() { return mGlobleLimb.head; }$/;"	f	class:Player
GetHeadLocalPosition	WorldModel/player.h	/^	inline const Vector3f &	GetHeadLocalPosition() { return mLocalLimb.head; }$/;"	f	class:Player
GetHeight	salt/bounds.h	/^    f_inline float              GetHeight() const$/;"	f	class:salt::AABB3
GetHeight	salt/bounds.h	/^    f_inline float          GetHeight() const$/;"	f	class:salt::AABB2
GetHipTheta	Geometry/trajectory.cpp	/^float Trajectory::GetHipTheta(float t, int der) const$/;"	f	class:Trajectory
GetHipX	Geometry/trajectory.cpp	/^float Trajectory::GetHipX(float t, int der) const$/;"	f	class:Trajectory
GetHipZ	Geometry/trajectory.cpp	/^float Trajectory::GetHipZ(float t, int der) const$/;"	f	class:Trajectory
GetIKJointAngle	RobotModel/robot.cpp	/^boost::shared_array<float> Robot::GetIKJointAngle() const$/;"	f	class:Robot
GetIKJointVel	RobotModel/robot.cpp	/^boost::shared_array<float> Robot::GetIKJointVel() const$/;"	f	class:Robot
GetIdentity	salt/matrix.h	/^    static float* GetIdentity() { return mIdentity; }$/;"	f	class:salt::Matrix
GetJointMax	RobotModel/robot.h	/^    JointID GetJointMax() const { return JID_MAX; }$/;"	f	class:Robot
GetJointMin	RobotModel/robot.h	/^    JointID GetJointMin() const { return JID_MIN; }$/;"	f	class:Robot
GetLeftArmGloblePosition	WorldModel/player.h	/^	inline const Vector3f &  	GetLeftArmGloblePosition() { return mGlobleLimb.leftarm; }$/;"	f	class:Player
GetLeftArmLocalPosition	WorldModel/player.h	/^	inline const Vector3f & 	GetLeftArmLocalPosition() { return mLocalLimb.leftarm; }$/;"	f	class:Player
GetLeftFootGloblePosition	WorldModel/player.h	/^	inline const Vector3f &  	GetLeftFootGloblePosition() { return mGlobleLimb.leftfoot; }$/;"	f	class:Player
GetLeftFootLocalPosition	WorldModel/player.h	/^	inline const Vector3f &  	GetLeftFootLocalPosition() { return mLocalLimb.leftfoot; }$/;"	f	class:Player
GetLink	RobotModel/robot.cpp	/^shared_array<Robot::Link> Robot::GetLink() const$/;"	f	class:Robot
GetMatrixRotateXRad	Geometry/geometry.cpp	/^float GetMatrixRotateXRad(const salt::Matrix &m)$/;"	f
GetMatrixRotateYRad	Geometry/geometry.cpp	/^float GetMatrixRotateYRad(const salt::Matrix &m)$/;"	f
GetMatrixRotateZRad	Geometry/geometry.cpp	/^float GetMatrixRotateZRad(const salt::Matrix &m)$/;"	f
GetMessage	Net/Net.cpp	/^bool Net::GetMessage ( string& msg )$/;"	f	class:Net
GetMiddle	salt/bounds.h	/^    f_inline Vector2f       GetMiddle() const$/;"	f	class:salt::AABB2
GetMiddle	salt/bounds.h	/^    f_inline Vector3f   GetMiddle() const$/;"	f	class:salt::AABB3
GetModelFileName	WorldModel/self.cpp	/^string Self::GetModelFileName() const$/;"	f	class:Self
GetName	WorldModel/player.h	/^	inline std::string GetName() const { return mName; }$/;"	f	class:Player
GetNameErr	Net/exception.cpp	/^        GetNameErr::GetNameErr( int err ) throw()$/;"	f	class:rcss::net::GetNameErr
GetNameErr	Net/exception.hpp	/^        class GetNameErr$/;"	c	namespace:rcss::net
GetNextIterator	WorldModel/convexhullmanager.h	/^	inline list<Vector3f>::iterator GetNextIterator(list<Vector3f> & List, list<Vector3f>::iterator Current)$/;"	f	class:ConvexHullManager
GetOrientation	salt/plane.h	/^    f_inline EPlaneSide GetOrientation(const Vector3f &v, float delta=0.0001f) const    { float dist=normal.Dot(v)+d; if (dist<-delta) return PLANESIDE_BACK; if (dist>delta) return PLANESIDE_FRONT; return PLANESIDE_ONPLANE;  }$/;"	f	class:salt::Plane
GetPointList	WorldModel/convexhull.h	/^		inline const list<Vector3f> & GetPointList() { return mPointList; }$/;"	f	class:ConvexHull
GetProjectionDistance	Geometry/geometry.cpp	/^float GetProjectionDistance(const Vector2f& p, const Vector2f& lineStart,$/;"	f
GetRadius	salt/bounds.h	/^    f_inline float          GetRadius() const$/;"	f	class:salt::AABB2
GetRadius	salt/bounds.h	/^    f_inline float          GetRadius() const$/;"	f	class:salt::AABB3
GetRightArmGloblePosition	WorldModel/player.h	/^	inline const Vector3f &  	GetRightArmGloblePosition() { return mGlobleLimb.rightarm; }$/;"	f	class:Player
GetRightArmLocalPosition	WorldModel/player.h	/^	inline const Vector3f &  	GetRightArmLocalPosition() { return mLocalLimb.rightarm; }$/;"	f	class:Player
GetRightFootGloblePosition	WorldModel/player.h	/^  	inline const Vector3f & 	GetRightFootGloblePosition() { return mGlobleLimb.rightfoot; }$/;"	f	class:Player
GetRightFootLocalPosition	WorldModel/player.h	/^  	inline const Vector3f &  	GetRightFootLocalPosition() { return mLocalLimb.rightfoot; }$/;"	f	class:Player
GetRobotCameraMatrix	RobotModel/robot.cpp	/^Matrix Robot::GetRobotCameraMatrix(RobotPart part) const$/;"	f	class:Robot
GetRobotCoM	RobotModel/robot.cpp	/^Vector3f Robot::GetRobotCoM()$/;"	f	class:Robot
GetRobotCoM	WorldModel/self.cpp	/^Vector3f Self::GetRobotCoM () const$/;"	f	class:Self
GetRobotPartInfo	RobotModel/robot.cpp	/^shared_array<Robot::RobotPartInfo> Robot::GetRobotPartInfo() const$/;"	f	class:Robot
GetRobotPartMatrix	RobotModel/robot.cpp	/^Matrix Robot::GetRobotPartMatrix(RobotPart part) const$/;"	f	class:Robot
GetRobotPartMax	RobotModel/robot.h	/^    RobotPart GetRobotPartMax() const { return PART_MAX; }$/;"	f	class:Robot
GetRobotPartMin	RobotModel/robot.h	/^    RobotPart GetRobotPartMin() const { return PART_MIN; }$/;"	f	class:Robot
GetRobotPartPos	RobotModel/robot.cpp	/^Vector3f Robot::GetRobotPartPos(RobotPart part) const$/;"	f	class:Robot
GetSafeArea	WorldModel/player.h	/^	inline vector<Vector3f> & GetSafeArea() { return mSafeArea; }$/;"	f	class:Player
GetStartTrajectoryMatrix	Geometry/trajectory.cpp	/^bool Trajectory::GetStartTrajectoryMatrix(float t,$/;"	f	class:Trajectory
GetState	WorldModel/player.h	/^	inline PlayerState GetState() { return mState; }$/;"	f	class:Player
GetTc	Geometry/trajectory.h	/^    float GetTc() const { return Tc; }$/;"	f	class:Trajectory
GetTd	Geometry/trajectory.h	/^    float GetTd() const { return Td; }$/;"	f	class:Trajectory
GetTe	Geometry/trajectory.h	/^    float GetTe() const { return Te; }$/;"	f	class:Trajectory
GetTorsoPitchAngle	WorldModel/self.cpp	/^float Self::GetTorsoPitchAngle() const$/;"	f	class:Self
GetTorsoPitchAngleByGyro	WorldModel/self.cpp	/^float Self::GetTorsoPitchAngleByGyro() const$/;"	f	class:Self
GetTorsoRollAngle	WorldModel/self.cpp	/^float Self::GetTorsoRollAngle() const$/;"	f	class:Self
GetTorsoRollAngleByGyro	WorldModel/self.cpp	/^float Self::GetTorsoRollAngleByGyro() const$/;"	f	class:Self
GetTorsoYawAngle	WorldModel/self.cpp	/^float Self::GetTorsoYawAngle () const$/;"	f	class:Self
GetTorsoYawAngleByGyro	WorldModel/self.cpp	/^float Self::GetTorsoYawAngleByGyro () const$/;"	f	class:Self
GetTotalStep	Action/NaoWalkingEngine.h	/^    int GetTotalStep() const { return mTotalStep; }$/;"	f	class:NaoWalkingEngine
GetTrajectoryMatrix	Geometry/trajectory.cpp	/^bool Trajectory::GetTrajectoryMatrix(float t,$/;"	f	class:Trajectory
GetTs	Geometry/trajectory.h	/^    float GetTs() const { return Ts; }$/;"	f	class:Trajectory
GetUnum	WorldModel/player.h	/^	inline int GetUnum() const { return mUnum; }$/;"	f	class:Player
GetVector2fAngleDeg	Geometry/geometry.cpp	/^float GetVector2fAngleDeg(const Vector2f &v)$/;"	f
GetVectorFromLengthAndAngle	WorldModel/player.cpp	/^Vector3f GetVectorFromLengthAndAngle(float length, float angle)$/;"	f
GetWidth	salt/bounds.h	/^    f_inline float              GetWidth() const$/;"	f	class:salt::AABB3
GetWidth	salt/bounds.h	/^    f_inline float GetWidth() const$/;"	f	class:salt::AABB2
GetYGivenX	Geometry/MatrixSpline.cpp	/^Matrix MatrixSpline::GetYGivenX(float x, int der) const$/;"	f	class:MatrixSpline
GetYGivenX	Geometry/spline.cpp	/^float Spline::GetYGivenX(float x, int der) const$/;"	f	class:Spline
GetupEngine	Action/GetUpEngine.h	/^  GetupEngine(const GetupEngineInterfaces& interfaces)$/;"	f	class:GetupEngine
GetupEngine	Action/GetUpEngine.h	/^class GetupEngine : public Module, protected GetupEngineInterfaces$/;"	c
GetupEngineInterfaces	Action/GetUpEngine.h	/^  GetupEngineInterfaces($/;"	f	class:GetupEngineInterfaces
GetupEngineInterfaces	Action/GetUpEngine.h	/^class GetupEngineInterfaces$/;"	c
GetupEngineSelector	Action/GetUpEngineSelector.h	/^  GetupEngineSelector(ModuleHandler &handler, const GetupEngineInterfaces& interfaces) $/;"	f	class:GetupEngineSelector
GetupEngineSelector	Action/GetUpEngineSelector.h	/^class GetupEngineSelector : public ModuleSelector, public GetupEngineInterfaces$/;"	c
GoAroundBall	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoAroundBall(bool clockwise)$/;"	f	class:Strive3DBehaviorControl
GoBeHindBall	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::GoBeHindBall()$/;"	f	class:Strive3DBehaviorControl
GoToBall	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::GoToBall()$/;"	f	class:NaoBehaviorControl
GoToBall	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoToBall()$/;"	f	class:Strive3DBehaviorControl
GoToBallByCommunication	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::GoToBallByCommunication()$/;"	f	class:NaoBehaviorControl
GoToBallByCommunication	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoToBallByCommunication()$/;"	f	class:Strive3DBehaviorControl
GoToBallForShoot	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::GoToBallForShoot(Vector2f destination)$/;"	f	class:Strive3DBehaviorControl
GoToBallToTargetLine	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::GoToBallToTargetLine()$/;"	f	class:Strive3DBehaviorControl
GoToBallWithoutTurning	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::GoToBallWithoutTurning()$/;"	f	class:NaoBehaviorControl
GoToBallWithoutTurning	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoToBallWithoutTurning()$/;"	f	class:Strive3DBehaviorControl
GoToKicktheBall	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoToKicktheBall(float force)$/;"	f	class:Strive3DBehaviorControl
GoToPoint	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::GoToPoint(Vector2f dest)$/;"	f	class:NaoBehaviorControl
GoToPoint	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoToPoint(Vector2f dest, double speedfactor)$/;"	f	class:Strive3DBehaviorControl
GoToPoint	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::GoToPoint(Vector2f toDestination)$/;"	f	class:WalkPathPlanningControl
GoToPointAndTurnTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::GoToPointAndTurnTo(salt::Vector2f dest, double angle)$/;"	f	class:Strive3DBehaviorControl
GoToRelativePoint	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::GoToRelativePoint(Vector3f Destination)$/;"	f	class:NaoBehaviorControl
GoToRelativePoint	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::GoToRelativePoint(Vector2f Destination)$/;"	f	class:Strive3DBehaviorControl
GoalPlan	AdvancedAgent/GoalPlan.cpp	/^GoalPlan::GoalPlan()$/;"	f	class:GoalPlan
GoalPlan	AdvancedAgent/GoalPlan.h	/^class GoalPlan:public Plan$/;"	c
GoalieDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool	Strive3DBehaviorControl::GoalieDecision()$/;"	f	class:Strive3DBehaviorControl
GoaliePlan	AdvancedAgent/GoaliePlan.cpp	/^GoaliePlan::GoaliePlan()$/;"	f	class:GoaliePlan
GoaliePlan	AdvancedAgent/GoaliePlan.h	/^class GoaliePlan:public Plan$/;"	c
GolieState	BehaviorControl/Strive3DBehaviorControl.h	/^	enum GolieState$/;"	g	class:Strive3DBehaviorControl
GreaterThanOperator	Xabsl/XabslBooleanExpression.h	/^class GreaterThanOperator : public RelationalAndEqualityOperator$/;"	c	namespace:xabsl
GreaterThanOrEqualToOperator	Xabsl/XabslBooleanExpression.h	/^class GreaterThanOrEqualToOperator : public RelationalAndEqualityOperator$/;"	c	namespace:xabsl
Guard1DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard1DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard1OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard1OffDecision()$/;"	f	class:Strive3DBehaviorControl
Guard2DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard2DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard2OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard2OffDecision()$/;"	f	class:Strive3DBehaviorControl
Guard3DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard3DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard3OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard3OffDecision()$/;"	f	class:Strive3DBehaviorControl
Guard4DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard4DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard4OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard4OffDecision()$/;"	f	class:Strive3DBehaviorControl
Guard5DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard5DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard5OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::Guard5OffDecision()$/;"	f	class:Strive3DBehaviorControl
Guard6DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void 	Strive3DBehaviorControl::Guard6DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard6OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void    Strive3DBehaviorControl::Guard6OffDecision()$/;"	f	class:Strive3DBehaviorControl
Guard7DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void 	Strive3DBehaviorControl::Guard7DefDecision()$/;"	f	class:Strive3DBehaviorControl
Guard7OffDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void    Strive3DBehaviorControl::Guard7OffDecision()$/;"	f	class:Strive3DBehaviorControl
HAVE_ALLOCA	Net/config.h	15;"	d
HAVE_ALLOCA_H	Net/config.h	19;"	d
HAVE_ARPA_INET_H	Net/config.h	22;"	d
HAVE_KEROSIN_H	Net/config.h	4;"	d
HAVE_NETDB_H	Net/config.h	25;"	d
HAVE_NETINET_IN_H	Net/config.h	28;"	d
HAVE_RESOLV_H	Net/config.h	31;"	d
HAVE_SOCKET	Net/config.h	9;"	d
HAVE_SOCKLEN_T	Net/config.h	12;"	d
HAVE_SYS_SOCKET_H	Net/config.h	34;"	d
HAVE_UNISTD_H	Net/config.h	37;"	d
HEADCONTROLMODE_H	HeadControl/HeadControlMode.h	22;"	d
HEADCONTROLSELECTOR_H	HeadControl/HeadControlSelector.h	22;"	d
HEADCONTROL_H	HeadControl/HeadControl.h	22;"	d
HEADMOTIONREQUEST_H	HeadControl/HeadMotionRequest.h	21;"	d
HEADPATHPLANNER_H	HeadControl/HeadPathPlanner.h	24;"	d
HEX	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
HEX	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
HandMode	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::HandMode()$/;"	f	class:NaoHeadControl
Handler	Net/handler.cpp	/^		Handler::Handler()$/;"	f	class:rcss::net::Handler
Handler	Net/handler.hpp	/^		class Handler$/;"	c	namespace:rcss::net
Hao	Geometry/trajectory.h	/^    float Hao;$/;"	m	class:Trajectory
HeadControl	HeadControl/HeadControl.h	/^  HeadControl(const HeadControlInterfaces& interfaces)$/;"	f	class:HeadControl
HeadControl	HeadControl/HeadControl.h	/^class HeadControl : public Module, public HeadControlInterfaces$/;"	c
HeadControlInterfaces	HeadControl/HeadControl.h	/^  HeadControlInterfaces($/;"	f	class:HeadControlInterfaces
HeadControlInterfaces	HeadControl/HeadControl.h	/^class HeadControlInterfaces$/;"	c
HeadControlMode	HeadControl/HeadControlMode.h	/^    HeadControlMode(){};$/;"	f	class:HeadControlMode
HeadControlMode	HeadControl/HeadControlMode.h	/^class HeadControlMode$/;"	c
HeadControlModes	HeadControl/HeadControlMode.h	/^    enum HeadControlModes$/;"	g	class:HeadControlMode
HeadControlSelector	HeadControl/HeadControlSelector.h	/^  	HeadControlSelector(ModuleHandler &handler,const HeadControlInterfaces& interfaces)$/;"	f	class:HeadControlSelector
HeadControlSelector	HeadControl/HeadControlSelector.h	/^class HeadControlSelector : public ModuleSelector, public HeadControlInterfaces$/;"	c
HeadControlState	HeadControl/NaoHeadControl.h	/^    enum HeadControlState$/;"	g	class:NaoHeadControl
HeadMass	RobotModel/nao.h	/^	float HeadMass;$/;"	m	class:Nao
HeadMotionID	HeadControl/HeadMotionRequest.h	/^    enum HeadMotionID$/;"	g	class:HeadMotionRequest
HeadMotionRequest	HeadControl/HeadMotionRequest.cpp	/^HeadMotionRequest::HeadMotionRequest() : headMotionType(automode),pitch(0.0),yaw(0.0)$/;"	f	class:HeadMotionRequest
HeadMotionRequest	HeadControl/HeadMotionRequest.h	/^class HeadMotionRequest$/;"	c
HeadPathPlanner	HeadControl/HeadPathPlanner.h	/^    HeadPathPlanner():lastHeadPitch(0),lastNeckYaw(0),currentPoint(0),currentFrame(0),numberOfFrames(0),numberOfPoints(0) {}$/;"	f	class:HeadPathPlanner
HeadPathPlanner	HeadControl/HeadPathPlanner.h	/^class HeadPathPlanner$/;"	c
HeadRelNeck_X	RobotModel/nao.h	/^	float HeadRelNeck_X;$/;"	m	class:Nao
HeadRelNeck_Y	RobotModel/nao.h	/^	float HeadRelNeck_Y;$/;"	m	class:Nao
HeadRelNeck_Z	RobotModel/nao.h	/^	float HeadRelNeck_Z;$/;"	m	class:Nao
HearInfo	types.h	/^struct HearInfo$/;"	s
HearingOn	WorldModel/worldmodel.h	/^	void HearingOn() { mHearingOn = true; }$/;"	f	class:WorldModel
Height	salt/rect.h	/^    f_inline int    Height() const                  { return mBottom-mTop; }$/;"	f	class:salt::Rect
Hge	Geometry/trajectory.h	/^    float Hge;$/;"	m	class:Trajectory
Hgs	Geometry/trajectory.h	/^    float Hgs;$/;"	m	class:Trajectory
HingeJointSense	types.h	/^    HingeJointSense() : angle(0), rate(0) {};$/;"	f	struct:HingeJointSense
HingeJointSense	types.h	/^struct HingeJointSense$/;"	s
Hip1Axis_X	RobotModel/nao.h	/^    float Hip1Axis_X ;$/;"	m	class:Nao
Hip1Axis_Y	RobotModel/nao.h	/^    float Hip1Axis_Y ;$/;"	m	class:Nao
Hip1Axis_Z	RobotModel/nao.h	/^    float Hip1Axis_Z ;$/;"	m	class:Nao
Hip1Mass	RobotModel/nao.h	/^	float Hip1Mass;$/;"	m	class:Nao
Hip1RelTorso_X	RobotModel/nao.h	/^    float Hip1RelTorso_X;$/;"	m	class:Nao
Hip1RelTorso_Y	RobotModel/nao.h	/^    float Hip1RelTorso_Y;$/;"	m	class:Nao
Hip1RelTorso_Z	RobotModel/nao.h	/^    float Hip1RelTorso_Z;$/;"	m	class:Nao
Hip2Mass	RobotModel/nao.h	/^	float Hip2Mass;$/;"	m	class:Nao
Hip2RelHip1_X	RobotModel/nao.h	/^    float Hip2RelHip1_X;$/;"	m	class:Nao
Hip2RelHip1_Y	RobotModel/nao.h	/^    float Hip2RelHip1_Y;$/;"	m	class:Nao
Hip2RelHip1_Z	RobotModel/nao.h	/^    float Hip2RelHip1_Z;$/;"	m	class:Nao
Hnor	Geometry/trajectory.h	/^    float Hnor;$/;"	m	class:Trajectory
HostNotFound	Net/exception.cpp	/^        HostNotFound::HostNotFound( int err ) throw()$/;"	f	class:rcss::net::HostNotFound
HostNotFound	Net/exception.hpp	/^        class HostNotFound$/;"	c	namespace:rcss::net
HostType	Net/addr.hpp	/^            typedef boost::uint32_t HostType;$/;"	t	class:rcss::net::Addr
ICanSeeHead	WorldModel/player.h	/^	inline bool		ICanSeeHead() { return mLocalLimb.seehead; }$/;"	f	class:Player
ICanSeeHim	WorldModel/player.h	/^	inline bool		ICanSeeHim() { return (ICanSeeHead() || ICanSeeLeftArm() || ICanSeeRightArm() || ICanSeeLeftFoot() || ICanSeeRightFoot()); }$/;"	f	class:Player
ICanSeeLeftArm	WorldModel/player.h	/^	inline bool		ICanSeeLeftArm() { return mLocalLimb.seeleftarm; }$/;"	f	class:Player
ICanSeeLeftFoot	WorldModel/player.h	/^	inline bool		ICanSeeLeftFoot() { return mLocalLimb.seeleftfoot; }$/;"	f	class:Player
ICanSeeRightArm	WorldModel/player.h	/^	inline bool		ICanSeeRightArm() { return mLocalLimb.seerightarm; }$/;"	f	class:Player
ICanSeeRightFoot	WorldModel/player.h	/^	inline bool		ICanSeeRightFoot() { return mLocalLimb.seerightfoot; }$/;"	f	class:Player
ID_VOID_MAIN	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
IK_leg	RobotModel/nao.cpp	/^bool Nao::IK_leg(const Matrix& hip, float A, float B,$/;"	f	class:Nao
IK_leg	RobotModel/nao.cpp	/^bool Nao::IK_leg(const Matrix& torso, const Matrix& leftfoot, const Matrix& rightfoot)$/;"	f	class:Nao
IK_leg	RobotModel/nao.cpp	/^bool Nao::IK_leg(const salt::Matrix& torso, const salt::Matrix& foot, bool left)$/;"	f	class:Nao
IK_leg	RobotModel/robot.h	/^    virtual bool IK_leg(const salt::Matrix& hip, float A, float B,$/;"	f	class:Robot
IK_leg	RobotModel/robot.h	/^    virtual bool IK_leg(const salt::Matrix& torso, const salt::Matrix& foot, bool left)$/;"	f	class:Robot
INVALIDSOCKET	Net/socket.cpp	/^                const Socket::SocketDesc Socket::INVALIDSOCKET = INVALID_SOCKET;$/;"	m	class:rcss::net::Socket	file:
INVALIDSOCKET	Net/socket.hpp	/^                        static const SocketDesc INVALIDSOCKET;$/;"	m	class:rcss::net::Socket
INVALID_VALUE	AdvancedAgent/PathPlanning.h	21;"	d
IOSocketStream	Net/iosocketstream.hpp	/^            IOSocketStream( Socket& socket,$/;"	f	class:rcss::net::IOSocketStream
IOSocketStream	Net/iosocketstream.hpp	/^        class IOSocketStream$/;"	c	namespace:rcss::net
ISocketStream	Net/isocketstream.hpp	/^            ISocketStream( Socket& socket,$/;"	f	class:rcss::net::ISocketStream
ISocketStream	Net/isocketstream.hpp	/^        class ISocketStream$/;"	c	namespace:rcss::net
Identity	salt/matrix.h	/^    f_inline void Identity()                    {       memcpy(m, mIdentity,    sizeof(float)*16);      }$/;"	f	class:salt::Matrix
IfElseBlock	Xabsl/XabslStatement.cpp	/^IfElseBlock::IfElseBlock(InputSource& input,    $/;"	f	class:xabsl::IfElseBlock
IfElseBlock	Xabsl/XabslStatement.h	/^class IfElseBlock : public Statement$/;"	c	namespace:xabsl
Init	Action/NaoActionControl.cpp	/^void NaoActionControl::Init()$/;"	f	class:NaoActionControl
Init	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::Init()$/;"	f	class:NaoDynamicKickEngine
Init	Action/NaoGetUp.cpp	/^void NaoGetupEngine::Init()$/;"	f	class:NaoGetupEngine
Init	Action/NaoKick.cpp	/^void NaoKickEngine::Init()$/;"	f	class:NaoKickEngine
Init	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::Init()$/;"	f	class:NaoSpecialAction
Init	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::Init()$/;"	f	class:NaoWalkingEngine
Init	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::Init()$/;"	f	class:Strive3DGetupEngine
Init	Net/Net.cpp	/^bool Net::Init()$/;"	f	class:Net
Init	RobotModel/robot.cpp	/^bool Robot::Init()$/;"	f	class:Robot
Init	WorldModel/fieldinfo.cpp	/^void FieldInfo::Init()$/;"	f	class:FieldInfo
Init	WorldModel/self.cpp	/^bool Self::Init()$/;"	f	class:Self
Init	WorldModel/worldmodel.cpp	/^void WorldModel::Init()$/;"	f	class:WorldModel
Init	salt/bounds.h	/^    f_inline void Init()$/;"	f	class:salt::AABB2
Init	salt/bounds.h	/^    f_inline void Init()$/;"	f	class:salt::AABB3
InitAgent	BaseAgent.cpp	/^string BaseAgent::InitAgent() const$/;"	f	class:BaseAgent
InitModelParams	Geometry/trajectory.cpp	/^void Trajectory::InitModelParams(const float params[10])$/;"	f	class:Trajectory
InitPosition	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::InitPosition()$/;"	f	class:NaoSpecialAction
InitRobot	BaseAgent.cpp	/^string BaseAgent::InitRobot() const$/;"	f	class:BaseAgent
Input	Action/PIDController.h	/^	void Input(float e)$/;"	f	class:PIDController
InputSource	Xabsl/XabslTools.h	/^class InputSource$/;"	c	namespace:xabsl
InputSymbol	Xabsl/XabslSymbols.h	/^  InputSymbol(const char* name, const T* pVariable, ErrorHandler& errorHandler)$/;"	f	class:xabsl::InputSymbol
InputSymbol	Xabsl/XabslSymbols.h	/^  InputSymbol(const char* name,$/;"	f	class:xabsl::InputSymbol
InputSymbol	Xabsl/XabslSymbols.h	/^template<class T> class InputSymbol : public NamedItem$/;"	c	namespace:xabsl
IntelligenceMode	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::IntelligenceMode()$/;"	f	class:NaoHeadControl
Intersects	salt/bounds.cpp	/^bool BoundingSphere::Intersects(const AABB3 &b) const$/;"	f	class:BoundingSphere
Intersects	salt/bounds.h	/^    f_inline bool Intersects(const AABB2 &b) const$/;"	f	class:salt::AABB2
Intersects	salt/bounds.h	/^    f_inline bool Intersects(const AABB3 &b) const$/;"	f	class:salt::AABB3
Intersects	salt/bounds.h	/^    f_inline bool Intersects(const BoundingSphere &s) const$/;"	f	class:salt::BoundingSphere
Intersects	salt/frustum.cpp	/^Frustum::eFrustumSide Frustum::Intersects(const AABB3& bb) const$/;"	f	class:Frustum
Intersects	salt/rect.h	/^    f_inline bool   Intersects(const Rect &b) const                                 { return !(mLeft > b.mRight || mRight < b.mLeft || mTop > b.mBottom || mBottom < b.mTop); }$/;"	f	class:salt::Rect
InverseKinematics	RobotModel/robot.cpp	/^bool Robot::InverseKinematics(int to, const salt::Matrix& target)$/;"	f	class:Robot
InverseMatrix	Geometry/geometry.cpp	/^bool InverseMatrix(salt::Matrix& m)$/;"	f
InverseRotate	salt/matrix.h	/^f_inline Vector3f Matrix::InverseRotate(const Vector3f & inVector) const$/;"	f	class:salt::Matrix
InvertMatrix	salt/matrix.cpp	/^void Matrix::InvertMatrix()$/;"	f	class:Matrix
InvertRotationMatrix	salt/matrix.h	/^f_inline void Matrix::InvertRotationMatrix()$/;"	f	class:salt::Matrix
IsCanHitout	WorldModel/worldmodel.cpp	/^void WorldModel::IsCanHitout()$/;"	f	class:WorldModel
IsCanPassout	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::IsCanPassout()$/;"	f	class:Strive3DBehaviorControl
IsCanShoot	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::IsCanShoot()$/;"	f	class:Strive3DBehaviorControl
IsEqual	salt/matrix.cpp	/^bool Matrix::IsEqual(const Matrix& matrix) const$/;"	f	class:Matrix
IsFirstStepDone	Action/NaoWalkingEngine.cpp	/^bool NaoWalkingEngine::IsFirstStepDone()$/;"	f	class:NaoWalkingEngine
IsIKfailNow	Action/NaoWalkingEngine.h	/^    bool                IsIKfailNow;$/;"	m	class:NaoWalkingEngine
IsLastStepDone	Action/NaoWalkingEngine.cpp	/^bool NaoWalkingEngine::IsLastStepDone()$/;"	f	class:NaoWalkingEngine
IsLeftFootHold	Action/NaoWalkingEngine.h	/^    bool IsLeftFootHold() const { return  mLeftFirstMove ? (mTotalStep % 2 == 1) :$/;"	f	class:NaoWalkingEngine
IsLeftFootMoveFirst	Action/NaoWalkingEngine.h	/^    bool IsLeftFootMoveFirst() const { return mLeftFirstMove; }$/;"	f	class:NaoWalkingEngine
IsNormalStepDone	Action/NaoWalkingEngine.cpp	/^bool NaoWalkingEngine::IsNormalStepDone()$/;"	f	class:NaoWalkingEngine
IsObjectInTheWay	Geometry/geometry.cpp	/^bool IsObjectInTheWay(const Vector2f& objectPos, const Vector2f& lineStart,$/;"	f
IsPrepareDone	Action/NaoWalkingEngine.cpp	/^bool NaoWalkingEngine::IsPrepareDone()$/;"	f	class:NaoWalkingEngine
IsRi	Geometry/geometry.cpp	/^bool IsRi(const salt::Matrix& R)$/;"	f
IsSegmentCross	WorldModel/convexhullmanager.cpp	/^bool ConvexHullManager::IsSegmentCross(Vector3f point1, Vector3f point2)$/;"	f	class:ConvexHullManager
IsSegmentCross	WorldModel/convexhullmanager.cpp	/^bool ConvexHullManager::IsSegmentCross(Vector3f point1, Vector3f point2, set<ConvexHull *>& crossConvexHullSet)$/;"	f	class:ConvexHullManager
JID_HEAD_1	RobotModel/nao.h	/^    static const JointID JID_HEAD_1         = 2;$/;"	m	class:Nao
JID_HEAD_2	RobotModel/nao.h	/^    static const JointID JID_HEAD_2         = 3;$/;"	m	class:Nao
JID_LARM_1	RobotModel/nao.h	/^    static const JointID JID_LARM_1         = 4;$/;"	m	class:Nao
JID_LARM_2	RobotModel/nao.h	/^    static const JointID JID_LARM_2         = 6;$/;"	m	class:Nao
JID_LARM_3	RobotModel/nao.h	/^    static const JointID JID_LARM_3         = 8;$/;"	m	class:Nao
JID_LARM_4	RobotModel/nao.h	/^    static const JointID JID_LARM_4         = 10;$/;"	m	class:Nao
JID_LLEG_1	RobotModel/nao.h	/^    static const JointID JID_LLEG_1         = 12;$/;"	m	class:Nao
JID_LLEG_2	RobotModel/nao.h	/^    static const JointID JID_LLEG_2         = 14;$/;"	m	class:Nao
JID_LLEG_3	RobotModel/nao.h	/^    static const JointID JID_LLEG_3         = 16;$/;"	m	class:Nao
JID_LLEG_4	RobotModel/nao.h	/^    static const JointID JID_LLEG_4         = 18;$/;"	m	class:Nao
JID_LLEG_5	RobotModel/nao.h	/^    static const JointID JID_LLEG_5         = 20;$/;"	m	class:Nao
JID_LLEG_6	RobotModel/nao.h	/^    static const JointID JID_LLEG_6         = 22;$/;"	m	class:Nao
JID_MAX	RobotModel/robot.h	/^    JointID     JID_MAX;$/;"	m	class:Robot
JID_MIN	RobotModel/robot.h	/^    JointID     JID_MIN;$/;"	m	class:Robot
JID_RARM_1	RobotModel/nao.h	/^    static const JointID JID_RARM_1         = 5;$/;"	m	class:Nao
JID_RARM_2	RobotModel/nao.h	/^    static const JointID JID_RARM_2         = 7;$/;"	m	class:Nao
JID_RARM_3	RobotModel/nao.h	/^    static const JointID JID_RARM_3         = 9;$/;"	m	class:Nao
JID_RARM_4	RobotModel/nao.h	/^    static const JointID JID_RARM_4         = 11;$/;"	m	class:Nao
JID_RLEG_1	RobotModel/nao.h	/^    static const JointID JID_RLEG_1         = 13;$/;"	m	class:Nao
JID_RLEG_2	RobotModel/nao.h	/^    static const JointID JID_RLEG_2         = 15;$/;"	m	class:Nao
JID_RLEG_3	RobotModel/nao.h	/^    static const JointID JID_RLEG_3         = 17;$/;"	m	class:Nao
JID_RLEG_4	RobotModel/nao.h	/^    static const JointID JID_RLEG_4         = 19;$/;"	m	class:Nao
JID_RLEG_5	RobotModel/nao.h	/^    static const JointID JID_RLEG_5         = 21;$/;"	m	class:Nao
JID_RLEG_6	RobotModel/nao.h	/^    static const JointID JID_RLEG_6         = 23;$/;"	m	class:Nao
JID_ROOT	RobotModel/robot.h	/^    static const JointID JID_ROOT   = 1;$/;"	m	class:Robot
JointID	types.h	/^typedef int JointID;$/;"	t
KICKENGINESELECTOR_H	Action/KickEngineSelector.h	24;"	d
KICKENGINE_H	Action/KickEngine.h	23;"	d
KICKL1	Action/NaoDynamicKick.h	/^	{	KICKL1,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKL1	Action/NaoKick.h	/^	{	KICKL1,$/;"	e	enum:NaoKickEngine::TPhaseForKickLeft
KICKL2	Action/NaoDynamicKick.h	/^		KICKL2,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKL2	Action/NaoKick.h	/^		KICKL2,$/;"	e	enum:NaoKickEngine::TPhaseForKickLeft
KICKL3	Action/NaoDynamicKick.h	/^		KICKL3,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKL3	Action/NaoKick.h	/^		KICKL3,$/;"	e	enum:NaoKickEngine::TPhaseForKickLeft
KICKL4	Action/NaoDynamicKick.h	/^		KICKL4,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKL4	Action/NaoKick.h	/^		KICKL4,$/;"	e	enum:NaoKickEngine::TPhaseForKickLeft
KICKL5	Action/NaoDynamicKick.h	/^		KICKL5,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKL5	Action/NaoKick.h	/^		KICKL5,$/;"	e	enum:NaoKickEngine::TPhaseForKickLeft
KICKL6	Action/NaoDynamicKick.h	/^		KICKL6,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKL7	Action/NaoDynamicKick.h	/^		KICKL7,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKickLeft
KICKLEFT	Action/NaoDynamicKick.h	/^	{	KICKLEFT,$/;"	e	enum:NaoDynamicKickEngine::State
KICKLEFT	Action/NaoKick.h	/^	{	KICKLEFT,$/;"	e	enum:NaoKickEngine::State
KICKR1	Action/NaoDynamicKick.h	/^	{	KICKR1,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKR1	Action/NaoKick.h	/^	{	KICKR1,$/;"	e	enum:NaoKickEngine::TPhaseForKcikRight
KICKR2	Action/NaoDynamicKick.h	/^		KICKR2,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKR2	Action/NaoKick.h	/^		KICKR2,$/;"	e	enum:NaoKickEngine::TPhaseForKcikRight
KICKR3	Action/NaoDynamicKick.h	/^		KICKR3,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKR3	Action/NaoKick.h	/^		KICKR3,$/;"	e	enum:NaoKickEngine::TPhaseForKcikRight
KICKR4	Action/NaoDynamicKick.h	/^		KICKR4,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKR4	Action/NaoKick.h	/^		KICKR4,$/;"	e	enum:NaoKickEngine::TPhaseForKcikRight
KICKR5	Action/NaoDynamicKick.h	/^		KICKR5,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKR5	Action/NaoKick.h	/^		KICKR5,$/;"	e	enum:NaoKickEngine::TPhaseForKcikRight
KICKR6	Action/NaoDynamicKick.h	/^		KICKR6,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKR7	Action/NaoDynamicKick.h	/^		KICKR7,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForKcikRight
KICKRIGHT	Action/NaoDynamicKick.h	/^		KICKRIGHT,$/;"	e	enum:NaoDynamicKickEngine::State
KICKRIGHT	Action/NaoKick.h	/^		KICKRIGHT,$/;"	e	enum:NaoKickEngine::State
KeepGuard2DefDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void	Strive3DBehaviorControl::KeepGuard2DefDecision()$/;"	f	class:Strive3DBehaviorControl
KickDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::KickDecision()$/;"	f	class:Strive3DBehaviorControl
KickEngine	Action/KickEngine.h	/^  KickEngine(const KickEngineInterfaces& interfaces)$/;"	f	class:KickEngine
KickEngine	Action/KickEngine.h	/^class KickEngine : public Module, protected KickEngineInterfaces$/;"	c
KickEngineInterfaces	Action/KickEngine.h	/^  KickEngineInterfaces($/;"	f	class:KickEngineInterfaces
KickEngineInterfaces	Action/KickEngine.h	/^class KickEngineInterfaces$/;"	c
KickEngineSelector	Action/KickEngineSelector.h	/^  KickEngineSelector(ModuleHandler &handler, const KickEngineInterfaces& interfaces) $/;"	f	class:KickEngineSelector
KickEngineSelector	Action/KickEngineSelector.h	/^class KickEngineSelector : public ModuleSelector, public KickEngineInterfaces$/;"	c
KickRequest	Action/ActionRequest.h	/^    KickRequest():kickType(kickright) {}$/;"	f	class:KickRequest
KickRequest	Action/ActionRequest.h	/^class KickRequest$/;"	c
KickTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::KickTo(Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
KickType	Action/ActionRequest.h	/^    enum KickType$/;"	g	class:KickRequest
KickingLeft	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::KickingLeft()$/;"	f	class:NaoDynamicKickEngine
KickingLeft	Action/NaoKick.cpp	/^void NaoKickEngine::KickingLeft()$/;"	f	class:NaoKickEngine
KickingRight	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::KickingRight()$/;"	f	class:NaoDynamicKickEngine
LAST_STEP	Action/NaoWalkingEngine.h	/^        LAST_STEP,$/;"	e	enum:NaoWalkingEngine::TPhase
LOG	Utilities/Logger.h	44;"	d
Lab	Geometry/trajectory.h	/^    float Lab;$/;"	m	class:Trajectory
Laf	Geometry/trajectory.h	/^    float Laf;$/;"	m	class:Trajectory
Lan	Geometry/trajectory.h	/^    float Lan;$/;"	m	class:Trajectory
Lao	Geometry/trajectory.h	/^    float Lao;$/;"	m	class:Trajectory
LastStep	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::LastStep()$/;"	f	class:NaoWalkingEngine
LeaveTime	Module/Module.h	/^	unsigned long LeaveTime;$/;"	m	class:Module
Left	salt/rect.h	/^    f_inline int    Left() const                    { return mLeft; }$/;"	f	class:salt::Rect
Length	salt/tvector.h	/^    f_inline DATATYPE Length() const$/;"	f	class:salt::TVector
LessThanOperator	Xabsl/XabslBooleanExpression.h	/^class LessThanOperator : public RelationalAndEqualityOperator$/;"	c	namespace:xabsl
LessThanOrEqualToOperator	Xabsl/XabslBooleanExpression.h	/^class LessThanOrEqualToOperator : public RelationalAndEqualityOperator$/;"	c	namespace:xabsl
Limb	types.h	/^struct Limb$/;"	s
LinearInterpolate	salt/tvector.h	/^f_inline TYPE TVector<DATATYPE, ELEMENTS, TYPE>::LinearInterpolate(const TYPE& to, float t) const$/;"	f	class:salt::TVector
Link	RobotModel/robot.h	/^        Link() : name("<unnamed>"), eff_name("<unnamed>"),$/;"	f	struct:Robot::Link
Link	RobotModel/robot.h	/^    struct Link {$/;"	s	class:Robot
ListenErr	Net/exception.cpp	/^        ListenErr::ListenErr( int err ) throw()$/;"	f	class:rcss::net::ListenErr
ListenErr	Net/exception.hpp	/^        class ListenErr$/;"	c	namespace:rcss::net
LocalKickTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::LocalKickTo(Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
LocalPassTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::LocalPassTo(Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
LocalViewGoToBallForShoot	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::LocalViewGoToBallForShoot(salt::Vector2f destination)$/;"	f	class:Strive3DBehaviorControl
Localize	WorldModel/worldmodel.cpp	/^bool WorldModel::Localize()$/;"	f	class:WorldModel
LocalizeWithThreeFlagsLine	WorldModel/worldmodel.cpp	/^Matrix WorldModel::LocalizeWithThreeFlagsLine(const VisionObject vo1,$/;"	f	class:WorldModel
LocalizeWithThreeFlagsTriangle	WorldModel/worldmodel.cpp	/^Matrix WorldModel::LocalizeWithThreeFlagsTriangle(const VisionObject vo1,$/;"	f	class:WorldModel
LogFile	Utilities/Logger.cpp	/^LogFile::LogFile(const string &fileName, bool infoOn): $/;"	f	class:LogFile
LogFile	Utilities/Logger.h	/^class LogFile: public LogStream$/;"	c
LogNull	Utilities/Logger.cpp	/^LogNull::LogNull(): LogStream(NULL)$/;"	f	class:LogNull
LogNull	Utilities/Logger.h	/^class LogNull: public LogStream$/;"	c
LogStdErr	Utilities/Logger.cpp	/^LogStdErr::LogStdErr(): LogStream(&cerr)$/;"	f	class:LogStdErr
LogStdErr	Utilities/Logger.h	/^class LogStdErr: public LogStream$/;"	c
LogStdOut	Utilities/Logger.cpp	/^LogStdOut::LogStdOut(): LogStream(&cout)$/;"	f	class:LogStdOut
LogStdOut	Utilities/Logger.h	/^class LogStdOut: public LogStream$/;"	c
LogStream	Utilities/Logger.cpp	/^LogStream::LogStream(ostream *out, bool infoOn): out(out),first(true),infoOn(infoOn)$/;"	f	class:LogStream
LogStream	Utilities/Logger.h	/^class LogStream$/;"	c
LogStreams	Utilities/Logger.cpp	/^Logger::LogStreams::LogStreams()$/;"	f	class:Logger::LogStreams
LogStreams	Utilities/Logger.h	/^	class LogStreams$/;"	c	class:Logger
Logger	Utilities/Logger.cpp	/^Logger::Logger()$/;"	f	class:Logger
Logger	Utilities/Logger.h	/^class Logger$/;"	c
LookAt	salt/matrix.cpp	/^void Matrix::LookAt(const Vector3f & inEye, const Vector3f & inDirection, const Vector3f & inUp)$/;"	f	class:Matrix
LookAtBall	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookAtBall()$/;"	f	class:NaoHeadControl
LookAtOppGoal	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookAtOppGoal()$/;"	f	class:NaoHeadControl
LookAtOurGoal	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookAtOurGoal()$/;"	f	class:NaoHeadControl
LookBetweenFeetForKick	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookBetweenFeetForKick()$/;"	f	class:NaoHeadControl
LookForward	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookForward()$/;"	f	class:NaoHeadControl
LookLeft	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookLeft()$/;"	f	class:NaoHeadControl
LookRight	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::LookRight()$/;"	f	class:NaoHeadControl
LowerarmElbow_X	RobotModel/nao.h	/^	float LowerarmElbow_X;$/;"	m	class:Nao
LowerarmElbow_Y	RobotModel/nao.h	/^	float LowerarmElbow_Y;$/;"	m	class:Nao
LowerarmElbow_Z	RobotModel/nao.h	/^	float LowerarmElbow_Z;$/;"	m	class:Nao
LowerarmMass	RobotModel/nao.h	/^	float LowerarmMass;$/;"	m	class:Nao
Lsh	Geometry/trajectory.h	/^    float Lsh;$/;"	m	class:Trajectory
Lth	Geometry/trajectory.h	/^    float Lth;$/;"	m	class:Trajectory
MARK_TIME_STEP	Action/NaoWalkingEngine.h	/^        MARK_TIME_STEP,$/;"	e	enum:NaoWalkingEngine::TPhase
MATRIX_SPLINE_H	Geometry/MatrixSpline.h	24;"	d
MAX_TEAM_SIZE	WorldModel/worldmodel.h	34;"	d
MERGEDISTANCE	WorldModel/convexhullmanager.cpp	23;"	d	file:
MOTIONINFO_H	Action/ActionInfo.h	22;"	d
MS	Utilities/MessageStorage.h	11;"	d
M_PI	salt/gmath.h	44;"	d
M_PI_2	salt/gmath.h	48;"	d
MakeVector2f	Geometry/geometry.h	/^inline salt::Vector2f MakeVector2f(const salt::Vector3f& v)$/;"	f
MakeVector2f	Geometry/geometry.h	/^inline salt::Vector2f MakeVector2f(float angleDeg)$/;"	f
ManToManDef	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::ManToManDef(Player & player, float disttoball)$/;"	f	class:Strive3DBehaviorControl
Matrix	salt/matrix.h	/^    f_inline Matrix(){ }$/;"	f	class:salt::Matrix
Matrix	salt/matrix.h	/^    f_inline Matrix(Matrix *newMatrix)                  {       memcpy(m, newMatrix->m, sizeof(float)*16);      }$/;"	f	class:salt::Matrix
Matrix	salt/matrix.h	/^    f_inline Matrix(const Matrix &newMatrix)    {       memcpy(m, newMatrix.m,  sizeof(float)*16);      }$/;"	f	class:salt::Matrix
Matrix	salt/matrix.h	/^    f_inline Matrix(float *newMatrix)   {       memcpy(m, newMatrix,    sizeof(float)*16);      }$/;"	f	class:salt::Matrix
Matrix	salt/matrix.h	/^class Matrix$/;"	c	namespace:salt
Matrix	salt/matrix.h	/^f_inline Matrix::Matrix(float m00, float m01, float m02, float m03,$/;"	f	class:salt::Matrix
MatrixSpline	Geometry/MatrixSpline.cpp	/^MatrixSpline::MatrixSpline() :$/;"	f	class:MatrixSpline
MatrixSpline	Geometry/MatrixSpline.cpp	/^MatrixSpline::MatrixSpline(float* x, salt::Matrix * y, int n)$/;"	f	class:MatrixSpline
MatrixSpline	Geometry/MatrixSpline.h	/^class MatrixSpline$/;"	c
MaxLength	WorldModel/convexhull.cpp	/^float ConvexHull::MaxLength()$/;"	f	class:ConvexHull
MergeConvexHull	WorldModel/convexhullmanager.cpp	/^void ConvexHullManager::MergeConvexHull()$/;"	f	class:ConvexHullManager
MessageStorage	Utilities/MessageStorage.cpp	/^MessageStorage::MessageStorage()$/;"	f	class:MessageStorage
MessageStorage	Utilities/MessageStorage.h	/^class MessageStorage$/;"	c
MinusOperator	Xabsl/XabslDecimalExpression.h	/^class MinusOperator : public ArithmeticOperator$/;"	c	namespace:xabsl
ModOperator	Xabsl/XabslDecimalExpression.h	/^class ModOperator : public ArithmeticOperator$/;"	c	namespace:xabsl
ModelInited	Geometry/trajectory.h	/^    inline bool ModelInited() const { return mModelInit; }$/;"	f	class:Trajectory
Module	Module/Module.h	/^	Module() {};$/;"	f	class:Module
Module	Module/Module.h	/^class Module$/;"	c
ModuleHandler	Module/ModuleHandler.cpp	/^ModuleHandler::ModuleHandler()$/;"	f	class:ModuleHandler
ModuleHandler	Module/ModuleHandler.h	/^class ModuleHandler$/;"	c
ModuleID	Module/SolutionRequest.h	/^    enum ModuleID$/;"	g	class:SolutionRequest
ModuleSelector	Module/ModuleSelector.cpp	/^ModuleSelector::ModuleSelector(SolutionRequest::ModuleID id) $/;"	f	class:ModuleSelector
ModuleSelector	Module/ModuleSelector.h	/^class ModuleSelector$/;"	c
ModuleSolutionID	Module/SolutionRequest.h	/^    enum ModuleSolutionID$/;"	g	class:SolutionRequest
MultiplyOperator	Xabsl/XabslDecimalExpression.h	/^class MultiplyOperator : public ArithmeticOperator$/;"	c	namespace:xabsl
MyForce	AdvancedAgent/PathPlanning.h	/^	Vector2f MyForce;$/;"	m	class:PathPlanning
MyPos	AdvancedAgent/PathPlanning.h	/^	vector<Vector2f>MyPos;$/;"	m	class:PathPlanning
MyStartPos	AdvancedAgent/PathPlanning.h	/^	Vector2f MyStartPos;$/;"	m	class:PathPlanning
MyStartVel	AdvancedAgent/PathPlanning.h	/^	Vector2f MyStartVel;$/;"	m	class:PathPlanning
MyVel	AdvancedAgent/PathPlanning.h	/^	vector<Vector2f>MyVel;$/;"	m	class:PathPlanning
MyXabslErrorHandler	Xabsl/XabslEngineExecutor.cpp	/^MyXabslErrorHandler::MyXabslErrorHandler(SolutionRequest::xabslEngineID id)$/;"	f	class:MyXabslErrorHandler
MyXabslErrorHandler	Xabsl/XabslEngineExecutor.h	/^class MyXabslErrorHandler : public ErrorHandler$/;"	c
MyXabslFileInputSource	Xabsl/XabslEngineExecutor.cpp	/^MyXabslFileInputSource::MyXabslFileInputSource(const char* fileName)$/;"	f	class:MyXabslFileInputSource
MyXabslFileInputSource	Xabsl/XabslEngineExecutor.h	/^class MyXabslFileInputSource : public InputSource, public NamedItem$/;"	c
NALLOC	Parser/malloc_util.c	29;"	d	file:
NAO	RobotModel/nao.h	25;"	d
NAOACTIONCONTROL_H	Action/NaoActionControl.h	17;"	d
NAOBEHAVIORCONTROL_H	BehaviorControl/NaoBehaviorControl.h	21;"	d
NAODYNAMICKICK_H	Action/NaoDynamicKick.h	24;"	d
NAOGETUP_H	Action/NaoGetUp.h	21;"	d
NAOHEADCONTROL_H	HeadControl/NaoHeadControl.h	22;"	d
NAOKICK_H	Action/NaoKick.h	24;"	d
NAOSPECIALACTION_H	Action/NaoSpecialAction.h	23;"	d
NAO_A	RobotModel/nao.h	/^    float NAO_A;$/;"	m	class:Nao
NAO_B	RobotModel/nao.h	/^    float NAO_B;$/;"	m	class:Nao
NAO_Dl	RobotModel/nao.h	/^    salt::Vector3f NAO_Dl;$/;"	m	class:Nao
NAO_Dr	RobotModel/nao.h	/^    salt::Vector3f NAO_Dr;$/;"	m	class:Nao
NAO_E	RobotModel/nao.h	/^    salt::Vector3f NAO_E;$/;"	m	class:Nao
NAO_F	RobotModel/nao.h	/^    salt::Vector3f NAO_F;$/;"	m	class:Nao
NAO_H	RobotModel/nao.h	19;"	d
NET	Net/Net.h	38;"	d
NET_H	Net/Net.h	22;"	d
NORMAL_STEP	Action/NaoWalkingEngine.h	/^        NORMAL_STEP,$/;"	e	enum:NaoWalkingEngine::TPhase
NO_CONN	Net/socketstreambuf.hpp	/^            enum ConnType { CONN_ON_READ, NO_CONN };$/;"	e	enum:rcss::net::SocketStreamBuf::ConnType
NO_FALL	types.h	/^    NO_FALL,$/;"	e	enum:EFallDir
NamedItem	Xabsl/XabslArray.h	/^  NamedItem(const char* name)$/;"	f	class:xabsl::NamedItem
NamedItem	Xabsl/XabslArray.h	/^class NamedItem$/;"	c	namespace:xabsl
Nao	RobotModel/nao.cpp	/^Nao::Nao()$/;"	f	class:Nao
Nao	RobotModel/nao.h	/^class Nao : public Robot$/;"	c
NaoActionControl	Action/NaoActionControl.cpp	/^NaoActionControl::NaoActionControl(ModuleHandler& moduleHandler,const ActionControlInterfaces& interfaces)$/;"	f	class:NaoActionControl
NaoActionControl	Action/NaoActionControl.h	/^class NaoActionControl : public ActionControl$/;"	c
NaoBehaviorControl	BehaviorControl/NaoBehaviorControl.cpp	/^NaoBehaviorControl::NaoBehaviorControl( ModuleHandler& moduleHandler, const BehaviorControlInterfaces& interfaces):BehaviorControl(interfaces),moduleHandler(moduleHandler),adjustment(adjustX)$/;"	f	class:NaoBehaviorControl
NaoBehaviorControl	BehaviorControl/NaoBehaviorControl.h	/^class NaoBehaviorControl : public BehaviorControl$/;"	c
NaoDynamicKickEngine	Action/NaoDynamicKick.cpp	/^NaoDynamicKickEngine::NaoDynamicKickEngine(const KickEngineInterfaces& interfaces ):KickEngine(interfaces),mInit(true),state(disable)$/;"	f	class:NaoDynamicKickEngine
NaoDynamicKickEngine	Action/NaoDynamicKick.h	/^class NaoDynamicKickEngine: public KickEngine$/;"	c
NaoGetupEngine	Action/NaoGetUp.cpp	/^NaoGetupEngine::NaoGetupEngine(const GetupEngineInterfaces& interfaces ):GetupEngine(interfaces),mInit(true),state(disable)$/;"	f	class:NaoGetupEngine
NaoGetupEngine	Action/NaoGetUp.h	/^class NaoGetupEngine: public GetupEngine$/;"	c
NaoHeadControl	HeadControl/NaoHeadControl.cpp	/^NaoHeadControl::NaoHeadControl( ModuleHandler& moduleHandler, const HeadControlInterfaces& interfaces):HeadControl(interfaces),moduleHandler(moduleHandler),lastScanWasLeft(true),headControlState(ball_lost),lastHeadControlMode(HeadControlMode::none)$/;"	f	class:NaoHeadControl
NaoHeadControl	HeadControl/NaoHeadControl.h	/^class NaoHeadControl : public HeadControl$/;"	c
NaoKickEngine	Action/NaoKick.cpp	/^NaoKickEngine::NaoKickEngine(const KickEngineInterfaces& interfaces ):KickEngine(interfaces),mInit(true),state(disable)$/;"	f	class:NaoKickEngine
NaoKickEngine	Action/NaoKick.h	/^class NaoKickEngine: public KickEngine$/;"	c
NaoSpecialAction	Action/NaoSpecialAction.cpp	/^NaoSpecialAction::NaoSpecialAction(const SpecialActionInterfaces& interfaces ):SpecialAction(interfaces),mInit(true),state(disable)$/;"	f	class:NaoSpecialAction
NaoSpecialAction	Action/NaoSpecialAction.h	/^class NaoSpecialAction: public SpecialAction$/;"	c
NaoWalkingEngine	Action/NaoWalkingEngine.cpp	/^NaoWalkingEngine::NaoWalkingEngine(const WalkingEngineInterfaces& interfaces):WalkingEngine(interfaces),$/;"	f	class:NaoWalkingEngine
NaoWalkingEngine	Action/NaoWalkingEngine.h	/^class NaoWalkingEngine : public WalkingEngine$/;"	c
NeckMass	RobotModel/nao.h	/^	float NeckMass;$/;"	m	class:Nao
NeckRelTorso_X	RobotModel/nao.h	/^	float NeckRelTorso_X;$/;"	m	class:Nao
NeckRelTorso_Y	RobotModel/nao.h	/^	float NeckRelTorso_Y;$/;"	m	class:Nao
NeckRelTorso_Z	RobotModel/nao.h	/^	float NeckRelTorso_Z;$/;"	m	class:Nao
Net	Net/Net.cpp	/^Net::Net(string host, int port):mHost(host),mPort(port),mIsValid(false)$/;"	f	class:Net
Net	Net/Net.h	/^class Net$/;"	c
NetManager	Net/Net.h	/^	NetManager(){nets.clear();}$/;"	f	class:NetManager
NetManager	Net/Net.h	/^class NetManager$/;"	c
NormalRNG	salt/random.h	/^    NormalRNG(double mean, double sigma = (1))$/;"	f	class:salt::NormalRNG
NormalRNG	salt/random.h	/^class NormalRNG : public boost::normal_distribution<salt::RandomEngine>$/;"	c	namespace:salt
NormalRNG	salt/random.h	/^class NormalRNG : public boost::variate_generator<salt::RandomEngine,$/;"	c	namespace:salt
NormalStep	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::NormalStep()$/;"	f	class:NaoWalkingEngine
Normalize	salt/plane.cpp	/^void Plane::Normalize()$/;"	f	class:Plane
Normalize	salt/rect.h	/^    f_inline void   Normalize()                                                                             { if (mRight < mLeft) gSwap(mLeft, mRight); if (mBottom < mTop) gSwap(mTop, mBottom); }$/;"	f	class:salt::Rect
Normalize	salt/tvector.h	/^f_inline const TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::Normalize()$/;"	f	class:salt::TVector
Normalized	salt/tvector.h	/^f_inline TYPE TVector<DATATYPE, ELEMENTS, TYPE>::Normalized() const$/;"	f	class:salt::TVector
NormalizedLinearInterpolate	salt/tvector.h	/^    f_inline TYPE NormalizedLinearInterpolate(const TYPE& to, float delta) const$/;"	f	class:salt::TVector
NotEqualToOperator	Xabsl/XabslBooleanExpression.h	/^class NotEqualToOperator : public RelationalAndEqualityOperator$/;"	c	namespace:xabsl
NotOperator	Xabsl/XabslBooleanExpression.cpp	/^NotOperator::NotOperator(BooleanExpression* operand1) :$/;"	f	class:xabsl::NotOperator
NotOperator	Xabsl/XabslBooleanExpression.h	/^class NotOperator : public BooleanExpression$/;"	c	namespace:xabsl
ONMYSIDE	Action/NaoGetUp.h	/^		ONMYSIDE,$/;"	e	enum:NaoGetupEngine::State
ONMYSIDE	Action/Strive3DGetUp.h	/^		ONMYSIDE,$/;"	e	enum:Strive3DGetupEngine::State
OPPONENT_10_HEAD	types.h	/^    OPPONENT_10_HEAD,$/;"	e	enum:VisionObject
OPPONENT_10_LEFTARM	types.h	/^    OPPONENT_10_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_10_LEFTFOOT	types.h	/^    OPPONENT_10_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_10_RIGHTARM	types.h	/^    OPPONENT_10_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_10_RIGHTFOOT	types.h	/^    OPPONENT_10_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_11_HEAD	types.h	/^    OPPONENT_11_HEAD,$/;"	e	enum:VisionObject
OPPONENT_11_LEFTARM	types.h	/^    OPPONENT_11_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_11_LEFTFOOT	types.h	/^    OPPONENT_11_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_11_RIGHTARM	types.h	/^    OPPONENT_11_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_11_RIGHTFOOT	types.h	/^    OPPONENT_11_RIGHTFOOT = 118,$/;"	e	enum:VisionObject
OPPONENT_1_HEAD	types.h	/^    OPPONENT_1_HEAD = 64,$/;"	e	enum:VisionObject
OPPONENT_1_LEFTARM	types.h	/^    OPPONENT_1_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_1_LEFTFOOT	types.h	/^    OPPONENT_1_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_1_RIGHTARM	types.h	/^    OPPONENT_1_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_1_RIGHTFOOT	types.h	/^    OPPONENT_1_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_2_HEAD	types.h	/^    OPPONENT_2_HEAD,$/;"	e	enum:VisionObject
OPPONENT_2_LEFTARM	types.h	/^    OPPONENT_2_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_2_LEFTFOOT	types.h	/^    OPPONENT_2_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_2_RIGHTARM	types.h	/^    OPPONENT_2_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_2_RIGHTFOOT	types.h	/^    OPPONENT_2_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_3_HEAD	types.h	/^    OPPONENT_3_HEAD,$/;"	e	enum:VisionObject
OPPONENT_3_LEFTARM	types.h	/^    OPPONENT_3_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_3_LEFTFOOT	types.h	/^    OPPONENT_3_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_3_RIGHTARM	types.h	/^    OPPONENT_3_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_3_RIGHTFOOT	types.h	/^    OPPONENT_3_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_4_HEAD	types.h	/^    OPPONENT_4_HEAD,$/;"	e	enum:VisionObject
OPPONENT_4_LEFTARM	types.h	/^    OPPONENT_4_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_4_LEFTFOOT	types.h	/^    OPPONENT_4_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_4_RIGHTARM	types.h	/^    OPPONENT_4_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_4_RIGHTFOOT	types.h	/^    OPPONENT_4_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_5_HEAD	types.h	/^    OPPONENT_5_HEAD,$/;"	e	enum:VisionObject
OPPONENT_5_LEFTARM	types.h	/^    OPPONENT_5_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_5_LEFTFOOT	types.h	/^    OPPONENT_5_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_5_RIGHTARM	types.h	/^    OPPONENT_5_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_5_RIGHTFOOT	types.h	/^    OPPONENT_5_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_6_HEAD	types.h	/^    OPPONENT_6_HEAD,$/;"	e	enum:VisionObject
OPPONENT_6_LEFTARM	types.h	/^    OPPONENT_6_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_6_LEFTFOOT	types.h	/^    OPPONENT_6_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_6_RIGHTARM	types.h	/^    OPPONENT_6_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_6_RIGHTFOOT	types.h	/^    OPPONENT_6_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_7_HEAD	types.h	/^    OPPONENT_7_HEAD,$/;"	e	enum:VisionObject
OPPONENT_7_LEFTARM	types.h	/^    OPPONENT_7_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_7_LEFTFOOT	types.h	/^    OPPONENT_7_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_7_RIGHTARM	types.h	/^    OPPONENT_7_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_7_RIGHTFOOT	types.h	/^    OPPONENT_7_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_8_HEAD	types.h	/^    OPPONENT_8_HEAD,$/;"	e	enum:VisionObject
OPPONENT_8_LEFTARM	types.h	/^    OPPONENT_8_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_8_LEFTFOOT	types.h	/^    OPPONENT_8_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_8_RIGHTARM	types.h	/^    OPPONENT_8_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_8_RIGHTFOOT	types.h	/^    OPPONENT_8_RIGHTFOOT,$/;"	e	enum:VisionObject
OPPONENT_9_HEAD	types.h	/^    OPPONENT_9_HEAD,$/;"	e	enum:VisionObject
OPPONENT_9_LEFTARM	types.h	/^    OPPONENT_9_LEFTARM,$/;"	e	enum:VisionObject
OPPONENT_9_LEFTFOOT	types.h	/^    OPPONENT_9_LEFTFOOT,$/;"	e	enum:VisionObject
OPPONENT_9_RIGHTARM	types.h	/^    OPPONENT_9_RIGHTARM,$/;"	e	enum:VisionObject
OPPONENT_9_RIGHTFOOT	types.h	/^    OPPONENT_9_RIGHTFOOT,$/;"	e	enum:VisionObject
OSocketStream	Net/osocketstream.hpp	/^            OSocketStream( Socket& socket,$/;"	f	class:rcss::net::OSocketStream
OSocketStream	Net/osocketstream.hpp	/^        class OSocketStream$/;"	c	namespace:rcss::net
ObsPos	AdvancedAgent/PathPlanning.h	/^	vector<Vector2f>ObsPos;\/\/obstacle position$/;"	m	class:PathPlanning
ObstacleAvoidanceTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::ObstacleAvoidanceTo(const Vector2f goalPos)$/;"	f	class:Strive3DBehaviorControl
OffensiveDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::OffensiveDecision()$/;"	f	class:Strive3DBehaviorControl
Offset	salt/rect.h	/^    f_inline void   Offset(int inDeltaX, int inDeltaY)                              { mLeft+=inDeltaX;      mTop+=inDeltaY; mRight+=inDeltaX;       mBottom+=inDeltaY; }$/;"	f	class:salt::Rect
OnOppField	BehaviorControl/Strive3DBehaviorControl.h	/^		OnOppField = 1$/;"	e	enum:Strive3DBehaviorControl::BallState
OnOurField	BehaviorControl/Strive3DBehaviorControl.h	/^		OnOurField = 0,$/;"	e	enum:Strive3DBehaviorControl::BallState
OnlineTimer	Utilities/Logger.cpp	/^OnlineTimer::OnlineTimer()$/;"	f	class:OnlineTimer
OnlineTimer	Utilities/Logger.h	/^class OnlineTimer: public Timer$/;"	c
OpenErr	Net/exception.cpp	/^        OpenErr::OpenErr( int err ) throw()$/;"	f	class:rcss::net::OpenErr
OpenErr	Net/exception.hpp	/^        class OpenErr$/;"	c	namespace:rcss::net
Opp	BehaviorControl/Strive3DBehaviorControl.h	/^		Opp = 2$/;"	e	enum:Strive3DBehaviorControl::BallHolder
OppPos	AdvancedAgent/PathPlanning.h	/^	vector<Vector2f>OppPos;$/;"	m	class:PathPlanning
OppPosDis2Me	AdvancedAgent/PathPlanning.h	/^	vector<float>OppPosDis2Me;$/;"	m	class:PathPlanning
Oppreadyforshoot	WorldModel/worldmodel.cpp	/^bool WorldModel::Oppreadyforshoot()$/;"	f	class:WorldModel
Oppshooting	WorldModel/worldmodel.cpp	/^bool WorldModel::Oppshooting()$/;"	f	class:WorldModel
Option	Xabsl/XabslOption.cpp	/^Option::Option(const char* name,$/;"	f	class:xabsl::Option
Option	Xabsl/XabslOption.h	/^class Option : public Behavior$/;"	c	namespace:xabsl
OptionParameters	Xabsl/XabslOption.cpp	/^OptionParameters::OptionParameters(InputSource& input,$/;"	f	class:xabsl::OptionParameters
OptionParameters	Xabsl/XabslOption.h	/^class OptionParameters : public Parameters$/;"	c	namespace:xabsl
OrOperator	Xabsl/XabslBooleanExpression.cpp	/^OrOperator::OrOperator() $/;"	f	class:xabsl::OrOperator
OrOperator	Xabsl/XabslBooleanExpression.h	/^class OrOperator : public BooleanExpression$/;"	c	namespace:xabsl
Output	Action/PIDController.h	/^	float Output() { return mOutput; }$/;"	f	class:PIDController
OutputSymbol	Xabsl/XabslSymbols.h	/^  OutputSymbol(const char* name, T* pVariable)$/;"	f	class:xabsl::OutputSymbol
OutputSymbol	Xabsl/XabslSymbols.h	/^  OutputSymbol(const char* name,$/;"	f	class:xabsl::OutputSymbol
OutputSymbol	Xabsl/XabslSymbols.h	/^template<class T> class OutputSymbol : public NamedItem$/;"	c	namespace:xabsl
PARSER	Parser/Parser.h	41;"	d
PARSER_INLINE_BINARY	Parser/sexp.h	/^  PARSER_INLINE_BINARY$/;"	e	enum:__anon6
PARSER_NORMAL	Parser/sexp.h	/^  PARSER_NORMAL,$/;"	e	enum:__anon6
PART_BODY	RobotModel/nao.h	/^    static const RobotPart PART_BODY        = JID_ROOT;$/;"	m	class:Nao
PART_HEAD	RobotModel/nao.h	/^    static const RobotPart PART_HEAD        = JID_HEAD_1;$/;"	m	class:Nao
PART_LANKLE	RobotModel/nao.h	/^    static const RobotPart PART_LANKLE      = JID_LLEG_5;$/;"	m	class:Nao
PART_LELBOW	RobotModel/nao.h	/^    static const RobotPart PART_LELBOW      = JID_LARM_3;$/;"	m	class:Nao
PART_LFOOT	RobotModel/nao.h	/^    static const RobotPart PART_LFOOT       = JID_LLEG_6;$/;"	m	class:Nao
PART_LHIP_1	RobotModel/nao.h	/^    static const RobotPart PART_LHIP_1      = JID_LLEG_1;$/;"	m	class:Nao
PART_LHIP_2	RobotModel/nao.h	/^    static const RobotPart PART_LHIP_2      = JID_LLEG_2;$/;"	m	class:Nao
PART_LLOWERARM	RobotModel/nao.h	/^    static const RobotPart PART_LLOWERARM   = JID_LARM_4;$/;"	m	class:Nao
PART_LSHANK	RobotModel/nao.h	/^    static const RobotPart PART_LSHANK      = JID_LLEG_4;$/;"	m	class:Nao
PART_LSHOULDER	RobotModel/nao.h	/^    static const RobotPart PART_LSHOULDER   = JID_LARM_1;$/;"	m	class:Nao
PART_LTHIGH	RobotModel/nao.h	/^    static const RobotPart PART_LTHIGH      = JID_LLEG_3;$/;"	m	class:Nao
PART_LUPPERARM	RobotModel/nao.h	/^    static const RobotPart PART_LUPPERARM   = JID_LARM_2;$/;"	m	class:Nao
PART_MAX	RobotModel/robot.h	/^    RobotPart   PART_MAX;$/;"	m	class:Robot
PART_MIN	RobotModel/robot.h	/^    RobotPart   PART_MIN;$/;"	m	class:Robot
PART_NECK	RobotModel/nao.h	/^    static const RobotPart PART_NECK        = JID_HEAD_2;$/;"	m	class:Nao
PART_RANKLE	RobotModel/nao.h	/^    static const RobotPart PART_RANKLE      = JID_RLEG_5;$/;"	m	class:Nao
PART_RELBOW	RobotModel/nao.h	/^    static const RobotPart PART_RELBOW      = JID_RARM_3;$/;"	m	class:Nao
PART_RFOOT	RobotModel/nao.h	/^    static const RobotPart PART_RFOOT       = JID_RLEG_6;$/;"	m	class:Nao
PART_RHIP_1	RobotModel/nao.h	/^    static const RobotPart PART_RHIP_1      = JID_RLEG_1;$/;"	m	class:Nao
PART_RHIP_2	RobotModel/nao.h	/^    static const RobotPart PART_RHIP_2      = JID_RLEG_2;$/;"	m	class:Nao
PART_RLOWERARM	RobotModel/nao.h	/^    static const RobotPart PART_RLOWERARM   = JID_RARM_4;$/;"	m	class:Nao
PART_RSHANK	RobotModel/nao.h	/^    static const RobotPart PART_RSHANK      = JID_RLEG_4;$/;"	m	class:Nao
PART_RSHOULDER	RobotModel/nao.h	/^    static const RobotPart PART_RSHOULDER   = JID_RARM_1;$/;"	m	class:Nao
PART_RTHIGH	RobotModel/nao.h	/^    static const RobotPart PART_RTHIGH      = JID_RLEG_3;$/;"	m	class:Nao
PART_RUPPERARM	RobotModel/nao.h	/^    static const RobotPart PART_RUPPERARM   = JID_RARM_2;$/;"	m	class:Nao
PASS	Action/NaoDynamicKick.h	/^		PASS,$/;"	e	enum:NaoDynamicKickEngine::State
PASS1	Action/NaoDynamicKick.h	/^	{	PASS1,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASS2	Action/NaoDynamicKick.h	/^		PASS2,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASS3	Action/NaoDynamicKick.h	/^		PASS3,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASS4	Action/NaoDynamicKick.h	/^		PASS4,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASS5	Action/NaoDynamicKick.h	/^		PASS5,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASS6	Action/NaoDynamicKick.h	/^		PASS6,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASS7	Action/NaoDynamicKick.h	/^		PASS7,  $/;"	e	enum:NaoDynamicKickEngine::TPhaseForPass
PASSQ	Action/NaoDynamicKick.h	/^		PASSQ,$/;"	e	enum:NaoDynamicKickEngine::State
PASSQ1	Action/NaoDynamicKick.h	/^		PASSQ1,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PASSQ2	Action/NaoDynamicKick.h	/^		PASSQ2,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PASSQ3	Action/NaoDynamicKick.h	/^		PASSQ3,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PASSQ4	Action/NaoDynamicKick.h	/^		PASSQ4,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PASSQ5	Action/NaoDynamicKick.h	/^		PASSQ5,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PASSQ6	Action/NaoDynamicKick.h	/^		PASSQ6,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PASSQ7	Action/NaoDynamicKick.h	/^		PASSQ7,$/;"	e	enum:NaoDynamicKickEngine::TPhaseForPassQuick
PIDController	Action/PIDController.h	/^	PIDController(float Kp = 1.0, float Ki = 0.0, float Kd = 0.0, float max = 10.0, float min = -10.0)$/;"	f	class:PIDController
PIDController	Action/PIDController.h	/^class PIDController$/;"	c
PID_CONTROLLER_H	Action/PIDController.h	24;"	d
PI_BOTTOM	salt/frustum.h	/^        PI_BOTTOM       = 4,$/;"	e	enum:salt::Frustum::ePlaneID
PI_FAR	salt/frustum.h	/^        PI_FAR          = 3,$/;"	e	enum:salt::Frustum::ePlaneID
PI_LEFT	salt/frustum.h	/^        PI_LEFT         = 1,$/;"	e	enum:salt::Frustum::ePlaneID
PI_NEAR	salt/frustum.h	/^        PI_NEAR         = 0,$/;"	e	enum:salt::Frustum::ePlaneID
PI_RIGHT	salt/frustum.h	/^        PI_RIGHT        = 2,$/;"	e	enum:salt::Frustum::ePlaneID
PI_TOP	salt/frustum.h	/^        PI_TOP          = 5$/;"	e	enum:salt::Frustum::ePlaneID
PLANESIDE_BACK	salt/plane.h	/^    PLANESIDE_BACK                      =       0,$/;"	e	enum:salt::EPlaneSide
PLANESIDE_FORCE_32BIT	salt/plane.h	/^    PLANESIDE_FORCE_32BIT       =       0xffffffff      \/\/ used to force the enum to be 32-bit wide$/;"	e	enum:salt::EPlaneSide
PLANESIDE_FRONT	salt/plane.h	/^    PLANESIDE_FRONT                     =       2,$/;"	e	enum:salt::EPlaneSide
PLANESIDE_ONPLANE	salt/plane.h	/^    PLANESIDE_ONPLANE           =       1,$/;"	e	enum:salt::EPlaneSide
PLANESIDE_SPLIT	salt/plane.h	/^    PLANESIDE_SPLIT                     =       3,$/;"	e	enum:salt::EPlaneSide
PLANE_FORCE_32BIT	salt/plane.h	/^    PLANE_FORCE_32BIT   =       0xffffffff      \/\/ used to force the enum to be 32-bit wide$/;"	e	enum:salt::EPlane
PLANE_XY	salt/plane.h	/^    PLANE_XY                    =       0,$/;"	e	enum:salt::EPlane
PLANE_XZ	salt/plane.h	/^    PLANE_XZ                    =       1,$/;"	e	enum:salt::EPlane
PLANE_YZ	salt/plane.h	/^    PLANE_YZ                    =       2,$/;"	e	enum:salt::EPlane
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	250;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	202;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLAYER_H	WorldModel/player.h	19;"	d
PM_BeforeKickOff	soccertypes.h	/^    PM_BeforeKickOff = 0,      \/*!< before_kick_off:   before the match  *\/$/;"	e	enum:TPlayMode
PM_CORNER_KICK_LEFT	soccertypes.h	/^    PM_CORNER_KICK_LEFT,       \/*!< corner_kick_l:     corner kick left team   *\/$/;"	e	enum:TPlayMode
PM_CORNER_KICK_RIGHT	soccertypes.h	/^    PM_CORNER_KICK_RIGHT,      \/*!< corner_kick_r:     corner kick right team  *\/$/;"	e	enum:TPlayMode
PM_FREE_KICK_LEFT	soccertypes.h	/^    PM_FREE_KICK_LEFT,         \/*!< free_kick_l:       free kick for left team *\/$/;"	e	enum:TPlayMode
PM_FREE_KICK_RIGHT	soccertypes.h	/^    PM_FREE_KICK_RIGHT,        \/*!< free_kick_r:       free kick for right team*\/$/;"	e	enum:TPlayMode
PM_GOAL_KICK_LEFT	soccertypes.h	/^    PM_GOAL_KICK_LEFT,         \/*!< goal_kick_l:       goal kick for left team *\/$/;"	e	enum:TPlayMode
PM_GOAL_KICK_RIGHT	soccertypes.h	/^    PM_GOAL_KICK_RIGHT,        \/*!< goal_kick_r:       goal kick for right team*\/$/;"	e	enum:TPlayMode
PM_GameOver	soccertypes.h	/^    PM_GameOver,$/;"	e	enum:TPlayMode
PM_Goal_Left	soccertypes.h	/^    PM_Goal_Left,$/;"	e	enum:TPlayMode
PM_Goal_Right	soccertypes.h	/^    PM_Goal_Right,$/;"	e	enum:TPlayMode
PM_KickIn_Left	soccertypes.h	/^    PM_KickIn_Left,$/;"	e	enum:TPlayMode
PM_KickIn_Right	soccertypes.h	/^    PM_KickIn_Right,$/;"	e	enum:TPlayMode
PM_KickOff_Left	soccertypes.h	/^    PM_KickOff_Left = 1,       \/*!< kick_off_left:     kick off for the left team  *\/$/;"	e	enum:TPlayMode
PM_KickOff_Right	soccertypes.h	/^    PM_KickOff_Right = 2,      \/*!< kick_off_right:    kick off for the right team *\/$/;"	e	enum:TPlayMode
PM_NONE	soccertypes.h	/^    PM_NONE                    \/*!< no play mode, this must be the last entry *\/$/;"	e	enum:TPlayMode
PM_OFFSIDE_LEFT	soccertypes.h	/^    PM_OFFSIDE_LEFT,           \/*!< offside_l:         offside for left team   *\/$/;"	e	enum:TPlayMode
PM_OFFSIDE_RIGHT	soccertypes.h	/^    PM_OFFSIDE_RIGHT,          \/*!< offside_r:         offside for right team  *\/$/;"	e	enum:TPlayMode
PM_PlayOn	soccertypes.h	/^    PM_PlayOn,                 \/*!< play_on:           regular game play *\/$/;"	e	enum:TPlayMode
PP	AdvancedAgent/PathPlanning.h	20;"	d
PRECISION	Utilities/Logger.h	42;"	d
PREPARE	Action/NaoWalkingEngine.h	/^        PREPARE,$/;"	e	enum:NaoWalkingEngine::TPhase
ParameterAssignment	Xabsl/XabslParameters.cpp	/^ParameterAssignment::ParameterAssignment($/;"	f	class:xabsl::ParameterAssignment
ParameterAssignment	Xabsl/XabslParameters.h	/^class ParameterAssignment : public Parameters$/;"	c	namespace:xabsl
Parameters	Xabsl/XabslParameters.h	/^  Parameters(ErrorHandler& errorHandler)$/;"	f	class:xabsl::Parameters
Parameters	Xabsl/XabslParameters.h	/^class Parameters$/;"	c	namespace:xabsl
Parser	Parser/Parser.cpp	/^Parser::Parser():$/;"	f	class:Parser
Parser	Parser/Parser.h	/^class Parser$/;"	c
PassDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::PassDecision()$/;"	f	class:Strive3DBehaviorControl
PassTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::PassTo(Vector2f dest)$/;"	f	class:Strive3DBehaviorControl
Passing	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::Passing()$/;"	f	class:NaoDynamicKickEngine
PassingQuick	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::PassingQuick()$/;"	f	class:NaoDynamicKickEngine
PathPlanning	AdvancedAgent/PathPlanning.cpp	/^PathPlanning::PathPlanning()$/;"	f	class:PathPlanning
PathPlanning	AdvancedAgent/PathPlanning.h	/^class PathPlanning$/;"	c
PathPlanningTest	BehaviorControl/WalkPathPlanningControl.cpp	/^PathPlanningTest::PathPlanningTest() :$/;"	f	class:PathPlanningTest
PathPlanningTest	BehaviorControl/WalkPathPlanningControl.h	/^class PathPlanningTest$/;"	c
Plan	AdvancedAgent/Plan.h	/^	Plan(){}$/;"	f	class:Plan
Plan	AdvancedAgent/Plan.h	/^class Plan$/;"	c
PlanManager	AdvancedAgent/PlanManager.cpp	/^PlanManager::PlanManager()$/;"	f	class:PlanManager
PlanManager	AdvancedAgent/PlanManager.h	/^class PlanManager$/;"	c
Plane	salt/plane.h	/^    f_inline Plane() {}         \/\/ empty constructor ... performance$/;"	f	class:salt::Plane
Plane	salt/plane.h	/^    f_inline Plane(const Vector3f& norm, const Vector3f& pnt)                                           { normal=norm; d=-((norm.x()*pnt.x()) + (norm.y()*pnt.y()) + (norm.z()*pnt.z())); }$/;"	f	class:salt::Plane
Plane	salt/plane.h	/^    f_inline Plane(const Vector3f& norm, const float D)                                                         { normal=norm; d=D; }$/;"	f	class:salt::Plane
Plane	salt/plane.h	/^    f_inline Plane(const Vector3f& v1,  const Vector3f &v2, const Vector3f &v3)         { normal=(v2-v1).Cross(v3-v1).Normalized(); d=-normal.Dot(v1); }$/;"	f	class:salt::Plane
Plane	salt/plane.h	/^class Plane$/;"	c	namespace:salt
Player	WorldModel/player.cpp	/^Player::Player() : mUnum(0), mName("<unnamed>") $/;"	f	class:Player
Player	WorldModel/player.h	/^class Player : public DynamicObject$/;"	c
PlayerState	WorldModel/player.h	/^enum PlayerState$/;"	g
PlusOperator	Xabsl/XabslDecimalExpression.h	/^class PlusOperator : public ArithmeticOperator$/;"	c	namespace:xabsl
PortType	Net/addr.hpp	/^            typedef boost::uint16_t PortType;$/;"	t	class:rcss::net::Addr
Pos	salt/matrix.h	/^    f_inline Vector3f & Pos()                           { return *(Vector3f*)  &El(0, 3); }$/;"	f	class:salt::Matrix
Pos	salt/matrix.h	/^    f_inline const Vector3f &   Pos() const                     { return *(const Vector3f*) &El(0, 3); }$/;"	f	class:salt::Matrix
PositioningPlan	AdvancedAgent/PositioningPlan.cpp	/^PositioningPlan::PositioningPlan()$/;"	f	class:PositioningPlan
PositioningPlan	AdvancedAgent/PositioningPlan.h	/^class PositioningPlan:public Plan$/;"	c
Precision	Geometry/geometry.h	/^inline float Precision(float value, float remain = 3.0f)$/;"	f
Prepare	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::Prepare()$/;"	f	class:NaoWalkingEngine
Prepare	WorldModel/worldmodel.h	/^	bool Prepare;$/;"	m	class:WorldModel
PrepareDecision	BehaviorControl/Strive3DBehaviorControl.cpp	/^bool Strive3DBehaviorControl::PrepareDecision()$/;"	f	class:Strive3DBehaviorControl
PrintGreeting	strive3d.cpp	/^void PrintGreeting()$/;"	f
PrintHelp	strive3d.cpp	/^void PrintHelp()$/;"	f
PrintLink	RobotModel/robot.cpp	/^void Robot::PrintLink(int j)$/;"	f	class:Robot
PutMessage	Net/Net.cpp	/^void Net::PutMessage ( const string& msg )$/;"	f	class:Net
Qb	Geometry/trajectory.h	/^    float Qb;$/;"	m	class:Trajectory
Qf	Geometry/trajectory.h	/^    float Qf;$/;"	m	class:Trajectory
Qge	Geometry/trajectory.h	/^    float Qge;$/;"	m	class:Trajectory
Qgs	Geometry/trajectory.h	/^    float Qgs;$/;"	m	class:Trajectory
R	RobotModel/robot.h	/^        salt::Matrix    R;$/;"	m	struct:Robot::RobotPartInfo
R	RobotModel/robot.h	/^        salt::Matrix   R;$/;"	m	struct:Robot::Link
RANGE_H	Utilities/Range.h	25;"	d
RCSS_NET_ADDR_HPP	Net/addr.hpp	22;"	d
RCSS_NET_EXCEPTION_HPP	Net/exception.hpp	22;"	d
RCSS_NET_HANDLER_HPP	Net/handler.hpp	22;"	d
RCSS_NET_IOSOCKETSTREAM_HPP	Net/iosocketstream.hpp	22;"	d
RCSS_NET_ISOCKETSTREAM_HPP	Net/isocketstream.hpp	22;"	d
RCSS_NET_OSOCKETSTREAM_HPP	Net/osocketstream.hpp	23;"	d
RCSS_NET_SOCKETSTREAMBUF_HPP	Net/socketstreambuf.hpp	23;"	d
RCSS_NET_SOCKET_HPP	Net/socket.hpp	22;"	d
RCSS_NET_TCPSOCKET_HPP	Net/tcpsocket.hpp	23;"	d
RCSS_NET_UDPSOCKET_HPP	Net/udpsocket.hpp	23;"	d
RM	one_build/Action/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/AdvancedAgent/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/BehaviorControl/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Geometry/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/HeadControl/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Module/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Net/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Parser/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/RobotModel/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Trainer_Client/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Utilities/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/WorldModel/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/Xabsl/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	one_build/salt/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM_MATCH	AdvancedAgent/AdvancedAgent.h	/^	RM_MATCH,$/;"	e	enum:RunMode
RM_NONE	AdvancedAgent/AdvancedAgent.h	/^ 	RM_NONE$/;"	e	enum:RunMode
RM_TEST_DECISION	AdvancedAgent/AdvancedAgent.h	/^	RM_TEST_DECISION,$/;"	e	enum:RunMode
RM_TEST_PATHPLANNING	AdvancedAgent/AdvancedAgent.h	/^	RM_TEST_PATHPLANNING,$/;"	e	enum:RunMode
ROBOT_H	RobotModel/robot.h	19;"	d
RandomEngine	salt/random.h	/^    RandomEngine() : boost::mt19937() { }$/;"	f	class:salt::RandomEngine
RandomEngine	salt/random.h	/^class RandomEngine : public boost::mt19937$/;"	c	namespace:salt
RandomUnitVector	salt/vector.h	/^    f_inline void RandomUnitVector()$/;"	f	class:salt::Vector3f
Range	Utilities/Range.h	/^    Range() {min = max = 0;}$/;"	f	class:Range
Range	Utilities/Range.h	/^    Range(T min,T max)$/;"	f	class:Range
Range	Utilities/Range.h	/^template <class T> class Range$/;"	c
RealSlowScan	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::RealSlowScan()$/;"	f	class:NaoHeadControl
Rect	salt/rect.h	/^    f_inline                Rect()                                                                                                  { }$/;"	f	class:salt::Rect
Rect	salt/rect.h	/^    f_inline                Rect(const Rect &inOther)                                                               : mLeft(inOther.Left()), mTop(inOther.Top()), mRight(inOther.Right()), mBottom(inOther.Bottom()) { }$/;"	f	class:salt::Rect
Rect	salt/rect.h	/^    f_inline                Rect(int inLeft, int inTop, int inRight, int inBottom)  : mLeft(inLeft), mTop(inTop), mRight(inRight), mBottom(inBottom) { }$/;"	f	class:salt::Rect
Rect	salt/rect.h	/^class Rect$/;"	c	namespace:salt
Reflect	salt/vector.h	/^    f_inline        Vector3f Reflect(const Vector3f &normal)$/;"	f	class:salt::Vector3f
RelationalAndEqualityOperator	Xabsl/XabslBooleanExpression.h	/^class RelationalAndEqualityOperator : public BooleanExpression$/;"	c	namespace:xabsl
ReportTeamMatePosition	BaseAgent.cpp	/^const string BaseAgent::ReportTeamMatePosition(int number)$/;"	f	class:BaseAgent
ResetInfo	WorldModel/worldmodel.cpp	/^void WorldModel::ResetInfo()$/;"	f	class:WorldModel
ReturnToBall	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::ReturnToBall()$/;"	f	class:NaoHeadControl
Right	salt/matrix.h	/^    f_inline Vector3f & Right()                         { return *(Vector3f*)  &El(0, 0); }$/;"	f	class:salt::Matrix
Right	salt/matrix.h	/^    f_inline const Vector3f &   Right() const           { return *(const Vector3f*) &El(0, 0); }$/;"	f	class:salt::Matrix
Right	salt/rect.h	/^    f_inline int    Right() const                   { return mRight; }$/;"	f	class:salt::Rect
Robot	RobotModel/robot.cpp	/^Robot::Robot() :$/;"	f	class:Robot
Robot	RobotModel/robot.h	/^class Robot$/;"	c
RobotPart	types.h	/^typedef int RobotPart;$/;"	t
RobotPartInfo	RobotModel/robot.h	/^    struct RobotPartInfo {$/;"	s	class:Robot
Rodrigues	Geometry/geometry.cpp	/^Matrix Rodrigues(const Vector3f& axis, float theta)$/;"	f
RoleAssignment_forward1	WorldModel/worldmodel.cpp	/^void WorldModel::RoleAssignment_forward1()$/;"	f	class:WorldModel
RoleAssignment_forward2	WorldModel/worldmodel.cpp	/^void WorldModel::RoleAssignment_forward2()$/;"	f	class:WorldModel
RoleInTeam	WorldModel/self.h	/^	enum RoleInTeam$/;"	g	class:Self
RotToOmega	Geometry/geometry.cpp	/^salt::Vector3f RotToOmega(const salt::Matrix& R)$/;"	f
Rotate	salt/matrix.h	/^f_inline Vector3f Matrix::Rotate(const Vector3f & inVector) const$/;"	f	class:salt::Matrix
Rotate	salt/vector.h	/^    f_inline void Rotate(float degree)$/;"	f	class:salt::Vector2f
RotateX	salt/matrix.h	/^f_inline const Matrix & Matrix::RotateX(float inAngle)$/;"	f	class:salt::Matrix
RotateY	salt/matrix.h	/^f_inline const Matrix & Matrix::RotateY(float inAngle)$/;"	f	class:salt::Matrix
RotateZ	salt/matrix.h	/^f_inline const Matrix & Matrix::RotateZ(float inAngle)$/;"	f	class:salt::Matrix
Rotated	salt/vector.h	/^   	f_inline Vector2f Rotated(float degree)$/;"	f	class:salt::Vector2f
RotationMatrixFrom2Vec	Geometry/geometry.cpp	/^Matrix RotationMatrixFrom2Vec(Vector3f from, Vector3f to)$/;"	f
RotationX	salt/matrix.h	/^f_inline void Matrix::RotationX(float inAngle)$/;"	f	class:salt::Matrix
RotationY	salt/matrix.h	/^f_inline void Matrix::RotationY(float inAngle)$/;"	f	class:salt::Matrix
RotationZ	salt/matrix.h	/^f_inline void Matrix::RotationZ(float inAngle)$/;"	f	class:salt::Matrix
RotationfromWalkingEngine	WorldModel/self.h	/^    double RotationfromWalkingEngine;$/;"	m	class:Self
RunMode	AdvancedAgent/AdvancedAgent.h	/^enum RunMode$/;"	g
SAFERATE	WorldModel/player.cpp	24;"	d	file:
SALT_BOUNDS_H	salt/bounds.h	23;"	d
SALT_DEFINES_H	salt/defines.h	29;"	d
SALT_FRUSTUM_H	salt/frustum.h	37;"	d
SALT_GMATH_H	salt/gmath.h	27;"	d
SALT_MATRIX_H	salt/matrix.h	23;"	d
SALT_PLANE_H	salt/plane.h	33;"	d
SALT_RANDOM_H	salt/random.h	23;"	d
SALT_RECT_H	salt/rect.h	23;"	d
SALT_TVECTOR_H	salt/tvector.h	34;"	d
SALT_VECTOR_H	salt/vector.h	31;"	d
SEXP_BASIC	Parser/sexp.h	/^  SEXP_BASIC,$/;"	e	enum:__anon5
SEXP_BINARY	Parser/sexp.h	/^  SEXP_BINARY$/;"	e	enum:__anon5
SEXP_DQUOTE	Parser/sexp.h	/^  SEXP_DQUOTE,$/;"	e	enum:__anon5
SEXP_LIST	Parser/sexp.h	/^  SEXP_LIST$/;"	e	enum:__anon4
SEXP_SQUOTE	Parser/sexp.h	/^  SEXP_SQUOTE,$/;"	e	enum:__anon5
SEXP_VALUE	Parser/sexp.h	/^  SEXP_VALUE,$/;"	e	enum:__anon4
SHARED_LIB_EXPORT	salt/defines.h	45;"	d
SHARED_LIB_EXPORT	salt/defines.h	51;"	d
SHELL	one_build/Action/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/AdvancedAgent/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/BehaviorControl/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Geometry/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/HeadControl/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Module/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Net/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Parser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/RobotModel/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Trainer_Client/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Utilities/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/WorldModel/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/Xabsl/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	one_build/salt/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGN	Geometry/geometry.cpp	/^SIGN(float a, float b)$/;"	f
SLOWSPEEDLOWTHRESHOLD	WorldModel/player.h	27;"	d
SLOWSPEEDUPTHRESHOLD	WorldModel/player.h	26;"	d
SLOWWALK	WorldModel/player.h	/^	SLOWWALK	= 1,$/;"	e	enum:PlayerState
SOCCERTYPES_H	soccertypes.h	23;"	d
SPACIALACTION_H	Action/SpecialAction.h	24;"	d
SPECIALACTIONSELECTOR_H	Action/SpecialActionSelector.h	24;"	d
STARS	Utilities/Logger.h	53;"	d
STILL	WorldModel/ball.h	/^		STILL		= 3,		$/;"	e	enum:Ball::BallState
STILL	WorldModel/player.h	/^	STILL		= 0,$/;"	e	enum:PlayerState
STILLLOWTHRESHOLD	WorldModel/player.h	29;"	d
STILLUPTHRESHOLD	WorldModel/player.h	28;"	d
STOP	Action/NaoWalkingEngine.h	/^        STOP$/;"	e	enum:NaoWalkingEngine::TPhase
STRIVE3DBEHAVIORCONTROL_H	BehaviorControl/Strive3DBehaviorControl.h	22;"	d
STRIVE3DGETUP_H	Action/Strive3DGetUp.h	23;"	d
STR_PM_BeforeKickOff	soccertypes.h	55;"	d
STR_PM_CORNER_KICK_LEFT	soccertypes.h	61;"	d
STR_PM_CORNER_KICK_RIGHT	soccertypes.h	62;"	d
STR_PM_FREE_KICK_LEFT	soccertypes.h	70;"	d
STR_PM_FREE_KICK_RIGHT	soccertypes.h	71;"	d
STR_PM_GOAL_KICK_LEFT	soccertypes.h	63;"	d
STR_PM_GOAL_KICK_RIGHT	soccertypes.h	64;"	d
STR_PM_GameOver	soccertypes.h	67;"	d
STR_PM_Goal_Left	soccertypes.h	68;"	d
STR_PM_Goal_Right	soccertypes.h	69;"	d
STR_PM_KickIn_Left	soccertypes.h	59;"	d
STR_PM_KickIn_Right	soccertypes.h	60;"	d
STR_PM_KickOff_Left	soccertypes.h	56;"	d
STR_PM_KickOff_Right	soccertypes.h	57;"	d
STR_PM_OFFSIDE_LEFT	soccertypes.h	65;"	d
STR_PM_OFFSIDE_RIGHT	soccertypes.h	66;"	d
STR_PM_PlayOn	soccertypes.h	58;"	d
STR_PM_Unknown	soccertypes.h	72;"	d
SUFFIXES	one_build/Action/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/AdvancedAgent/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/BehaviorControl/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Geometry/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/HeadControl/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Module/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Net/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Parser/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/RobotModel/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Trainer_Client/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Utilities/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/WorldModel/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/Xabsl/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	one_build/salt/Makefile	/^SUFFIXES =$/;"	m
Say	BaseAgent.cpp	/^const string BaseAgent::Say(const string& message)$/;"	f	class:BaseAgent
Scale	salt/matrix.h	/^f_inline void Matrix::Scale(const Vector3f & inVector)$/;"	f	class:salt::Matrix
ScanAllDirection	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::ScanAllDirection()$/;"	f	class:NaoHeadControl
ScanAwayFromBall	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::ScanAwayFromBall()$/;"	f	class:NaoHeadControl
ScanLeft	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::ScanLeft()$/;"	f	class:NaoHeadControl
ScanRight	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::ScanRight()$/;"	f	class:NaoHeadControl
SeeBall	WorldModel/worldmodel.h	/^	bool SeeBall() { return mICanSeeBall; }$/;"	f	class:WorldModel
SegmentCross	WorldModel/convexhullmanager.cpp	/^bool SegmentCross(Vector3f A,Vector3f B, Vector3f C, Vector3f D)$/;"	f
SelectInput	Net/Net.cpp	/^bool Net::SelectInput()$/;"	f	class:Net
Self	BehaviorControl/Strive3DBehaviorControl.h	/^		Self = 0,$/;"	e	enum:Strive3DBehaviorControl::BallHolder
Self	WorldModel/self.cpp	/^Self::Self() :$/;"	f	class:Self
Self	WorldModel/self.h	/^class Self : public Player$/;"	c
Set	salt/frustum.cpp	/^void Frustum::Set(const Matrix& worldTransform, float fov, float zNear, float zFar, float aspect)$/;"	f	class:Frustum
Set	salt/matrix.h	/^f_inline void Matrix::Set(float m00, float m01, float m02, float m03,$/;"	f	class:salt::Matrix
Set	salt/plane.h	/^    f_inline void Set(const Vector3f& norm, const Vector3f& pnt)$/;"	f	class:salt::Plane
Set	salt/plane.h	/^    f_inline void Set(const Vector3f& norm, const float D)                                                      { normal=norm; d=D; }$/;"	f	class:salt::Plane
Set	salt/plane.h	/^    f_inline void Set(const Vector3f& v1,   const Vector3f &v2, const Vector3f &v3)     { normal=(v2-v1).Cross(v3-v1).Normalized(); d=-normal.Dot(v1); }$/;"	f	class:salt::Plane
Set	salt/rect.h	/^    f_inline void   Set(int inLeft, int inTop, int inRight, int inBottom)   { mLeft=inLeft; mTop=inTop;                     mRight=inRight;                                                 mBottom=inBottom; }$/;"	f	class:salt::Rect
Set	salt/tvector.h	/^    const TYPE& Set(const DATATYPE& x, const DATATYPE& y, const DATATYPE& z)$/;"	f	class:salt::TVector3
Set	salt/tvector.h	/^    const TYPE& Set(const TYPE& v)$/;"	f	class:salt::TVector3
Set	salt/tvector.h	/^    f_inline const TYPE& Set(const DATATYPE& x, const DATATYPE& y)$/;"	f	class:salt::TVector2
SetBallDistance	WorldModel/ball.h	/^	inline void SetBallDistance(double bDistance )$/;"	f	class:Ball
SetBallLocalPos	WorldModel/ball.h	/^	inline void SetBallLocalPos( Vector3f bLocalPos)$/;"	f	class:Ball
SetBallPhi	WorldModel/ball.h	/^	inline void SetBallPhi(double bPhi)$/;"	f	class:Ball
SetBallPosByCommunication	WorldModel/ball.h	/^	inline void SetBallPosByCommunication( Vector3f bPos)$/;"	f	class:Ball
SetBallTheta	WorldModel/ball.h	/^	inline void SetBallTheta(double bTheta)$/;"	f	class:Ball
SetBreakPoints	Geometry/MatrixSpline.cpp	/^void MatrixSpline::SetBreakPoints(float* x, Matrix * y, int n, float yp1, float ypn)$/;"	f	class:MatrixSpline
SetBreakPoints	Geometry/spline.cpp	/^void Spline::SetBreakPoints(float* x, float* y, int n, $/;"	f	class:Spline
SetCommand	BaseAgent.cpp	/^void BaseAgent::SetCommand(const string& command)$/;"	f	class:BaseAgent
SetData	salt/tvector.h	/^inline const TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::SetData(const DATATYPE *copy)$/;"	f	class:salt::TVector
SetHead	WorldModel/player.h	/^	inline void SetHead(Vector3f local, Vector3f globle) $/;"	f	class:Player
SetLeftArm	WorldModel/player.h	/^	inline void SetLeftArm(Vector3f local, Vector3f globle) $/;"	f	class:Player
SetLeftFoot	WorldModel/player.h	/^	inline void SetLeftFoot(Vector3f local, Vector3f globle) $/;"	f	class:Player
SetOurTeamName	WorldModel/fieldinfo.cpp	/^void FieldInfo::SetOurTeamName(std::string name)$/;"	f	class:FieldInfo
SetParams	Geometry/trajectory.cpp	/^void Trajectory::SetParams(const float params[10])$/;"	f	class:Trajectory
SetPort	Net/Net.h	/^	void SetPort(int port) { mPort = port; }$/;"	f	class:Net
SetRightArm	WorldModel/player.h	/^	inline void SetRightArm(Vector3f local, Vector3f globle) $/;"	f	class:Player
SetRightFoot	WorldModel/player.h	/^	inline void SetRightFoot(Vector3f local, Vector3f globle) $/;"	f	class:Player
SetServer	Net/Net.h	/^	void SetServer(string host) { mHost = host; }$/;"	f	class:Net
SetTorsoPitchAngle	WorldModel/self.cpp	/^void Self::SetTorsoPitchAngle( const Matrix& mat,const float YawAngle )$/;"	f	class:Self
SetTorsoPitchAngleByGyro	WorldModel/self.cpp	/^void Self::SetTorsoPitchAngleByGyro( const Matrix& mat )$/;"	f	class:Self
SetTorsoRollAngle	WorldModel/self.cpp	/^void Self::SetTorsoRollAngle ( const Matrix& mat,const float YawAngle )$/;"	f	class:Self
SetTorsoRollAngleByGyro	WorldModel/self.cpp	/^void Self::SetTorsoRollAngleByGyro ( const Matrix& mat )$/;"	f	class:Self
SetTorsoYawAngle	WorldModel/self.cpp	/^void Self::SetTorsoYawAngle  ( const Matrix& mat )$/;"	f	class:Self
SetTorsoYawAngleByGyro	WorldModel/self.cpp	/^void Self::SetTorsoYawAngleByGyro  ( const Matrix& mat )$/;"	f	class:Self
SetWalkParams	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::SetWalkParams()$/;"	f	class:NaoWalkingEngine
SetWalkingDsForLocalize	WorldModel/self.h	/^    inline void SetWalkingDsForLocalize(Vector3f Ds,double rotation)\/\/add by Neil$/;"	f	class:Self
SetWalkingSlowGain	Action/NaoWalkingEngine.h	/^    void SetWalkingSlowGain(float slowGain)$/;"	f	class:NaoWalkingEngine
SetupJointIDMap	RobotModel/robot.cpp	/^void Robot::SetupJointIDMap()$/;"	f	class:Robot
SetupLinks	RobotModel/nao.cpp	/^void Nao::SetupLinks()$/;"	f	class:Nao
SetupPlayModeMap	WorldModel/fieldinfo.cpp	/^void FieldInfo::SetupPlayModeMap()$/;"	f	class:FieldInfo
SetupRobotPartInfo	RobotModel/nao.cpp	/^void Nao::SetupRobotPartInfo()$/;"	f	class:Nao
SetupVisionObjectMap	WorldModel/worldmodel.cpp	/^void WorldModel::SetupVisionObjectMap()$/;"	f	class:WorldModel
SetupVisionSenseMap	WorldModel/worldmodel.cpp	/^void WorldModel::SetupVisionSenseMap()$/;"	f	class:WorldModel
ShankHeight	RobotModel/nao.h	/^    float ShankHeight;$/;"	m	class:Nao
ShankLength	RobotModel/nao.h	/^    float ShankLength;$/;"	m	class:Nao
ShankMass	RobotModel/nao.h	/^    float ShankMass;$/;"	m	class:Nao
ShankRelThigh_X	RobotModel/nao.h	/^    float ShankRelThigh_X;$/;"	m	class:Nao
ShankRelThigh_Y	RobotModel/nao.h	/^    float ShankRelThigh_Y;$/;"	m	class:Nao
ShankRelThigh_Z	RobotModel/nao.h	/^    float ShankRelThigh_Z;$/;"	m	class:Nao
ShankWidth	RobotModel/nao.h	/^    float ShankWidth;$/;"	m	class:Nao
ShiftInfo	WorldModel/worldmodel.cpp	/^void WorldModel::ShiftInfo()$/;"	f	class:WorldModel
ShoulderMass	RobotModel/nao.h	/^	float ShoulderMass;$/;"	m	class:Nao
ShoulderRelTorso_X	RobotModel/nao.h	/^	float ShoulderRelTorso_X;$/;"	m	class:Nao
ShoulderRelTorso_Y	RobotModel/nao.h	/^	float ShoulderRelTorso_Y;$/;"	m	class:Nao
ShoulderRelTorso_Z	RobotModel/nao.h	/^	float ShoulderRelTorso_Z;$/;"	m	class:Nao
Shrink	salt/rect.h	/^    f_inline void   Shrink(int inDelta)                                                             { mLeft+=inDelta;       mTop+=inDelta;  mRight-=inDelta; mBottom-=inDelta;      }$/;"	f	class:salt::Rect
Shrink	salt/rect.h	/^    f_inline void   Shrink(int inDeltaLeft, int inDeltaTop, int inDeltaRight, int inDeltaBottom) { mLeft+=inDeltaLeft; mTop+=inDeltaTop; mRight-=inDeltaRight; mBottom-=inDeltaBottom;              }$/;"	f	class:salt::Rect
Shrink	salt/rect.h	/^    f_inline void   Shrink(int inDeltaWidth, int inDeltaHeight)             { mRight-=inDeltaWidth; mBottom-=inDeltaHeight; }$/;"	f	class:salt::Rect
Socket	Net/socket.cpp	/^        Socket::Socket( SocketDesc s )$/;"	f	class:rcss::net::Socket
Socket	Net/socket.cpp	/^        Socket::Socket()$/;"	f	class:rcss::net::Socket
Socket	Net/socket.hpp	/^        class Socket$/;"	c	namespace:rcss::net
SocketDesc	Net/socket.hpp	/^                        typedef SOCKET SocketDesc;$/;"	t	class:rcss::net::Socket
SocketStreamBuf	Net/socketstreambuf.hpp	/^            SocketStreamBuf( Socket& socket,$/;"	f	class:rcss::net::SocketStreamBuf
SocketStreamBuf	Net/socketstreambuf.hpp	/^        class SocketStreamBuf$/;"	c	namespace:rcss::net
SolutionRequest	Module/SolutionRequest.cpp	/^SolutionRequest::SolutionRequest(bool setDefault)$/;"	f	class:SolutionRequest
SolutionRequest	Module/SolutionRequest.h	/^class SolutionRequest$/;"	c
Solve	RobotModel/robot.cpp	/^bool Robot::Solve(float* X, const float** A, const float* B, int row, int column)$/;"	f	class:Robot
SpecialAction	Action/SpecialAction.h	/^  SpecialAction(const SpecialActionInterfaces& interfaces)$/;"	f	class:SpecialAction
SpecialAction	Action/SpecialAction.h	/^class SpecialAction : public Module, protected SpecialActionInterfaces$/;"	c
SpecialActionID	Action/ActionRequest.h	/^    enum SpecialActionID$/;"	g	class:SpecialActionRequest
SpecialActionInterfaces	Action/SpecialAction.h	/^  SpecialActionInterfaces($/;"	f	class:SpecialActionInterfaces
SpecialActionInterfaces	Action/SpecialAction.h	/^class SpecialActionInterfaces$/;"	c
SpecialActionRequest	Action/ActionRequest.h	/^    SpecialActionRequest():specialActionType(kickWithLeft){}$/;"	f	class:SpecialActionRequest
SpecialActionRequest	Action/ActionRequest.h	/^class SpecialActionRequest$/;"	c
SpecialActionSelector	Action/SpecialActionSelector.h	/^  SpecialActionSelector(ModuleHandler &handler, const SpecialActionInterfaces& interfaces) $/;"	f	class:SpecialActionSelector
SpecialActionSelector	Action/SpecialActionSelector.h	/^class SpecialActionSelector : public ModuleSelector, public SpecialActionInterfaces$/;"	c
Spline	Geometry/spline.cpp	/^Spline::Spline() :$/;"	f	class:Spline
Spline	Geometry/spline.cpp	/^Spline::Spline(float* x, float* y, int n)$/;"	f	class:Spline
Spline	Geometry/spline.h	/^class Spline$/;"	c
SquareLength	salt/tvector.h	/^f_inline DATATYPE TVector<DATATYPE, ELEMENTS, TYPE>::SquareLength() const$/;"	f	class:salt::TVector
Stand	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::Stand()$/;"	f	class:NaoBehaviorControl
Stand	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::Stand()$/;"	f	class:Strive3DBehaviorControl
State	Action/NaoDynamicKick.h	/^	enum State$/;"	g	class:NaoDynamicKickEngine
State	Action/NaoGetUp.h	/^	enum State$/;"	g	class:NaoGetupEngine
State	Action/NaoKick.h	/^	enum State$/;"	g	class:NaoKickEngine
State	Action/NaoSpecialAction.h	/^	enum State$/;"	g	class:NaoSpecialAction
State	Action/Strive3DGetUp.h	/^	enum State$/;"	g	class:Strive3DGetupEngine
State	Xabsl/XabslState.cpp	/^State::State(const char* name, ErrorHandler& errorHandler,$/;"	f	class:xabsl::State
State	Xabsl/XabslState.h	/^class State : public NamedItem$/;"	c	namespace:xabsl
Statement	Xabsl/XabslStatement.h	/^class Statement$/;"	c	namespace:xabsl
StaticModule	Utilities/StaticModule.h	/^class StaticModule$/;"	c
Stop	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::Stop()$/;"	f	class:NaoWalkingEngine
Stop	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::Stop()$/;"	f	class:NaoBehaviorControl
Stop	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::Stop()$/;"	f	class:Strive3DBehaviorControl
Str	Utilities/xmlParser.cpp	/^Str::Str(std::string s_value):val(s_value)$/;"	f	class:Str
Str	Utilities/xmlParser.h	/^class Str$/;"	c
Strive3DBehaviorControl	BehaviorControl/Strive3DBehaviorControl.cpp	/^Strive3DBehaviorControl::Strive3DBehaviorControl(ModuleHandler& moduleHandler,const BehaviorControlInterfaces& interfaces)$/;"	f	class:Strive3DBehaviorControl
Strive3DBehaviorControl	BehaviorControl/Strive3DBehaviorControl.h	/^class Strive3DBehaviorControl: public BehaviorControl$/;"	c
Strive3DGetupEngine	Action/Strive3DGetUp.cpp	/^Strive3DGetupEngine::Strive3DGetupEngine(const GetupEngineInterfaces& interfaces ):GetupEngine(interfaces),mInit(true),state(disable)$/;"	f	class:Strive3DGetupEngine
Strive3DGetupEngine	Action/Strive3DGetUp.h	/^class Strive3DGetupEngine: public GetupEngine$/;"	c
SubsequentOptionReachedTargetStateCondition	Xabsl/XabslBooleanExpression.cpp	/^SubsequentOptionReachedTargetStateCondition::SubsequentOptionReachedTargetStateCondition(Array<Action*>& actions,$/;"	f	class:xabsl::SubsequentOptionReachedTargetStateCondition
SubsequentOptionReachedTargetStateCondition	Xabsl/XabslBooleanExpression.h	/^class SubsequentOptionReachedTargetStateCondition : public BooleanExpression$/;"	c	namespace:xabsl
SwingArms	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::SwingArms()$/;"	f	class:NaoWalkingEngine
Symbols	Xabsl/XabslSymbols.h	/^  Symbols(ErrorHandler& errorHandler)$/;"	f	class:xabsl::Symbols
Symbols	Xabsl/XabslSymbols.h	/^class Symbols$/;"	c	namespace:xabsl
TCPSocket	Net/tcpsocket.cpp	/^        TCPSocket::TCPSocket( SocketDesc& s )$/;"	f	class:rcss::net::TCPSocket
TCPSocket	Net/tcpsocket.cpp	/^        TCPSocket::TCPSocket( const Addr& addr )$/;"	f	class:rcss::net::TCPSocket
TCPSocket	Net/tcpsocket.cpp	/^        TCPSocket::TCPSocket( const Addr& addr, const Addr& dest )$/;"	f	class:rcss::net::TCPSocket
TCPSocket	Net/tcpsocket.cpp	/^        TCPSocket::TCPSocket()$/;"	f	class:rcss::net::TCPSocket
TCPSocket	Net/tcpsocket.hpp	/^        class TCPSocket$/;"	c	namespace:rcss::net
TEAMMATE_10_HEAD	types.h	/^    TEAMMATE_10_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_10_LEFTARM	types.h	/^    TEAMMATE_10_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_10_LEFTFOOT	types.h	/^    TEAMMATE_10_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_10_RIGHTARM	types.h	/^    TEAMMATE_10_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_10_RIGHTFOOT	types.h	/^    TEAMMATE_10_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_11_HEAD	types.h	/^    TEAMMATE_11_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_11_LEFTARM	types.h	/^    TEAMMATE_11_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_11_LEFTFOOT	types.h	/^    TEAMMATE_11_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_11_RIGHTARM	types.h	/^    TEAMMATE_11_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_11_RIGHTFOOT	types.h	/^    TEAMMATE_11_RIGHTFOOT = 63,$/;"	e	enum:VisionObject
TEAMMATE_1_HEAD	types.h	/^    TEAMMATE_1_HEAD	= 9,$/;"	e	enum:VisionObject
TEAMMATE_1_LEFTARM	types.h	/^    TEAMMATE_1_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_1_LEFTFOOT	types.h	/^    TEAMMATE_1_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_1_RIGHTARM	types.h	/^    TEAMMATE_1_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_1_RIGHTFOOT	types.h	/^    TEAMMATE_1_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_2_HEAD	types.h	/^    TEAMMATE_2_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_2_LEFTARM	types.h	/^    TEAMMATE_2_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_2_LEFTFOOT	types.h	/^    TEAMMATE_2_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_2_RIGHTARM	types.h	/^    TEAMMATE_2_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_2_RIGHTFOOT	types.h	/^    TEAMMATE_2_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_3_HEAD	types.h	/^    TEAMMATE_3_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_3_LEFTARM	types.h	/^    TEAMMATE_3_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_3_LEFTFOOT	types.h	/^    TEAMMATE_3_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_3_RIGHTARM	types.h	/^    TEAMMATE_3_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_3_RIGHTFOOT	types.h	/^    TEAMMATE_3_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_4_HEAD	types.h	/^    TEAMMATE_4_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_4_LEFTARM	types.h	/^    TEAMMATE_4_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_4_LEFTFOOT	types.h	/^    TEAMMATE_4_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_4_RIGHTARM	types.h	/^    TEAMMATE_4_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_4_RIGHTFOOT	types.h	/^    TEAMMATE_4_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_5_HEAD	types.h	/^    TEAMMATE_5_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_5_LEFTARM	types.h	/^    TEAMMATE_5_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_5_LEFTFOOT	types.h	/^    TEAMMATE_5_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_5_RIGHTARM	types.h	/^    TEAMMATE_5_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_5_RIGHTFOOT	types.h	/^    TEAMMATE_5_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_6_HEAD	types.h	/^    TEAMMATE_6_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_6_LEFTARM	types.h	/^    TEAMMATE_6_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_6_LEFTFOOT	types.h	/^    TEAMMATE_6_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_6_RIGHTARM	types.h	/^    TEAMMATE_6_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_6_RIGHTFOOT	types.h	/^    TEAMMATE_6_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_7_HEAD	types.h	/^    TEAMMATE_7_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_7_LEFTARM	types.h	/^    TEAMMATE_7_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_7_LEFTFOOT	types.h	/^    TEAMMATE_7_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_7_RIGHTARM	types.h	/^    TEAMMATE_7_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_7_RIGHTFOOT	types.h	/^    TEAMMATE_7_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_8_HEAD	types.h	/^    TEAMMATE_8_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_8_LEFTARM	types.h	/^    TEAMMATE_8_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_8_LEFTFOOT	types.h	/^    TEAMMATE_8_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_8_RIGHTARM	types.h	/^    TEAMMATE_8_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_8_RIGHTFOOT	types.h	/^    TEAMMATE_8_RIGHTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_9_HEAD	types.h	/^    TEAMMATE_9_HEAD,$/;"	e	enum:VisionObject
TEAMMATE_9_LEFTARM	types.h	/^    TEAMMATE_9_LEFTARM,$/;"	e	enum:VisionObject
TEAMMATE_9_LEFTFOOT	types.h	/^    TEAMMATE_9_LEFTFOOT,$/;"	e	enum:VisionObject
TEAMMATE_9_RIGHTARM	types.h	/^    TEAMMATE_9_RIGHTARM,$/;"	e	enum:VisionObject
TEAMMATE_9_RIGHTFOOT	types.h	/^    TEAMMATE_9_RIGHTFOOT,$/;"	e	enum:VisionObject
TGameHalf	soccertypes.h	/^enum TGameHalf$/;"	g
THingeJointSenseMap	types.h	/^typedef std::map<JointID, HingeJointSense> THingeJointSenseMap;$/;"	t
TI_LEFT	soccertypes.h	/^    TI_LEFT = 1,$/;"	e	enum:TTeamIndex
TI_NONE	soccertypes.h	/^    TI_NONE = 0,$/;"	e	enum:TTeamIndex
TI_RIGHT	soccertypes.h	/^    TI_RIGHT = 2$/;"	e	enum:TTeamIndex
TIndex	RobotModel/robot.h	/^    typedef std::vector<int> TIndex;$/;"	t	class:Robot
TJointIDMap	types.h	/^typedef std::map<std::string, JointID> TJointIDMap;$/;"	t
TMC	RobotModel/robot.h	/^	salt::Vector3f TMC;$/;"	m	class:Robot
TMass	RobotModel/robot.h	/^	float TMass;$/;"	m	class:Robot
TPhase	Action/NaoWalkingEngine.h	/^    enum TPhase {$/;"	g	class:NaoWalkingEngine
TPhaseForDivingSave	Action/NaoSpecialAction.h	/^   	enum TPhaseForDivingSave $/;"	g	class:NaoSpecialAction
TPhaseForGetUp	Action/NaoGetUp.h	/^   	enum TPhaseForGetUp $/;"	g	class:NaoGetupEngine
TPhaseForGetUp	Action/Strive3DGetUp.h	/^   	enum TPhaseForGetUp $/;"	g	class:Strive3DGetupEngine
TPhaseForGetUpFromBack	Action/NaoGetUp.h	/^	enum TPhaseForGetUpFromBack $/;"	g	class:NaoGetupEngine
TPhaseForGetUpFromBack	Action/Strive3DGetUp.h	/^	enum TPhaseForGetUpFromBack $/;"	g	class:Strive3DGetupEngine
TPhaseForKcikRight	Action/NaoDynamicKick.h	/^	enum TPhaseForKcikRight $/;"	g	class:NaoDynamicKickEngine
TPhaseForKcikRight	Action/NaoKick.h	/^	enum TPhaseForKcikRight $/;"	g	class:NaoKickEngine
TPhaseForKickLeft	Action/NaoDynamicKick.h	/^   	enum TPhaseForKickLeft $/;"	g	class:NaoDynamicKickEngine
TPhaseForKickLeft	Action/NaoKick.h	/^   	enum TPhaseForKickLeft $/;"	g	class:NaoKickEngine
TPhaseForPass	Action/NaoDynamicKick.h	/^	enum TPhaseForPass$/;"	g	class:NaoDynamicKickEngine
TPhaseForPassQuick	Action/NaoDynamicKick.h	/^	enum TPhaseForPassQuick$/;"	g	class:NaoDynamicKickEngine
TPlayMode	soccertypes.h	/^enum TPlayMode$/;"	g
TPlayModeMap	WorldModel/fieldinfo.h	/^    typedef std::map<std::string, TPlayMode> TPlayModeMap;$/;"	t	class:FieldInfo
TTeamIndex	soccertypes.h	/^enum TTeamIndex$/;"	g
TTime	soccertypes.h	/^typedef float TTime;$/;"	t
TUMBLE	WorldModel/player.h	/^	TUMBLE 		= 3,$/;"	e	enum:PlayerState
TUniversalJointSenseMap	types.h	/^typedef std::map<JointID, UniversalJointSense> TUniversalJointSenseMap;$/;"	t
TVector	salt/tvector.h	/^    TVector() {}$/;"	f	class:salt::TVector
TVector	salt/tvector.h	/^    TVector(const TYPE &v)$/;"	f	class:salt::TVector
TVector	salt/tvector.h	/^class TVector$/;"	c	namespace:salt
TVector2	salt/tvector.h	/^    TVector2() : TVector<DATATYPE, 2, TYPE>() {};$/;"	f	class:salt::TVector2
TVector2	salt/tvector.h	/^    TVector2(DATATYPE x, DATATYPE y) : TVector<DATATYPE, 2, TYPE>()$/;"	f	class:salt::TVector2
TVector2	salt/tvector.h	/^class TVector2 : public TVector<DATATYPE, 2, TYPE>$/;"	c	namespace:salt
TVector3	salt/tvector.h	/^    TVector3() : TVector<DATATYPE, 3, TYPE>() {};$/;"	f	class:salt::TVector3
TVector3	salt/tvector.h	/^    TVector3(const DATATYPE& x, const DATATYPE& y, const DATATYPE& z)$/;"	f	class:salt::TVector3
TVector3	salt/tvector.h	/^class TVector3 : public TVector<DATATYPE, 3, TYPE>$/;"	c	namespace:salt
TVisionObjectMap	WorldModel/worldmodel.h	/^	typedef std::map<std::string, VisionObject> TVisionObjectMap;$/;"	t	class:WorldModel
TVisionSenseMap	WorldModel/worldmodel.h	/^	typedef std::map<VisionObject, VisionSense> TVisionSenseMap;$/;"	t	class:WorldModel
TYPES_H	types.h	19;"	d
T_DEFENSE	AdvancedAgent/AdvancedAgent.h	/^	T_DEFENSE,$/;"	e	enum:Tactics
T_NONE	AdvancedAgent/AdvancedAgent.h	/^	T_NONE$/;"	e	enum:Tactics
T_OFFENSE	AdvancedAgent/AdvancedAgent.h	/^	T_OFFENSE,$/;"	e	enum:Tactics
Tactics	AdvancedAgent/AdvancedAgent.h	/^enum Tactics$/;"	g
Tc	Action/NaoWalkingEngine.h	/^	float Tc;$/;"	m	class:NaoWalkingEngine
Tc	Geometry/trajectory.h	/^    float Tc;$/;"	m	class:Trajectory
Td	Geometry/trajectory.h	/^    float Td;$/;"	m	class:Trajectory
Te	Geometry/trajectory.h	/^    float Te;$/;"	m	class:Trajectory
Test	WorldModel/convexhull.cpp	/^void ConvexHull::Test()$/;"	f	class:ConvexHull
Test	WorldModel/convexhullmanager.cpp	/^void ConvexHullManager::Test()$/;"	f	class:ConvexHullManager
ThighHeight	RobotModel/nao.h	/^    float ThighHeight;$/;"	m	class:Nao
ThighLength	RobotModel/nao.h	/^    float ThighLength;$/;"	m	class:Nao
ThighMass	RobotModel/nao.h	/^    float ThighMass;$/;"	m	class:Nao
ThighRelHip2_X	RobotModel/nao.h	/^    float ThighRelHip2_X;$/;"	m	class:Nao
ThighRelHip2_Y	RobotModel/nao.h	/^    float ThighRelHip2_Y;  \/\/set 0.005 to check the tri-angle algorithm$/;"	m	class:Nao
ThighRelHip2_Z	RobotModel/nao.h	/^    float ThighRelHip2_Z;$/;"	m	class:Nao
ThighWidth	RobotModel/nao.h	/^    float ThighWidth;$/;"	m	class:Nao
Think	BaseAgent.cpp	/^const string& BaseAgent::Think(const string& message)$/;"	f	class:BaseAgent
TimeFunction	Xabsl/XabslTools.h	/^typedef unsigned long (*TimeFunction)();$/;"	t	namespace:xabsl
TimeRef	Xabsl/XabslDecimalExpression.cpp	/^TimeRef::TimeRef(ErrorHandler& errorHandler,$/;"	f	class:xabsl::TimeRef
TimeRef	Xabsl/XabslDecimalExpression.h	/^class TimeRef : public DecimalExpression$/;"	c	namespace:xabsl
Timer	Utilities/Logger.cpp	/^Timer::Timer(): cycle(-1)$/;"	f	class:Timer
Timer	Utilities/Logger.h	/^class Timer$/;"	c
Tm	Geometry/trajectory.h	/^    float Tm;$/;"	m	class:Trajectory
Tmm	BehaviorControl/Strive3DBehaviorControl.h	/^		Tmm = 1,$/;"	e	enum:Strive3DBehaviorControl::BallHolder
Top	salt/rect.h	/^    f_inline int    Top() const                     { return mTop; }$/;"	f	class:salt::Rect
TorsoHeight	RobotModel/nao.h	/^    float TorsoHeight;$/;"	m	class:Nao
TorsoInitX	RobotModel/nao.h	/^    float TorsoInitX;$/;"	m	class:Nao
TorsoInitY	RobotModel/nao.h	/^    float TorsoInitY;$/;"	m	class:Nao
TorsoInitZ	RobotModel/nao.h	/^    float TorsoInitZ;$/;"	m	class:Nao
TorsoLength	RobotModel/nao.h	/^    float TorsoLength;$/;"	m	class:Nao
TorsoMass	RobotModel/nao.h	/^    float TorsoMass;$/;"	m	class:Nao
TorsoRelHip_Z	Geometry/trajectory.h	/^    float TorsoRelHip_Z;$/;"	m	class:Trajectory
TorsoRot_X	Geometry/trajectory.h	/^    float TorsoRot_X;$/;"	m	class:Trajectory
TorsoWidth	RobotModel/nao.h	/^    float TorsoWidth;$/;"	m	class:Nao
TorsoYawAngleByHearing	WorldModel/self.h	/^    float TorsoYawAngleByHearing;\/\/By Qu JunJun 2010.3.23 This YawAngle is calculated according to infomation of hearing$/;"	m	class:Self
TotalMass	RobotModel/robot.cpp	/^float Robot::TotalMass(int j)$/;"	f	class:Robot
Trajectory	Geometry/trajectory.cpp	/^Trajectory::Trajectory()$/;"	f	class:Trajectory
Trajectory	Geometry/trajectory.h	/^class Trajectory $/;"	c
Transform	salt/matrix.h	/^f_inline Vector3f Matrix::Transform(const Vector3f & inVector) const$/;"	f	class:salt::Matrix
TransformBy	salt/bounds.cpp	/^void AABB3::TransformBy(Matrix& matrix)$/;"	f	class:AABB3
TransitionToState	Xabsl/XabslStatement.cpp	/^TransitionToState::TransitionToState(InputSource& input,    $/;"	f	class:xabsl::TransitionToState
TransitionToState	Xabsl/XabslStatement.h	/^class TransitionToState : public Statement$/;"	c	namespace:xabsl
Translate	salt/bounds.h	/^    f_inline void Translate(const Vector2f &v)$/;"	f	class:salt::AABB2
Translate	salt/bounds.h	/^    f_inline void Translate(const Vector3f &v)$/;"	f	class:salt::AABB3
Translate	salt/matrix.h	/^f_inline const Matrix & Matrix::Translate(const Vector3f & inVector)$/;"	f	class:salt::Matrix
Translation	salt/matrix.h	/^f_inline void Matrix::Translation(const Vector3f & inVector)$/;"	f	class:salt::Matrix
Ts	Geometry/trajectory.h	/^    float Ts;$/;"	m	class:Trajectory
TurnTo	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::TurnTo(double angleToDestination)$/;"	f	class:NaoBehaviorControl
TurnTo	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::TurnTo(Vector2f dest, double angle)$/;"	f	class:Strive3DBehaviorControl
UDPSocket	Net/udpsocket.cpp	/^        UDPSocket::UDPSocket( SocketDesc& s )$/;"	f	class:rcss::net::UDPSocket
UDPSocket	Net/udpsocket.cpp	/^        UDPSocket::UDPSocket( const Addr& addr )$/;"	f	class:rcss::net::UDPSocket
UDPSocket	Net/udpsocket.cpp	/^        UDPSocket::UDPSocket( const Addr& addr, const Addr& dest )$/;"	f	class:rcss::net::UDPSocket
UDPSocket	Net/udpsocket.cpp	/^        UDPSocket::UDPSocket()$/;"	f	class:rcss::net::UDPSocket
UDPSocket	Net/udpsocket.hpp	/^        class UDPSocket$/;"	c	namespace:rcss::net
UNKNOWN	WorldModel/ball.h	/^		UNKNOWN 	= 0,$/;"	e	enum:Ball::BallState
UNKNOWN	WorldModel/player.h	/^	UNKNOWN 	= 4,$/;"	e	enum:PlayerState
UniformRNG	salt/random.h	/^    UniformRNG(RealType min = RealType(0), RealType max = RealType(1))$/;"	f	class:salt::UniformRNG
UniformRNG	salt/random.h	/^class UniformRNG : public boost::uniform_real<salt::RandomEngine,RealType>$/;"	c	namespace:salt
UniformRNG	salt/random.h	/^class UniformRNG : public boost::variate_generator<salt::RandomEngine,$/;"	c	namespace:salt
UniversalJointSense	types.h	/^    UniversalJointSense() : angle1(0), angle2(0), rate1(0), rate2(0) {};$/;"	f	struct:UniversalJointSense
UniversalJointSense	types.h	/^struct UniversalJointSense$/;"	s
Up	salt/matrix.h	/^    f_inline Vector3f & Up()                            { return *(Vector3f*)  &El(0, 1); }$/;"	f	class:salt::Matrix
Up	salt/matrix.h	/^    f_inline const Vector3f &   Up() const                      { return *(const Vector3f*) &El(0, 1); }$/;"	f	class:salt::Matrix
Update	Action/NaoActionControl.cpp	/^void NaoActionControl::Update()$/;"	f	class:NaoActionControl
Update	WorldModel/convexhull.cpp	/^void ConvexHull::Update()$/;"	f	class:ConvexHull
Update	WorldModel/worldmodel.cpp	/^void WorldModel::Update(const string& message)$/;"	f	class:WorldModel
UpdateBall	WorldModel/worldmodel.cpp	/^void WorldModel::UpdateBall()$/;"	f	class:WorldModel
UpdateFieldInfo	WorldModel/worldmodel.cpp	/^void WorldModel::UpdateFieldInfo()$/;"	f	class:WorldModel
UpdateLink	RobotModel/robot.cpp	/^void Robot::UpdateLink(const salt::Matrix& mat)$/;"	f	class:Robot
UpdatePlayers	WorldModel/worldmodel.cpp	/^void WorldModel::UpdatePlayers()\/\/Neil 2009.3$/;"	f	class:WorldModel
UpdateRobotCoM	WorldModel/self.cpp	/^void Self::UpdateRobotCoM()$/;"	f	class:Self
UpdateRobotMatrix	WorldModel/self.cpp	/^void Self::UpdateRobotMatrix(const Matrix& mat)$/;"	f	class:Self
UpdateRobotTorsoInfo	WorldModel/self.cpp	/^void Self::UpdateRobotTorsoInfo( const Matrix& mat )$/;"	f	class:Self
UpdateSelf	WorldModel/worldmodel.cpp	/^void WorldModel::UpdateSelf()$/;"	f	class:WorldModel
UpdateWithHearInfomation	WorldModel/worldmodel.cpp	/^bool WorldModel::UpdateWithHearInfomation()$/;"	f	class:WorldModel
UpperarmMass	RobotModel/nao.h	/^	float UpperarmMass;$/;"	m	class:Nao
UpperarmRelShoulder_X	RobotModel/nao.h	/^	float UpperarmRelShoulder_X;$/;"	m	class:Nao
UpperarmRelShoulder_Y	RobotModel/nao.h	/^	float UpperarmRelShoulder_Y;$/;"	m	class:Nao
UpperarmRelShoulder_Z	RobotModel/nao.h	/^	float UpperarmRelShoulder_Z;$/;"	m	class:Nao
Vector2f	salt/vector.h	/^    explicit        Vector2f(const float *f)        : TVector2<float, Vector2f>() { SetData(f);  }$/;"	f	class:salt::Vector2f
Vector2f	salt/vector.h	/^    explicit        Vector2f(float f)                       : TVector2<float, Vector2f>() { Fill(f); }$/;"	f	class:salt::Vector2f
Vector2f	salt/vector.h	/^    f_inline        Vector2f()                                      : TVector2<float, Vector2f>() {$/;"	f	class:salt::Vector2f
Vector2f	salt/vector.h	/^    f_inline        Vector2f(const Vector2f &v)     : TVector2<float, Vector2f>(v) { }$/;"	f	class:salt::Vector2f
Vector2f	salt/vector.h	/^    f_inline        Vector2f(float x, float y)      : TVector2<float, Vector2f>(x, y) { }$/;"	f	class:salt::Vector2f
Vector2f	salt/vector.h	/^class Vector2f : public TVector2<float, Vector2f>$/;"	c	namespace:salt
Vector3f	salt/vector.h	/^    explicit        Vector3f(const float *f)                        : TVector3<float, Vector3f>() { SetData(f);  }$/;"	f	class:salt::Vector3f
Vector3f	salt/vector.h	/^    explicit        Vector3f(float f)                                       : TVector3<float, Vector3f>() { Fill(f); }$/;"	f	class:salt::Vector3f
Vector3f	salt/vector.h	/^    f_inline        Vector3f()                                                      : TVector3<float, Vector3f>() {$/;"	f	class:salt::Vector3f
Vector3f	salt/vector.h	/^    f_inline        Vector3f(const Vector3f &v)                     : TVector3<float, Vector3f>(v) { }$/;"	f	class:salt::Vector3f
Vector3f	salt/vector.h	/^    f_inline        Vector3f(float x, float y, float z)     : TVector3<float, Vector3f>(x, y, z) { }$/;"	f	class:salt::Vector3f
Vector3f	salt/vector.h	/^class Vector3f : public TVector3<float, Vector3f>$/;"	c	namespace:salt
VirtualTimer	Utilities/Logger.cpp	/^VirtualTimer::VirtualTimer()$/;"	f	class:VirtualTimer
VirtualTimer	Utilities/Logger.h	/^class VirtualTimer: public Timer\/\/Not in use now$/;"	c
VisionObject	types.h	/^enum VisionObject$/;"	g
VisionOn	WorldModel/worldmodel.h	/^	void VisionOn() { mVisionOn = true; }$/;"	f	class:WorldModel
VisionSense	types.h	/^    VisionSense() : distance(-1000.0), theta(-1000.0), phi(-1000.0) {};$/;"	f	struct:VisionSense
VisionSense	types.h	/^struct VisionSense$/;"	s
WALKINGENGINESELECTOR_H	Action/WalkingEngineSelector.h	22;"	d
WALKINGENGINE_H	Action/WalkingEngine.h	22;"	d
WALKPATHPLANNINGCONTROL_H	BehaviorControl/WalkPathPlanningControl.h	22;"	d
WALK_H	Action/NaoWalkingEngine.h	19;"	d
WM	WorldModel/worldmodel.h	33;"	d
WORLDMODEL_H	WorldModel/worldmodel.h	19;"	d
WPT_Arc	BehaviorControl/WalkPathPlanningControl.h	/^	WPT_Arc, \/\/go to the next way point using arc$/;"	e	enum:WayPointType
WPT_Dest	BehaviorControl/WalkPathPlanningControl.h	/^	WPT_Dest \/\/destination$/;"	e	enum:WayPointType
WPT_Line	BehaviorControl/WalkPathPlanningControl.h	/^	WPT_Line, \/\/to to the next way point using line$/;"	e	enum:WayPointType
WalkPathPlanningControl	BehaviorControl/WalkPathPlanningControl.cpp	/^WalkPathPlanningControl::WalkPathPlanningControl( ModuleHandler& moduleHandler, const BehaviorControlInterfaces& interfaces):BehaviorControl(interfaces),moduleHandler(moduleHandler)$/;"	f	class:WalkPathPlanningControl
WalkPathPlanningControl	BehaviorControl/WalkPathPlanningControl.h	/^class WalkPathPlanningControl : public BehaviorControl$/;"	c
WalkRequest	Action/ActionRequest.h	/^    WalkRequest():walkType(normal) {}$/;"	f	class:WalkRequest
WalkRequest	Action/ActionRequest.h	/^class WalkRequest$/;"	c
WalkType	Action/ActionRequest.h	/^    enum WalkType$/;"	g	class:WalkRequest
Walking	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::Walking()$/;"	f	class:NaoWalkingEngine
WalkingEngine	Action/WalkingEngine.h	/^  WalkingEngine(const WalkingEngineInterfaces& interfaces) : WalkingEngineInterfaces(interfaces){}$/;"	f	class:WalkingEngine
WalkingEngine	Action/WalkingEngine.h	/^class WalkingEngine : public Module, protected WalkingEngineInterfaces$/;"	c
WalkingEngineInterfaces	Action/WalkingEngine.h	/^  WalkingEngineInterfaces($/;"	f	class:WalkingEngineInterfaces
WalkingEngineInterfaces	Action/WalkingEngine.h	/^class WalkingEngineInterfaces$/;"	c
WalkingEngineSelector	Action/WalkingEngineSelector.h	/^  	WalkingEngineSelector(ModuleHandler &handler,$/;"	f	class:WalkingEngineSelector
WalkingEngineSelector	Action/WalkingEngineSelector.h	/^class WalkingEngineSelector : public ModuleSelector, public WalkingEngine$/;"	c
WayPoint	BehaviorControl/WalkPathPlanningControl.h	/^	WayPoint() :$/;"	f	class:WayPoint
WayPoint	BehaviorControl/WalkPathPlanningControl.h	/^	WayPoint(Vector2f& pos, WayPointType type = WPT_Line) :$/;"	f	class:WayPoint
WayPoint	BehaviorControl/WalkPathPlanningControl.h	/^	WayPoint(const WayPoint& other) :$/;"	f	class:WayPoint
WayPoint	BehaviorControl/WalkPathPlanningControl.h	/^class WayPoint$/;"	c
WayPointType	BehaviorControl/WalkPathPlanningControl.h	/^enum WayPointType$/;"	g
Widen	salt/bounds.h	/^    f_inline void Widen(float delta)$/;"	f	class:salt::AABB2
Widen	salt/bounds.h	/^    f_inline void Widen(float delta)$/;"	f	class:salt::AABB3
Widen	salt/rect.h	/^    f_inline void   Widen(int inDelta)                                                              { mLeft-=inDelta; mTop-=inDelta; mRight+=inDelta; mBottom+=inDelta;     }$/;"	f	class:salt::Rect
Widen	salt/rect.h	/^    f_inline void   Widen(int inDeltaLeft, int inDeltaTop, int inDeltaRight, int inDeltaBottom)     { mLeft-=inDeltaLeft; mTop-=inDeltaTop; mRight+=inDeltaRight; mBottom+=inDeltaBottom;           }$/;"	f	class:salt::Rect
Widen	salt/rect.h	/^    f_inline void   Widen(int inDeltaWidth, int inDeltaHeight)              { mRight+=inDeltaWidth; mBottom+=inDeltaHeight; }$/;"	f	class:salt::Rect
Width	salt/rect.h	/^    f_inline int    Width() const                   { return mRight-mLeft; }$/;"	f	class:salt::Rect
WorldModel	WorldModel/worldmodel.cpp	/^WorldModel::WorldModel() :mHearCycles(0),mSimTime(0.0f),mLastSimTime(0.0f)$/;"	f	class:WorldModel
WorldModel	WorldModel/worldmodel.h	/^class WorldModel$/;"	c
XABSLBEHAVIORCONTROL_H	BehaviorControl/XabslBehaviorControl.h	22;"	d
XABSLENGINEEXECUTOR_H	Xabsl/XabslEngineExecutor.h	22;"	d
XABSL_DEBUG_INIT	Xabsl/XabslTools.h	97;"	d
XABSL_DEBUG_INIT	Xabsl/XabslTools.h	99;"	d
XLength	WorldModel/convexhull.h	/^		inline float XLength() { return mPtrToXMax->x() - mPtrToXMin->x(); }$/;"	f	class:ConvexHull
XMLParser	Utilities/xmlParser.cpp	/^XMLParser::XMLParser()$/;"	f	class:XMLParser
XMLParser	Utilities/xmlParser.h	/^class XMLParser$/;"	c
XMaxPoint	WorldModel/convexhull.h	/^		inline const Vector3f& XMaxPoint() { return *mPtrToXMax; }$/;"	f	class:ConvexHull
XMinPoint	WorldModel/convexhull.h	/^		inline const Vector3f& XMinPoint() { return *mPtrToXMin; }$/;"	f	class:ConvexHull
XabslBehaviorControl	BehaviorControl/XabslBehaviorControl.cpp	/^XabslBehaviorControl::XabslBehaviorControl(const BehaviorControlInterfaces& interfaces,$/;"	f	class:XabslBehaviorControl
XabslBehaviorControl	BehaviorControl/XabslBehaviorControl.h	/^class XabslBehaviorControl : public BehaviorControl, public XabslEngineExecutor$/;"	c
XabslBehaviorControlAgentInterface	BehaviorControl/XabslBehaviorControl.cpp	/^XabslBehaviorControlAgentInterface::XabslBehaviorControlAgentInterface$/;"	f	class:XabslBehaviorControlAgentInterface
XabslBehaviorControlAgentInterface	BehaviorControl/XabslBehaviorControl.h	/^class XabslBehaviorControlAgentInterface : public BehaviorControl, public NamedItem$/;"	c
XabslEngineExecutor	Xabsl/XabslEngineExecutor.cpp	/^XabslEngineExecutor::XabslEngineExecutor (SolutionRequest::xabslEngineID id,$/;"	f	class:XabslEngineExecutor
XabslEngineExecutor	Xabsl/XabslEngineExecutor.h	/^class XabslEngineExecutor $/;"	c
Xed	Geometry/trajectory.h	/^    float Xed;$/;"	m	class:Trajectory
Xsd	Geometry/trajectory.h	/^    float Xsd;$/;"	m	class:Trajectory
YLength	WorldModel/convexhull.h	/^		inline float YLength() { return mPtrToYMax->y() - mPtrToYMin->y(); }$/;"	f	class:ConvexHull
YMaxPoint	WorldModel/convexhull.h	/^		inline const Vector3f& YMaxPoint() { return *mPtrToYMax; }$/;"	f	class:ConvexHull
YMinPoint	WorldModel/convexhull.h	/^		inline const Vector3f& YMinPoint() { return *mPtrToYMin; }$/;"	f	class:ConvexHull
Zero	salt/tvector.h	/^f_inline TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::Zero()$/;"	f	class:salt::TVector
_COMMON_H	Trainer_Client/common.h	2;"	d
_CONTROL_H	Trainer_Client/control.h	2;"	d
_GEOMETRY_H	Geometry/geometry.h	19;"	d
_MALLOC_UTIL_H_	Parser/malloc_util.h	12;"	d
_MODULEHANDLER_H	Module/ModuleHandler.h	24;"	d
_MODULESELECTOR_H	Module/ModuleSelector.h	22;"	d
_MODULE_H	Module/Module.h	22;"	d
_PARSER_H	Parser/Parser.h	22;"	d
_SOLUTIONREQUEST_H	Module/SolutionRequest.h	22;"	d
_SPLINE_H	Geometry/spline.h	19;"	d
_TRAINER_CLIENT_H	Trainer_Client/trainer_client.h	2;"	d
_TRAJECTORY_H	Geometry/trajectory.h	19;"	d
__ADVANCEDAGENT_H	AdvancedAgent/AdvancedAgent.h	2;"	d
__CSTRING_H__	Parser/cstring.h	35;"	d
__DECISIONMANAGER_H	AdvancedAgent/PlanManager.h	2;"	d
__DECISION_H	AdvancedAgent/Plan.h	2;"	d
__DRIBBLEPLAN_H	AdvancedAgent/DribblePlan.h	2;"	d
__FASTSTACK_H__	Parser/faststack.h	37;"	d
__GOALIEPLAN_H	AdvancedAgent/GoaliePlan.h	2;"	d
__GOALPLAN_H	AdvancedAgent/GoalPlan.h	2;"	d
__LOGGER_H	Utilities/Logger.h	21;"	d
__MESSAGESTORAGE_H	Utilities/MessageStorage.h	2;"	d
__PATH_PLANNING_H	AdvancedAgent/PathPlanning.h	2;"	d
__POSITIONINGPLAN_H	AdvancedAgent/PositioningPlan.h	2;"	d
__SELF_H	WorldModel/self.h	19;"	d
__SEXP_H__	Parser/sexp.h	28;"	d
__SEXP_OPS_H__	Parser/sexp_ops.h	28;"	d
__STATICMODULE_H	Utilities/StaticModule.h	2;"	d
__UTILITIES_H	Utilities/Utilities.h	23;"	d
__XMLPARSER_H	Utilities/xmlParser.h	17;"	d
__XabslAction_h_	Xabsl/XabslAction.h	10;"	d
__XabslAgent_h_	Xabsl/XabslAgent.h	10;"	d
__XabslArray_h_	Xabsl/XabslArray.h	13;"	d
__XabslBasicBehavior_h_	Xabsl/XabslBasicBehavior.h	12;"	d
__XabslBehavior_h_	Xabsl/XabslBehavior.h	10;"	d
__XabslBooleanExpression_h_	Xabsl/XabslBooleanExpression.h	11;"	d
__XabslDecimalExpression_h_	Xabsl/XabslDecimalExpression.h	12;"	d
__XabslEngine_h_	Xabsl/XabslEngine.h	12;"	d
__XabslEnumeratedExpression_h_	Xabsl/XabslEnumeratedExpression.h	10;"	d
__XabslOption_h_	Xabsl/XabslOption.h	11;"	d
__XabslParameters_h_	Xabsl/XabslParameters.h	10;"	d
__XabslState_h_	Xabsl/XabslState.h	10;"	d
__XabslStatement_h_	Xabsl/XabslStatement.h	10;"	d
__XabslSymbols_h_	Xabsl/XabslSymbols.h	11;"	d
__XabslTools_h_	Xabsl/XabslTools.h	12;"	d
__attribute__	salt/defines.h	49;"	d
__cstring	Parser/cstring.h	/^typedef struct __cstring {$/;"	s
_pcont	BehaviorControl/WalkPathPlanningControl.h	/^	pcont_t* _pcont;$/;"	m	class:DebugMsgParser
_pcont	Parser/Parser.h	/^	pcont_t*	_pcont;$/;"	m	class:Parser
_sexp	BehaviorControl/WalkPathPlanningControl.h	/^	sexp_t* _sexp;$/;"	m	class:DebugMsgParser
_sexp	Parser/Parser.h	/^	sexp_t*		_sexp;$/;"	m	class:Parser
a	RobotModel/robot.h	/^        salt::Vector3f a;     \/\/ axis$/;"	m	struct:Robot::Link
aLOG	Utilities/Logger.h	46;"	d
above	Parser/faststack.h	/^  struct stack_level *above;$/;"	m	struct:stack_level	typeref:struct:stack_level::stack_level
accept	Net/socket.cpp	/^        Socket* Socket::accept(Addr& addr)$/;"	f	class:rcss::net::Socket
accept	Net/socket.cpp	/^        Socket::accept( Socket& sock )$/;"	f	class:rcss::net::Socket
act	BaseAgent.h	/^ 	action *act;$/;"	m	class:BaseAgent
action	Trainer_Client/common.cpp	/^action::action()$/;"	f	class:action
action	Trainer_Client/common.h	/^struct action$/;"	s
actionControl	Module/SolutionRequest.h	/^        actionControl, \/*!< See class ActionControlSelector *\/$/;"	e	enum:SolutionRequest::ModuleID
actionControlState	Action/NaoActionControl.h	/^    } actionControlState;$/;"	m	class:NaoActionControl	typeref:enum:NaoActionControl::__anon3
actionInfo	Action/ActionControl.h	/^  ActionInfo& actionInfo;$/;"	m	class:ActionControlInterfaces
actionInfo	Action/GetUpEngine.h	/^  ActionInfo& actionInfo;$/;"	m	class:GetupEngineInterfaces
actionInfo	Action/KickEngine.h	/^  ActionInfo& actionInfo;$/;"	m	class:KickEngineInterfaces
actionInfo	Action/SpecialAction.h	/^  ActionInfo& actionInfo;$/;"	m	class:SpecialActionInterfaces
actionInfo	Action/WalkingEngine.h	/^  ActionInfo& actionInfo;$/;"	m	class:WalkingEngineInterfaces
actionInfo	BaseAgent.h	/^	ActionInfo actionInfo;$/;"	m	class:BaseAgent
actionInfo	BehaviorControl/BehaviorControl.h	/^  	const ActionInfo& actionInfo;$/;"	m	class:BehaviorControlInterfaces
actionInfo	HeadControl/HeadControl.h	/^  const ActionInfo& actionInfo;$/;"	m	class:HeadControlInterfaces
actionIsStable	Action/ActionInfo.h	/^  bool actionIsStable;$/;"	m	class:ActionInfo
actionRequest	Action/ActionControl.h	/^  const ActionRequest& actionRequest;$/;"	m	class:ActionControlInterfaces
actionRequest	Action/GetUpEngine.h	/^  const ActionRequest& actionRequest;$/;"	m	class:GetupEngineInterfaces
actionRequest	Action/KickEngine.h	/^  const ActionRequest& actionRequest;$/;"	m	class:KickEngineInterfaces
actionRequest	Action/SpecialAction.h	/^  const ActionRequest& actionRequest;$/;"	m	class:SpecialActionInterfaces
actionRequest	BaseAgent.h	/^	ActionRequest actionRequest;$/;"	m	class:BaseAgent
actionRequest	BehaviorControl/BehaviorControl.h	/^  	ActionRequest& actionRequest;$/;"	m	class:BehaviorControlInterfaces
actionRequest	HeadControl/HeadControl.h	/^  const ActionRequest& actionRequest;$/;"	m	class:HeadControlInterfaces
actionType	Action/ActionRequest.h	/^    ActionID actionType;$/;"	m	class:ActionRequest
actions	Xabsl/XabslBooleanExpression.h	/^  Array<Action*>& actions;$/;"	m	class:xabsl::SubsequentOptionReachedTargetStateCondition
actions	Xabsl/XabslState.h	/^  Array<Action*> actions;$/;"	m	class:xabsl::State
activeState	Xabsl/XabslOption.h	/^  State* activeState;$/;"	m	class:xabsl::Option
activeValueWasSet	Xabsl/XabslSymbols.h	/^  bool activeValueWasSet;$/;"	m	class:xabsl::OutputSymbol
add	Utilities/Logger.cpp	/^void Logger::LogStreams::add(const string &name, LogStream *stream)$/;"	f	class:Logger::LogStreams
add	Utilities/Logger.cpp	/^void Logger::add(const string &name, LogStream *stream)$/;"	f	class:Logger
add	Utilities/Range.h	/^    Range<T>& add(T t)$/;"	f	class:Range
add	Utilities/Range.h	/^    Range<T>& add(const Range<T>& r)$/;"	f	class:Range
addChild	BehaviorControl/WalkPathPlanningControl.h	/^	void addChild(WayPoint* child)$/;"	f	class:WayPoint
addNetwork	Net/Net.cpp	/^void NetManager::addNetwork(string name)$/;"	f	class:NetManager
addOperand	Xabsl/XabslBooleanExpression.cpp	/^void AndOperator::addOperand(BooleanExpression* operand)$/;"	f	class:xabsl::AndOperator
addOperand	Xabsl/XabslBooleanExpression.cpp	/^void OrOperator::addOperand(BooleanExpression* operand)$/;"	f	class:xabsl::OrOperator
add_alloc	Parser/malloc_util.c	/^add_alloc(void *addr, size_t bytes, char *file, int lineno) {$/;"	f	file:
addr	Parser/malloc_util.c	/^    void *addr;$/;"	m	struct:__anon7	file:
adjustX	BehaviorControl/NaoBehaviorControl.h	/^		adjustX,$/;"	e	enum:NaoBehaviorControl::Adjustment
adjustY	BehaviorControl/NaoBehaviorControl.h	/^		adjustY$/;"	e	enum:NaoBehaviorControl::Adjustment
adjustment	Action/NaoGetUp.cpp	/^void NaoGetupEngine::adjustment()$/;"	f	class:NaoGetupEngine
adjustment	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::adjustment()$/;"	f	class:Strive3DGetupEngine
adjustment	BehaviorControl/NaoBehaviorControl.h	/^	}adjustment;$/;"	m	class:NaoBehaviorControl	typeref:enum:NaoBehaviorControl::Adjustment
agents	Xabsl/XabslEngine.h	/^  Array<Agent*> agents;$/;"	m	class:xabsl::Engine
alloc_list	Parser/malloc_util.c	/^static alloc_t alloc_list[NALLOC];$/;"	v	file:
alloc_t	Parser/malloc_util.c	/^} alloc_t;$/;"	t	typeref:struct:__anon7	file:
allocatedSize	Xabsl/XabslArray.h	/^    int usedSize, allocatedSize;$/;"	m	class:xabsl::Array
angle	Trainer_Client/common.h	/^	float angle[20];$/;"	m	struct:state
angle	types.h	/^    float angle;$/;"	m	struct:HingeJointSense
angle1	types.h	/^    float angle1;$/;"	m	struct:UniversalJointSense
angle2	types.h	/^    float angle2;$/;"	m	struct:UniversalJointSense
append	Xabsl/XabslArray.h	/^    void append(const char* name, T element)$/;"	f	class:xabsl::Array
appendGuiDebuggerMsg	Utilities/MessageStorage.h	/^	void appendGuiDebuggerMsg(string msg){guiDebuggerMsg.append(msg);}$/;"	f	class:MessageStorage
area	WorldModel/dynamicobject.h	/^	vector<Vector3f> area;			\/\/By Qu Junjun 2009.10.4		The Posible Moving Area Of The Player$/;"	m	class:DynamicObject
arr	Trainer_Client/common.h	/^	std::vector<state> arr;$/;"	m	struct:action
asBool	Utilities/xmlParser.cpp	/^bool Str::asBool()$/;"	f	class:Str
asFloat	Utilities/xmlParser.cpp	/^float Str::asFloat()$/;"	f	class:Str
asInt	Utilities/xmlParser.cpp	/^int Str::asInt()$/;"	f	class:Str
asString	Utilities/xmlParser.cpp	/^std::string Str::asString()$/;"	f	class:Str
assert	Parser/sexp.h	43;"	d
assert	Parser/sexp.h	44;"	d
atom_t	Parser/sexp.h	/^} atom_t;$/;"	t	typeref:enum:__anon5
aty	Parser/sexp.h	/^  atom_t aty;$/;"	m	struct:elt
autoSendMsg	AdvancedAgent/AdvancedAgent.h	/^	bool autoSendMsg;$/;"	m	class:AdvancedAgent
automode	HeadControl/HeadMotionRequest.h	/^		automode,$/;"	e	enum:HeadMotionRequest::HeadMotionID
averageRunTime	Module/ModuleSelector.h	/^  double averageRunTime;$/;"	m	class:ModuleSelector
axisX	WorldModel/self.h	/^    Vector3f              axisX;$/;"	m	class:Self
b	RobotModel/robot.h	/^        salt::Vector3f b;     \/\/ relative position to mother's anchor$/;"	m	struct:Robot::Link
bLOG	Utilities/Logger.h	48;"	d
ballDistance	WorldModel/ball.h	/^	double ballDistance;$/;"	m	class:Ball
ballHolder	BehaviorControl/Strive3DBehaviorControl.h	/^	BallHolder ballHolder;$/;"	m	class:Strive3DBehaviorControl
ballLocalPos	WorldModel/ball.h	/^	Vector3f ballLocalPos;$/;"	m	class:Ball
ballPhi	WorldModel/ball.h	/^	double ballPhi;$/;"	m	class:Ball
ballPos2	AdvancedAgent/GoaliePlan.h	/^		Vector2f ballPos2;$/;"	m	class:GoaliePlan
ballPosByCommunication	WorldModel/ball.h	/^	Vector3f ballPosByCommunication;$/;"	m	class:Ball
ballState	BehaviorControl/Strive3DBehaviorControl.h	/^  	BallState ballState;$/;"	m	class:Strive3DBehaviorControl
ballTheta	WorldModel/ball.h	/^	double ballTheta;$/;"	m	class:Ball
ball_found_again	HeadControl/NaoHeadControl.h	/^        ball_found_again,$/;"	e	enum:NaoHeadControl::HeadControlState
ball_lost	HeadControl/NaoHeadControl.h	/^        ball_lost,$/;"	e	enum:NaoHeadControl::HeadControlState
ball_see	HeadControl/NaoHeadControl.h	/^        ball_see,$/;"	e	enum:NaoHeadControl::HeadControlState
base	Parser/cstring.h	/^  char *base; $/;"	m	struct:__cstring
basicBehavior	Xabsl/XabslAction.h	/^  BasicBehavior* basicBehavior;$/;"	m	class:xabsl::ActionBasicBehavior
basicBehaviorDoNothing	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorDoNothing  basicBehaviorDoNothing;$/;"	m	class:CommonBasicBehaviors
basicBehaviorSpecialAction	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorSpecialAction  basicBehaviorSpecialAction;$/;"	m	class:CommonBasicBehaviors
basicBehaviorStand	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorStand  basicBehaviorStand;$/;"	m	class:CommonBasicBehaviors
basicBehaviorStop	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorStop  basicBehaviorStop;$/;"	m	class:CommonBasicBehaviors
basicBehaviorWalk	BehaviorControl/CommonBasicBehaviors.h	/^    BasicBehaviorWalk  basicBehaviorWalk;$/;"	m	class:CommonBasicBehaviors
basicBehaviors	Xabsl/XabslEngine.h	/^  Array<BasicBehavior*> basicBehaviors;$/;"	m	class:xabsl::Engine
beam	BaseAgent.cpp	/^string BaseAgent::beam() const$/;"	f	class:BaseAgent
beamAndInit	BaseAgent.cpp	/^void BaseAgent::beamAndInit()$/;"	f	class:BaseAgent
beginning	Utilities/Logger.h	/^		timeval beginning;$/;"	m	class:OnlineTimer
behaviorControl	BehaviorControl/XabslBehaviorControl.h	/^  XabslBehaviorControl* behaviorControl;$/;"	m	class:XabslBehaviorControlAgentInterface
behaviorControl	Module/SolutionRequest.h	/^        behaviorControl, \/*!< See class BehaviorControlSelector *\/$/;"	e	enum:SolutionRequest::ModuleID
behaviorControlState	BehaviorControl/NaoBehaviorControl.h	/^    } behaviorControlState;$/;"	m	class:NaoBehaviorControl	typeref:enum:NaoBehaviorControl::BehaviorControlState
below	Parser/faststack.h	/^  struct stack_level *below;$/;"	m	struct:stack_level	typeref:struct:stack_level::stack_level
bfs_find_sexp	Parser/sexp_ops.c	/^sexp_t *bfs_find_sexp(char *str, sexp_t *sx) {$/;"	f
bind	Net/socket.cpp	/^        Socket::bind( const Addr& addr )$/;"	f	class:rcss::net::Socket
bindata	Parser/sexp.h	/^  char *bindata;$/;"	m	struct:elt
bindata	Parser/sexp.h	/^  char *bindata;$/;"	m	struct:pcont
binexpected	Parser/sexp.h	/^  unsigned int binexpected;$/;"	m	struct:pcont
binlength	Parser/sexp.h	/^  unsigned int binlength;$/;"	m	struct:elt
binread	Parser/sexp.h	/^  unsigned int binread;$/;"	m	struct:pcont
blockPoint	AdvancedAgent/GoaliePlan.h	/^		Vector2f blockPoint;$/;"	m	class:GoaliePlan
bodyTilt	Action/ActionInfo.h	/^  double bodyTilt;$/;"	m	class:ActionInfo
boolean	Xabsl/XabslParameters.h	/^  Array<bool*> boolean;$/;"	m	class:xabsl::Parameters
booleanExpressions	Xabsl/XabslParameters.h	/^  Array<const BooleanExpression*> booleanExpressions;$/;"	m	class:xabsl::ParameterAssignment
booleanInputSymbols	Xabsl/XabslSymbols.h	/^  Array<BooleanInputSymbol*> booleanInputSymbols;$/;"	m	class:xabsl::Symbols
booleanOutputSymbol	Xabsl/XabslAction.h	/^  BooleanOutputSymbol* booleanOutputSymbol;$/;"	m	class:xabsl::ActionBooleanOutputSymbol
booleanOutputSymbolExpression	Xabsl/XabslAction.h	/^  const BooleanExpression* booleanOutputSymbolExpression;$/;"	m	class:xabsl::ActionBooleanOutputSymbol
booleanOutputSymbolValue	Xabsl/XabslAction.h	/^  bool booleanOutputSymbolValue;$/;"	m	class:xabsl::ActionBooleanOutputSymbol
booleanOutputSymbols	Xabsl/XabslSymbols.h	/^  Array<BooleanOutputSymbol*> booleanOutputSymbols;$/;"	m	class:xabsl::Symbols
booleanValues	Xabsl/XabslParameters.h	/^  Array<bool> booleanValues;$/;"	m	class:xabsl::ParameterAssignment
bottom	Parser/faststack.h	/^  stack_lvl_t *bottom;$/;"	m	struct:stack_wrapper
buf	Parser/sexp.h	/^  char buf[BUFSIZ];$/;"	m	struct:sexp_iowrap
buffer	Trainer_Client/trainer_client.h	/^	char buffer[10000];$/;"	m	class:trainer_client
c	RobotModel/robot.h	/^        salt::Vector3f c;     \/\/ geometry center in local coordinate system$/;"	m	struct:Robot::Link
calculateDurationsSum	HeadControl/HeadPathPlanner.cpp	/^long HeadPathPlanner::calculateDurationsSum(long* duration, int durations)$/;"	f	class:HeadPathPlanner
calculateForce	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::calculateForce()$/;"	f	class:PathPlanning
calculateHeadTiming	HeadControl/HeadPathPlanner.cpp	/^long HeadPathPlanner::calculateHeadTiming(Vector3f &pos1,Vector3f &pos2)$/;"	f	class:HeadPathPlanner
canseeoppleftgoal	WorldModel/fieldinfo.h	/^    bool canseeoppleftgoal;$/;"	m	class:FieldInfo
canseeopprightgoal	WorldModel/fieldinfo.h	/^    bool canseeopprightgoal;$/;"	m	class:FieldInfo
car_sexp	Parser/sexp_ops.c	/^sexp_t *car_sexp(sexp_t *s) {$/;"	f
cc	Parser/sexp.h	/^  pcont_t *cc;$/;"	m	struct:sexp_iowrap
cdr_sexp	Parser/sexp_ops.c	/^sexp_t *cdr_sexp(sexp_t *s) {$/;"	f
center	WorldModel/self.h	/^		center = 3,$/;"	e	enum:Self::RoleInTeam
center	salt/bounds.h	/^    Vector3f        center;$/;"	m	class:salt::BoundingSphere
changeOfActionControlStatePossible	Action/NaoActionControl.h	/^    bool changeOfActionControlStatePossible;$/;"	m	class:NaoActionControl
char_type	Net/socketstreambuf.hpp	/^            typedef char char_type;$/;"	t	class:rcss::net::SocketStreamBuf
checkForLoops	Xabsl/XabslEngine.cpp	/^bool Engine::checkForLoops(Option* currentOptionPath[],int currentDepth)$/;"	f	class:xabsl::Engine
checkJointIDMap	RobotModel/robot.cpp	/^JointID Robot::checkJointIDMap( std::string name )$/;"	f	class:Robot
checkMsg	AdvancedAgent/PathPlanning.cpp	/^bool PathPlanning::checkMsg()$/;"	f	class:PathPlanning
check_dealloc	Parser/malloc_util.c	/^check_dealloc(void *addr, char *file, int lineno) {$/;"	f	file:
checkpt	Parser/malloc_util.c	/^    int   checkpt;      \/* value of last_check when created *\/$/;"	m	struct:__anon7	file:
child	RobotModel/robot.h	/^        int child;$/;"	m	struct:Robot::Link
children	BehaviorControl/WalkPathPlanningControl.h	/^	vector<WayPoint*> children() const {return mChildren;}$/;"	f	class:WayPoint
chooseBestPath	BehaviorControl/WalkPathPlanningControl.cpp	/^WayPoint* PathPlanningTest::chooseBestPath()$/;"	f	class:PathPlanningTest
clear	Xabsl/XabslArray.h	/^    void clear()$/;"	f	class:xabsl::Array
clearGuiDebuggerMsg	Utilities/MessageStorage.h	/^	void clearGuiDebuggerMsg(){guiDebuggerMsg.clear();}$/;"	f	class:MessageStorage
clearWayPoints	BehaviorControl/WalkPathPlanningControl.cpp	/^void PathPlanningTest::clearWayPoints()$/;"	f	class:PathPlanningTest
close	Net/socket.cpp	/^        Socket::close()$/;"	f	class:rcss::net::Socket
close	Xabsl/XabslEngineExecutor.cpp	/^void MyXabslFileInputSource::close()$/;"	f	class:MyXabslFileInputSource
closeFD	Net/socket.cpp	/^        Socket::closeFD( SocketDesc* s )$/;"	f	class:rcss::net::Socket
cmd	Trainer_Client/control.h	/^	command cmd;$/;"	m	class:control
cmdType	BehaviorControl/WalkPathPlanningControl.h	/^	CmdType cmdType() const {return mCmdType;}$/;"	f	class:DebugMsgParser
cnt	Parser/sexp.h	/^  int cnt;$/;"	m	struct:sexp_iowrap
command	Module/ModuleSelector.h	/^	std::string command;\/\/by Neil,just test.$/;"	m	class:ModuleSelector
command	Trainer_Client/common.cpp	/^command::command()$/;"	f	class:command
command	Trainer_Client/common.h	/^struct command$/;"	s
comparedbetweenBallandOpp	WorldModel/worldmodel.h	/^	queue<double> comparedbetweenBallandOpp;$/;"	m	class:WorldModel
condition	Xabsl/XabslDecimalExpression.h	/^  BooleanExpression* condition;$/;"	m	class:xabsl::ConditionalDecimalExpression
condition	Xabsl/XabslEnumeratedExpression.h	/^  const BooleanExpression* condition;$/;"	m	class:xabsl::ConditionalEnumeratedExpression
connect	Net/socket.cpp	/^        Socket::connect( const Addr& addr )$/;"	f	class:rcss::net::Socket
cons_sexp	Parser/sexp_ops.c	/^sexp_t *cons_sexp(sexp_t *r, sexp_t *l) {$/;"	f
contains	Utilities/Range.h	/^    bool contains(const Range<T>& r) const {return min < r.min && max > r.max;}$/;"	f	class:Range
content	Utilities/xmlParser.h	/^	xmlNodePtr content;$/;"	m	class:XMLParser
context	Utilities/xmlParser.h	/^	xmlXPathContextPtr context;$/;"	m	class:XMLParser
control	Trainer_Client/control.cpp	/^control::control()$/;"	f	class:control
control	Trainer_Client/control.h	/^class control$/;"	c
conv	Trainer_Client/common.cpp	/^int conv[]={2,0,3,1,5,4,7,6,9,8,13,11,12,10,15,14,18,16,19,17,20,21};$/;"	v
convertCharToXmlChar	Utilities/xmlParser.h	/^	const xmlChar* convertCharToXmlChar(const char* path)$/;"	f	class:XMLParser
copy_sexp	Parser/sexp_ops.c	/^sexp_t *copy_sexp(sexp_t *s) {$/;"	f
cornerKick	BaseAgent.cpp	/^void BaseAgent::cornerKick()$/;"	f	class:BaseAgent
cout	Action/ActionRequest.h	/^    int cout;$/;"	m	class:KickRequest
cparse_sexp	Parser/parser.c	/^cparse_sexp (char *str, int len, pcont_t *lc)$/;"	f
create	Xabsl/XabslAction.cpp	/^Action* Action::create($/;"	f	class:xabsl::Action
create	Xabsl/XabslBooleanExpression.cpp	/^BooleanExpression* BooleanExpression::create(InputSource& input, $/;"	f	class:xabsl::BooleanExpression
create	Xabsl/XabslBooleanExpression.cpp	/^void RelationalAndEqualityOperator::create(DecimalExpression* operand1,$/;"	f	class:xabsl::RelationalAndEqualityOperator
create	Xabsl/XabslDecimalExpression.cpp	/^DecimalExpression* DecimalExpression::create(InputSource& input, $/;"	f	class:xabsl::DecimalExpression
create	Xabsl/XabslDecimalExpression.cpp	/^void ArithmeticOperator::create(DecimalExpression* operand1, DecimalExpression* operand2)$/;"	f	class:xabsl::ArithmeticOperator
create	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedExpression* EnumeratedExpression::create(const Enumeration* enumeration,$/;"	f	class:xabsl::EnumeratedExpression
create	Xabsl/XabslOption.cpp	/^void Option::create(InputSource& input,   $/;"	f	class:xabsl::Option
create	Xabsl/XabslParameters.cpp	/^void ParameterAssignment::create($/;"	f	class:xabsl::ParameterAssignment
create	Xabsl/XabslState.cpp	/^void State::create(InputSource& input,$/;"	f	class:xabsl::State
createOperand	Xabsl/XabslBooleanExpression.cpp	/^bool BooleanExpression::createOperand(BooleanExpression*& operand,$/;"	f	class:xabsl::BooleanExpression
createOperand	Xabsl/XabslDecimalExpression.cpp	/^bool DecimalExpression::createOperand(DecimalExpression*& operand,$/;"	f	class:xabsl::DecimalExpression
createOperand	Xabsl/XabslEnumeratedExpression.cpp	/^bool EnumeratedExpression::createOperand(const EnumeratedExpression*& operand,$/;"	f	class:xabsl::EnumeratedExpression
createOptionGraph	Xabsl/XabslEngine.cpp	/^void Engine::createOptionGraph(InputSource& input)$/;"	f	class:xabsl::Engine
createSolution	Action/ActionSelector.h	/^  virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:ActionControlSelector
createSolution	Action/GetUpEngineSelector.h	/^  virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:GetupEngineSelector
createSolution	Action/KickEngineSelector.h	/^  virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:KickEngineSelector
createSolution	Action/SpecialActionSelector.h	/^  virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:SpecialActionSelector
createSolution	Action/WalkingEngineSelector.h	/^  	virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:WalkingEngineSelector
createSolution	BehaviorControl/BehaviorControlSelector.h	/^  virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:BehaviorControlSelector
createSolution	HeadControl/HeadControlSelector.h	/^  	virtual Module* createSolution(SolutionRequest::ModuleSolutionID id)$/;"	f	class:HeadControlSelector
createStatement	Xabsl/XabslStatement.cpp	/^Statement* Statement::createStatement(InputSource& input,    $/;"	f	class:xabsl::Statement
cstring_growsize	Parser/cstring.c	/^static size_t cstring_growsize = 8192;$/;"	v	file:
curCycle	AdvancedAgent/PathPlanning.h	/^	int curCycle;$/;"	m	class:PathPlanning
curMS	Utilities/Logger.h	/^		long curMS;$/;"	m	class:VirtualTimer
curNode	Utilities/xmlParser.h	/^	xmlNodePtr curNode;$/;"	m	class:XMLParser
curlen	Parser/cstring.h	/^  size_t curlen; $/;"	m	struct:__cstring
currentFrame	HeadControl/HeadPathPlanner.h	/^    long currentFrame;$/;"	m	class:HeadPathPlanner
currentPoint	HeadControl/HeadPathPlanner.h	/^    long currentPoint;$/;"	m	class:HeadPathPlanner
currentRequest	Action/NaoWalkingEngine.h	/^	WalkRequest currentRequest;$/;"	m	class:NaoWalkingEngine
cycle	Utilities/Logger.h	/^		long cycle;$/;"	m	class:Timer
cycleInterval	Utilities/Logger.cpp	/^std::string OnlineTimer::cycleInterval()$/;"	f	class:OnlineTimer
d	salt/plane.h	/^    float               d;$/;"	m	class:salt::Plane
da	BaseAgent.h	/^	control *da;$/;"	m	class:BaseAgent
dash	Action/ActionRequest.h	/^        dash,$/;"	e	enum:WalkRequest::WalkType
data	Parser/faststack.h	/^  void *data;$/;"	m	struct:stack_level
data	Xabsl/XabslArray.h	/^    ArrayElement<T>** data;$/;"	m	class:xabsl::Array
ddq	RobotModel/robot.h	/^        float ddq;$/;"	m	struct:Robot::Link
debarrass	BehaviorControl/Strive3DBehaviorControl.h	/^		debarrass = 3,$/;"	e	enum:Strive3DBehaviorControl::GolieState
debug	Action/ActionRequest.h	/^        debug,$/;"	e	enum:WalkRequest::WalkType
debugActionControl	Module/SolutionRequest.h	/^        debugActionControl,$/;"	e	enum:SolutionRequest::ModuleSolutionID
debugMode	strive3d.cpp	/^static bool debugMode = false;$/;"	v	file:
debug_msg	AdvancedAgent/AdvancedAgent.h	/^	string debug_msg;$/;"	m	class:AdvancedAgent
debug_msg	BaseAgent.h	/^	string debug_msg;$/;"	m	class:BaseAgent
debug_msg	BehaviorControl/BehaviorControl.h	/^	string debug_msg;$/;"	m	class:BehaviorControlInterfaces
decimal	Xabsl/XabslParameters.h	/^  Array<double*> decimal;$/;"	m	class:xabsl::Parameters
decimalExpressions	Xabsl/XabslParameters.h	/^  Array<const DecimalExpression*> decimalExpressions;$/;"	m	class:xabsl::ParameterAssignment
decimalInputSymbols	Xabsl/XabslSymbols.h	/^  Array<DecimalInputSymbol*> decimalInputSymbols;$/;"	m	class:xabsl::Symbols
decimalOutputSymbol	Xabsl/XabslAction.h	/^  DecimalOutputSymbol* decimalOutputSymbol;$/;"	m	class:xabsl::ActionDecimalOutputSymbol
decimalOutputSymbolExpression	Xabsl/XabslAction.h	/^  const DecimalExpression* decimalOutputSymbolExpression;$/;"	m	class:xabsl::ActionDecimalOutputSymbol
decimalOutputSymbolValue	Xabsl/XabslAction.h	/^  double decimalOutputSymbolValue;$/;"	m	class:xabsl::ActionDecimalOutputSymbol
decimalOutputSymbols	Xabsl/XabslSymbols.h	/^  Array<DecimalOutputSymbol*> decimalOutputSymbols;$/;"	m	class:xabsl::Symbols
decimalValues	Xabsl/XabslParameters.h	/^  Array<double> decimalValues;$/;"	m	class:xabsl::ParameterAssignment
decisionTree	Xabsl/XabslState.h	/^  Statement* decisionTree;$/;"	m	class:xabsl::State
defencestate	BehaviorControl/Strive3DBehaviorControl.h	/^	DefenceState defencestate;$/;"	m	class:Strive3DBehaviorControl
defencestatejudge	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl:: defencestatejudge()$/;"	f	class:Strive3DBehaviorControl
depth	Parser/sexp.h	/^  unsigned int depth;$/;"	m	struct:pcont
destDistThreshold	AdvancedAgent/PathPlanning.h	/^	float destDistThreshold;$/;"	m	class:PathPlanning
destForce	AdvancedAgent/PathPlanning.h	/^	float destForce;$/;"	m	class:PathPlanning
destination	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f destination() const {return mDestination;}$/;"	f	class:DebugMsgParser
destroy_continuation	Parser/parser.c	/^destroy_continuation (pcont_t * pc)$/;"	f
destroy_iowrap	Parser/io.c	/^void destroy_iowrap(sexp_iowrap_t *iow) {$/;"	f
destroy_sexp	Parser/sexp.c	/^destroy_sexp (sexp_t * s)$/;"	f
destroy_stack	Parser/faststack.c	/^destroy_stack (faststack_t * s)$/;"	f
determineActionControlState	Action/NaoActionControl.cpp	/^void NaoActionControl::determineActionControlState()$/;"	f	class:NaoActionControl
dfile	Parser/malloc_util.c	/^    char *dfile;$/;"	m	struct:__anon7	file:
directPitch	HeadControl/HeadControlMode.h	/^    double directPitch, directYaw, directSpeed;$/;"	m	class:HeadControlMode
directSpeed	HeadControl/HeadControlMode.h	/^    double directPitch, directYaw, directSpeed;$/;"	m	class:HeadControlMode
directYaw	HeadControl/HeadControlMode.h	/^    double directPitch, directYaw, directSpeed;$/;"	m	class:HeadControlMode
direction	types.h	/^    float		direction;$/;"	m	struct:HearInfo
disable	Action/NaoDynamicKick.h	/^		disable$/;"	e	enum:NaoDynamicKickEngine::State
disable	Action/NaoGetUp.h	/^		disable$/;"	e	enum:NaoGetupEngine::State
disable	Action/NaoKick.h	/^		disable$/;"	e	enum:NaoKickEngine::State
disable	Action/NaoSpecialAction.h	/^		disable$/;"	e	enum:NaoSpecialAction::State
disable	Action/Strive3DGetUp.h	/^		disable$/;"	e	enum:Strive3DGetupEngine::State
disabled	Module/SolutionRequest.h	/^        disabled = -1,$/;"	e	enum:SolutionRequest::ModuleSolutionID
distance	types.h	/^    double distance;$/;"	m	struct:VisionSense
divingSave1	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::divingSave1()$/;"	f	class:NaoSpecialAction
divingSave2	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::divingSave2()$/;"	f	class:NaoSpecialAction
divingSave3	Action/NaoSpecialAction.cpp	/^void NaoSpecialAction::divingSave3()$/;"	f	class:NaoSpecialAction
divingSaveLeft	Action/ActionRequest.h	/^		divingSaveLeft,$/;"	e	enum:SpecialActionRequest::SpecialActionID
divingSaveRight	Action/ActionRequest.h	/^		divingSaveRight,$/;"	e	enum:SpecialActionRequest::SpecialActionID
divingsave	BehaviorControl/Strive3DBehaviorControl.h	/^		divingsave = 0,$/;"	e	enum:Strive3DBehaviorControl::GolieState
dline	Parser/malloc_util.c	/^    int   dline;$/;"	m	struct:__anon7	file:
doOpen	Net/tcpsocket.cpp	/^        TCPSocket::doOpen( SocketDesc& fd )$/;"	f	class:rcss::net::TCPSocket
doOpen	Net/udpsocket.cpp	/^        UDPSocket::doOpen( SocketDesc& fd )$/;"	f	class:rcss::net::UDPSocket
do_action	Trainer_Client/control.cpp	/^string control::do_action(action *act)$/;"	f	class:control
do_command	Trainer_Client/control.cpp	/^string control::do_command(command *c)$/;"	f	class:control
doc	Utilities/xmlParser.h	/^	xmlDocPtr doc;$/;"	m	class:XMLParser
dq	RobotModel/robot.h	/^        float dq;$/;"	m	struct:Robot::Link
dribble	BehaviorControl/NaoBehaviorControl.h	/^        dribble,$/;"	e	enum:NaoBehaviorControl::BehaviorControlState
dribblePlan	AdvancedAgent/PlanManager.h	/^	DribblePlan* dribblePlan;$/;"	m	class:PlanManager
durationInEvolution	HeadControl/HeadControlMode.h	/^    unsigned int durationInEvolution;$/;"	m	class:HeadControlMode
during	Utilities/Range.h	/^    bool during(const Range<T>& r) const {return min > r.min && max < r.max;}$/;"	f	class:Range
e	Xabsl/XabslArray.h	/^    T e;$/;"	m	class:xabsl::ArrayElement
eADDR_OK	Net/addr.hpp	/^            enum Error { eADDR_OK, eSERV_NOT_FOUND, eHOST_NOT_FOUND };$/;"	e	enum:rcss::net::Addr::Error
eFrustumSide	salt/frustum.h	/^    enum eFrustumSide$/;"	g	class:salt::Frustum
eHOST_NOT_FOUND	Net/addr.hpp	/^            enum Error { eADDR_OK, eSERV_NOT_FOUND, eHOST_NOT_FOUND };$/;"	e	enum:rcss::net::Addr::Error
ePlaneID	salt/frustum.h	/^    enum ePlaneID$/;"	g	class:salt::Frustum
eSERV_NOT_FOUND	Net/addr.hpp	/^            enum Error { eADDR_OK, eSERV_NOT_FOUND, eHOST_NOT_FOUND };$/;"	e	enum:rcss::net::Addr::Error
eff_name	RobotModel/robot.h	/^        std::string eff_name;$/;"	m	struct:Robot::Link
elseIfConditions	Xabsl/XabslStatement.h	/^  Array<BooleanExpression*> elseIfConditions;$/;"	m	class:xabsl::IfElseBlock
elseIfStatements	Xabsl/XabslStatement.h	/^  Array<Statement*> elseIfStatements;$/;"	m	class:xabsl::IfElseBlock
elseStatement	Xabsl/XabslStatement.h	/^  Statement* elseStatement;$/;"	m	class:xabsl::IfElseBlock
elt	Parser/sexp.h	/^typedef struct elt {$/;"	s
elt_t	Parser/sexp.h	/^} elt_t;$/;"	t	typeref:enum:__anon4
empty_stack	Parser/faststack.h	141;"	d
endCycle	AdvancedAgent/Plan.h	/^	int endCycle;$/;"	m	class:Plan
enumElements	Xabsl/XabslSymbols.h	/^  Array<EnumElement*> enumElements;$/;"	m	class:xabsl::Enumeration
enumerated	Xabsl/XabslParameters.h	/^  Array<int*> enumerated;$/;"	m	class:xabsl::Parameters
enumeratedExpressions	Xabsl/XabslParameters.h	/^  Array<const EnumeratedExpression*> enumeratedExpressions;$/;"	m	class:xabsl::ParameterAssignment
enumeratedInputSymbols	Xabsl/XabslSymbols.h	/^  Array<EnumeratedInputSymbol*> enumeratedInputSymbols;$/;"	m	class:xabsl::Symbols
enumeratedOutputSymbol	Xabsl/XabslAction.h	/^  EnumeratedOutputSymbol* enumeratedOutputSymbol;$/;"	m	class:xabsl::ActionEnumeratedOutputSymbol
enumeratedOutputSymbolExpression	Xabsl/XabslAction.h	/^  const EnumeratedExpression* enumeratedOutputSymbolExpression;$/;"	m	class:xabsl::ActionEnumeratedOutputSymbol
enumeratedOutputSymbolValue	Xabsl/XabslAction.h	/^  int enumeratedOutputSymbolValue;$/;"	m	class:xabsl::ActionEnumeratedOutputSymbol
enumeratedOutputSymbols	Xabsl/XabslSymbols.h	/^  Array<EnumeratedOutputSymbol*> enumeratedOutputSymbols;$/;"	m	class:xabsl::Symbols
enumeratedValues	Xabsl/XabslParameters.h	/^  Array<int> enumeratedValues;$/;"	m	class:xabsl::ParameterAssignment
enumeration	Xabsl/XabslEnumeratedExpression.h	/^  const Enumeration* enumeration;$/;"	m	class:xabsl::EnumeratedExpression
enumeration	Xabsl/XabslSymbols.h	/^  Enumeration* enumeration;$/;"	m	class:xabsl::EnumeratedInputSymbol
enumeration	Xabsl/XabslSymbols.h	/^  Enumeration* enumeration;$/;"	m	class:xabsl::EnumeratedOutputSymbol
enumerations	Xabsl/XabslParameters.h	/^  Array<const Enumeration*> enumerations;$/;"	m	class:xabsl::Parameters
enumerations	Xabsl/XabslSymbols.h	/^  Array<Enumeration*> enumerations;$/;"	m	class:xabsl::Symbols
eps	WorldModel/convexhullmanager.cpp	26;"	d	file:
err	Net/exception.cpp	/^        AcceptErr::err() const throw()$/;"	f	class:rcss::net::AcceptErr
err	Net/exception.cpp	/^        BindErr::err() const throw()$/;"	f	class:rcss::net::BindErr
err	Net/exception.cpp	/^        ConnectErr::err() const throw()$/;"	f	class:rcss::net::ConnectErr
err	Net/exception.cpp	/^        GetNameErr::err() const throw()$/;"	f	class:rcss::net::GetNameErr
err	Net/exception.cpp	/^        HostNotFound::err() const throw()$/;"	f	class:rcss::net::HostNotFound
err	Net/exception.cpp	/^        ListenErr::err() const throw()$/;"	f	class:rcss::net::ListenErr
err	Net/exception.cpp	/^        OpenErr::err() const throw()$/;"	f	class:rcss::net::OpenErr
error	Parser/sexp.h	/^  unsigned int error;$/;"	m	struct:pcont
error	Xabsl/XabslTools.cpp	/^void ErrorHandler::error(const char* format, ...)$/;"	f	class:xabsl::ErrorHandler
errorHandler	BehaviorControl/CommonBasicBehaviors.h	/^    MyXabslErrorHandler& errorHandler;$/;"	m	class:CommonBasicBehaviors
errorHandler	Xabsl/XabslAgent.h	/^  ErrorHandler& errorHandler;$/;"	m	class:xabsl::Agent
errorHandler	Xabsl/XabslEngine.h	/^  ErrorHandler& errorHandler;$/;"	m	class:xabsl::Engine
errorHandler	Xabsl/XabslEngineExecutor.h	/^  	MyXabslErrorHandler errorHandler;$/;"	m	class:XabslEngineExecutor
errorHandler	Xabsl/XabslOption.h	/^  ErrorHandler& errorHandler;$/;"	m	class:xabsl::Option
errorHandler	Xabsl/XabslParameters.h	/^  ErrorHandler& errorHandler;$/;"	m	class:xabsl::Parameters
errorHandler	Xabsl/XabslState.h	/^  ErrorHandler& errorHandler;$/;"	m	class:xabsl::State
errorHandler	Xabsl/XabslSymbols.h	/^  ErrorHandler& errorHandler;$/;"	m	class:xabsl::Symbols
errorsOccurred	Xabsl/XabslTools.h	/^  bool errorsOccurred;$/;"	m	class:xabsl::ErrorHandler
esc	Parser/sexp.h	/^  unsigned int esc;$/;"	m	struct:pcont
execute	Action/GetUpEngine.h	/^  	virtual void execute() {};$/;"	f	class:GetupEngine
execute	Action/KickEngine.h	/^  	virtual void execute() {};$/;"	f	class:KickEngine
execute	Action/NaoActionControl.cpp	/^void NaoActionControl::execute()$/;"	f	class:NaoActionControl
execute	Action/SpecialAction.h	/^  	virtual void execute() {};$/;"	f	class:SpecialAction
execute	Action/WalkingEngine.h	/^  	virtual void execute() {};$/;"	f	class:WalkingEngine
execute	BehaviorControl/CommonBasicBehaviors.cpp	/^void BasicBehaviorDoNothing::execute()$/;"	f	class:BasicBehaviorDoNothing
execute	BehaviorControl/CommonBasicBehaviors.cpp	/^void BasicBehaviorSpecialAction::execute()$/;"	f	class:BasicBehaviorSpecialAction
execute	BehaviorControl/CommonBasicBehaviors.cpp	/^void BasicBehaviorStand::execute()$/;"	f	class:BasicBehaviorStand
execute	BehaviorControl/CommonBasicBehaviors.cpp	/^void BasicBehaviorStop::execute()$/;"	f	class:BasicBehaviorStop
execute	BehaviorControl/CommonBasicBehaviors.cpp	/^void BasicBehaviorWalk::execute()$/;"	f	class:BasicBehaviorWalk
execute	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::execute()$/;"	f	class:NaoBehaviorControl
execute	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::execute()$/;"	f	class:Strive3DBehaviorControl
execute	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::execute()$/;"	f	class:WalkPathPlanningControl
execute	BehaviorControl/XabslBehaviorControl.cpp	/^void XabslBehaviorControlAgentInterface::execute()$/;"	f	class:XabslBehaviorControlAgentInterface
execute	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::execute()$/;"	f	class:NaoHeadControl
execute	Module/ModuleSelector.cpp	/^void ModuleSelector::execute() $/;"	f	class:ModuleSelector
execute	Xabsl/XabslAction.cpp	/^void ActionBehavior::execute()$/;"	f	class:xabsl::ActionBehavior
execute	Xabsl/XabslAction.cpp	/^void ActionBooleanOutputSymbol::execute()$/;"	f	class:xabsl::ActionBooleanOutputSymbol
execute	Xabsl/XabslAction.cpp	/^void ActionDecimalOutputSymbol::execute()$/;"	f	class:xabsl::ActionDecimalOutputSymbol
execute	Xabsl/XabslAction.cpp	/^void ActionEnumeratedOutputSymbol::execute()$/;"	f	class:xabsl::ActionEnumeratedOutputSymbol
execute	Xabsl/XabslEngine.cpp	/^void Engine::execute()$/;"	f	class:xabsl::Engine
execute	Xabsl/XabslOption.cpp	/^void Option::execute()$/;"	f	class:xabsl::Option
executeEngine	Xabsl/XabslEngineExecutor.cpp	/^void XabslEngineExecutor::executeEngine()$/;"	f	class:XabslEngineExecutor
executeIfEngineCouldNotBeCreated	BehaviorControl/XabslBehaviorControl.cpp	/^void XabslBehaviorControl::executeIfEngineCouldNotBeCreated()$/;"	f	class:XabslBehaviorControl
executeParameterized	Action/GetUpEngineSelector.h	/^  bool executeParameterized()$/;"	f	class:GetupEngineSelector
executeParameterized	Action/KickEngineSelector.h	/^  bool executeParameterized()$/;"	f	class:KickEngineSelector
executeParameterized	Action/NaoDynamicKick.cpp	/^bool NaoDynamicKickEngine::executeParameterized()$/;"	f	class:NaoDynamicKickEngine
executeParameterized	Action/NaoGetUp.cpp	/^bool NaoGetupEngine::executeParameterized()$/;"	f	class:NaoGetupEngine
executeParameterized	Action/NaoKick.cpp	/^bool NaoKickEngine::executeParameterized()$/;"	f	class:NaoKickEngine
executeParameterized	Action/NaoSpecialAction.cpp	/^bool NaoSpecialAction::executeParameterized()$/;"	f	class:NaoSpecialAction
executeParameterized	Action/NaoWalkingEngine.cpp	/^bool NaoWalkingEngine::executeParameterized(const WalkRequest& walkRequest, double positionInWalkingCycle)$/;"	f	class:NaoWalkingEngine
executeParameterized	Action/SpecialActionSelector.h	/^  bool executeParameterized()$/;"	f	class:SpecialActionSelector
executeParameterized	Action/Strive3DGetUp.cpp	/^bool Strive3DGetupEngine::executeParameterized()$/;"	f	class:Strive3DGetupEngine
executeParameterized	Action/WalkingEngineSelector.h	/^  	bool executeParameterized( const WalkRequest& walkRequest, double positionInWalkingCycle)$/;"	f	class:WalkingEngineSelector
executedActionRequest	Action/ActionInfo.h	/^  ActionRequest executedActionRequest;$/;"	m	class:ActionInfo
exists	Xabsl/XabslArray.h	/^    bool exists(const char* name) const$/;"	f	class:xabsl::Array
expression1	Xabsl/XabslDecimalExpression.h	/^  DecimalExpression* expression1;$/;"	m	class:xabsl::ConditionalDecimalExpression
expression1	Xabsl/XabslEnumeratedExpression.h	/^  const EnumeratedExpression* expression1;$/;"	m	class:xabsl::ConditionalEnumeratedExpression
expression2	Xabsl/XabslDecimalExpression.h	/^  DecimalExpression* expression2;$/;"	m	class:xabsl::ConditionalDecimalExpression
expression2	Xabsl/XabslEnumeratedExpression.h	/^  const EnumeratedExpression* expression2;$/;"	m	class:xabsl::ConditionalEnumeratedExpression
f_inline	salt/defines.h	47;"	d
f_inline	salt/defines.h	52;"	d
faststack_t	Parser/faststack.h	/^} faststack_t;$/;"	t	typeref:struct:stack_wrapper
fatherNode	Utilities/xmlParser.h	/^	xmlNodePtr fatherNode;$/;"	m	class:XMLParser
fd	Parser/sexp.h	/^  int fd;$/;"	m	struct:sexp_iowrap
fd	Trainer_Client/trainer_client.h	/^	int fd;$/;"	m	class:trainer_client
fieldlength	WorldModel/fieldinfo.h	/^    float fieldlength;$/;"	m	class:FieldInfo
fieldwidth	WorldModel/fieldinfo.h	/^    float fieldwidth;$/;"	m	class:FieldInfo
file	Parser/malloc_util.c	/^    char *file;$/;"	m	struct:__anon7	file:
file	Xabsl/XabslEngineExecutor.h	/^  	std::ifstream* file; \/\/ the file to access$/;"	m	class:MyXabslFileInputSource
fileName	Utilities/Logger.h	/^	std::string fileName;$/;"	m	class:LogFile
fileName	Utilities/xmlParser.h	/^	std::string fileName;$/;"	m	class:XMLParser
filename	Xabsl/XabslEngineExecutor.h	/^  	char filename[200]; \/\/ the file name$/;"	m	class:MyXabslFileInputSource
finalWayPoints	BehaviorControl/WalkPathPlanningControl.h	/^	vector<Vector2f>& finalWayPoints(){return mFinalWayPoints;}$/;"	f	class:PathPlanningTest
find	Xabsl/XabslArray.h	/^    int find(const char* name) const$/;"	f	class:xabsl::Array
find_sexp	Parser/sexp_ops.c	/^find_sexp (char *name, sexp_t * start)$/;"	f
finishedBy	Utilities/Range.h	/^    bool finishedBy(const Range<T>& r) const {return max == r.max && min < r.min;}$/;"	f	class:Range
finishes	Utilities/Range.h	/^    bool finishes(const Range<T>& r) const {return max == r.max && min > r.min;}$/;"	f	class:Range
first	Utilities/Logger.h	/^	bool first;$/;"	m	class:LogStream
firstChild	BehaviorControl/WalkPathPlanningControl.h	/^	WayPoint* firstChild() const$/;"	f	class:WayPoint
firstFrame	HeadControl/HeadPathPlanner.h	/^    float firstFrame[maxNumberOfPoints];$/;"	m	class:HeadPathPlanner
float2ul	Utilities/Utilities.cpp	/^ unsigned long float2ul(float num)$/;"	f
foot_end_theta	Geometry/trajectory.h	/^    Spline foot_end_theta;$/;"	m	class:Trajectory
foot_end_x	Geometry/trajectory.h	/^    Spline foot_end_x;$/;"	m	class:Trajectory
foot_end_z	Geometry/trajectory.h	/^    Spline foot_end_z;$/;"	m	class:Trajectory
foot_start_theta	Geometry/trajectory.h	/^    Spline foot_start_theta;$/;"	m	class:Trajectory
foot_start_x	Geometry/trajectory.h	/^    Spline foot_start_x;$/;"	m	class:Trajectory
foot_start_z	Geometry/trajectory.h	/^    Spline foot_start_z;$/;"	m	class:Trajectory
foot_theta	Geometry/trajectory.h	/^    Spline foot_theta;$/;"	m	class:Trajectory
foot_x	Geometry/trajectory.h	/^    Spline foot_x;$/;"	m	class:Trajectory
foot_z	Geometry/trajectory.h	/^    Spline foot_z;$/;"	m	class:Trajectory
forward1	WorldModel/self.h	/^		forward1 = 1,$/;"	e	enum:Self::RoleInTeam
forward2	WorldModel/self.h	/^		forward2 = 2,$/;"	e	enum:Self::RoleInTeam
frameCounter	Module/ModuleSelector.h	/^  unsigned int frameCounter;$/;"	m	class:ModuleSelector
frameNumber	Action/ActionControl.h	/^  const unsigned long& frameNumber;$/;"	m	class:ActionControlInterfaces
frameNumber	Action/ActionRequest.h	/^    unsigned long frameNumber;$/;"	m	class:ActionRequest
free	Parser/malloc_util.c	17;"	d	file:
free	Parser/malloc_util.h	29;"	d
fst	Parser/parser.c	/^  sexp_t *fst, *lst;$/;"	m	struct:parse_stack_data	file:
g2PI	salt/gmath.h	/^static const double g2PI         = 2*M_PI; \/\/ was ((float)6.283185307);$/;"	m	namespace:salt
gAbs	salt/gmath.h	/^f_inline TYPE   gAbs(TYPE a)$/;"	f	namespace:salt
gArcCos	salt/gmath.h	/^f_inline TYPE   gArcCos(TYPE a)$/;"	f	namespace:salt
gArcSin	salt/gmath.h	/^f_inline TYPE   gArcSin(TYPE a)$/;"	f	namespace:salt
gArcTan	salt/gmath.h	/^f_inline TYPE   gArcTan(TYPE a)$/;"	f	namespace:salt
gArcTan2	salt/gmath.h	/^f_inline TYPE   gArcTan2(TYPE a, TYPE b)$/;"	f	namespace:salt
gCeil	salt/gmath.h	/^f_inline TYPE   gCeil(TYPE a)$/;"	f	namespace:salt
gClamp	salt/gmath.h	/^f_inline TYPE gClamp(TYPE &val, TYPE min, TYPE max)$/;"	f	namespace:salt
gCos	salt/gmath.h	/^f_inline TYPE gCos(TYPE a)$/;"	f	namespace:salt
gDegToRad	salt/gmath.h	/^f_inline TYPE gDegToRad(TYPE deg)$/;"	f	namespace:salt
gFloor	salt/gmath.h	/^f_inline TYPE gFloor(TYPE a)$/;"	f	namespace:salt
gHalfPI	salt/gmath.h	/^static const double gHalfPI      = M_PI_2; \/\/ was ((float)1.570796326794895);$/;"	m	namespace:salt
gInRange	salt/gmath.h	/^f_inline bool   gInRange(const TYPE& val, const TYPE& low, const TYPE& high)$/;"	f	namespace:salt
gIsFinite	salt/gmath.h	/^f_inline bool gIsFinite(TYPE f)$/;"	f	namespace:salt
gIsNan	salt/gmath.h	/^f_inline bool gIsNan(TYPE f)$/;"	f	namespace:salt
gLoop	strive3d.cpp	/^static bool gLoop = true;$/;"	v	file:
gMax	salt/gmath.h	/^f_inline TYPE gMax(TYPE a, TYPE b)$/;"	f	namespace:salt
gMin	salt/gmath.h	/^f_inline TYPE gMin(TYPE a, TYPE b)$/;"	f	namespace:salt
gNeg	salt/gmath.h	/^f_inline TYPE   gNeg(TYPE a)$/;"	f	namespace:salt
gNormalizeDeg	salt/gmath.h	/^f_inline double gNormalizeDeg(TYPE angle)$/;"	f	namespace:salt
gNormalizeRad	salt/gmath.h	/^f_inline double gNormalizeRad(TYPE angle)$/;"	f	namespace:salt
gPI	salt/gmath.h	/^static const double gPI          = M_PI;   \/\/ was ((float)3.1415926535);$/;"	m	namespace:salt
gPow	salt/gmath.h	/^f_inline TYPE   gPow(TYPE a, TYPE b)$/;"	f	namespace:salt
gRadToDeg	salt/gmath.h	/^f_inline TYPE gRadToDeg(TYPE rad)$/;"	f	namespace:salt
gRound	salt/gmath.h	/^f_inline int gRound(float f)$/;"	f	namespace:salt
gSign	salt/gmath.h	/^f_inline int gSign(TYPE a)$/;"	f	namespace:salt
gSin	salt/gmath.h	/^f_inline TYPE   gSin(TYPE a)$/;"	f	namespace:salt
gSqrt	salt/gmath.h	/^f_inline TYPE gSqrt(const TYPE &v)$/;"	f	namespace:salt
gSwap	salt/gmath.h	/^f_inline void gSwap(TYPE &a, TYPE &b)$/;"	f	namespace:salt
gTan	salt/gmath.h	/^f_inline TYPE   gTan(TYPE a)$/;"	f	namespace:salt
gain	Trainer_Client/common.h	/^	float gain[20];$/;"	m	struct:state
genMsg	AdvancedAgent/DribblePlan.cpp	/^void DribblePlan::genMsg()$/;"	f	class:DribblePlan
genMsg	AdvancedAgent/GoalPlan.cpp	/^void GoalPlan::genMsg()$/;"	f	class:GoalPlan
genMsg	AdvancedAgent/GoaliePlan.cpp	/^void GoaliePlan::genMsg()$/;"	f	class:GoaliePlan
genMsg	AdvancedAgent/PositioningPlan.cpp	/^void PositioningPlan::genMsg()$/;"	f	class:PositioningPlan
generateMessage	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::generateMessage()$/;"	f	class:PathPlanning
generateWayPoint	AdvancedAgent/PathPlanning.cpp	/^bool PathPlanning::generateWayPoint()$/;"	f	class:PathPlanning
getActionName	Action/ActionRequest.h	/^    const char* getActionName() const$/;"	f	class:ActionRequest
getActionName	Action/ActionRequest.h	/^    static const char* getActionName(ActionID id)$/;"	f	class:ActionRequest
getAddr	Net/addr.cpp	/^            getAddr() const$/;"	f	class:rcss::net::AddrImpl
getAddr	Net/addr.cpp	/^        Addr::getAddr() const$/;"	f	class:rcss::net::Addr
getAgents	Xabsl/XabslEngine.h	/^  const Array<Agent*>& getAgents() const {return agents;}$/;"	f	class:xabsl::Engine
getAngles	HeadControl/HeadPathPlanner.cpp	/^bool HeadPathPlanner::getAngles(float& neckYaw, float& headPitch)$/;"	f	class:HeadPathPlanner
getBall	WorldModel/worldmodel.h	/^	Ball& getBall(){return *mBall;}$/;"	f	class:WorldModel
getBasicBehavior	Xabsl/XabslAction.cpp	/^BasicBehavior* Action::getBasicBehavior()$/;"	f	class:xabsl::Action
getBasicBehavior	Xabsl/XabslAction.cpp	/^const BasicBehavior* Action::getBasicBehavior() const$/;"	f	class:xabsl::Action
getBasicBehaviors	Xabsl/XabslEngine.h	/^  const Array<BasicBehavior*>& getBasicBehaviors() const {return basicBehaviors;}$/;"	f	class:xabsl::Engine
getBehavior	Xabsl/XabslAction.cpp	/^Behavior* Action::getBehavior()$/;"	f	class:xabsl::Action
getBehavior	Xabsl/XabslAction.cpp	/^Behavior* ActionBasicBehavior::getBehavior()$/;"	f	class:xabsl::ActionBasicBehavior
getBehavior	Xabsl/XabslAction.cpp	/^Behavior* ActionOption::getBehavior()$/;"	f	class:xabsl::ActionOption
getBehavior	Xabsl/XabslAction.cpp	/^const Behavior* Action::getBehavior() const$/;"	f	class:xabsl::Action
getBehavior	Xabsl/XabslAction.cpp	/^const Behavior* ActionBasicBehavior::getBehavior() const$/;"	f	class:xabsl::ActionBasicBehavior
getBehavior	Xabsl/XabslAction.cpp	/^const Behavior* ActionOption::getBehavior() const$/;"	f	class:xabsl::ActionOption
getBlockPoint	AdvancedAgent/GoaliePlan.cpp	/^void GoaliePlan::getBlockPoint()$/;"	f	class:GoaliePlan
getBooleanOutputSymbol	Xabsl/XabslAction.cpp	/^const BooleanOutputSymbol* Action::getBooleanOutputSymbol() const$/;"	f	class:xabsl::Action
getBooleanOutputSymbolValue	Xabsl/XabslAction.cpp	/^bool Action::getBooleanOutputSymbolValue() const$/;"	f	class:xabsl::Action
getCenter	Utilities/Range.h	/^    T getCenter() const {return (max + min) \/ 2;}$/;"	f	class:Range
getCircleTanPoint	BehaviorControl/WalkPathPlanningControl.cpp	/^Vector2f PathPlanningTest::getCircleTanPoint($/;"	f	class:PathPlanningTest
getConvexHullManager	WorldModel/worldmodel.h	/^	ConvexHullManager & getConvexHullManager() { return mConvexHullManager; }$/;"	f	class:WorldModel
getCurNode	Utilities/xmlParser.h	/^	xmlNodePtr getCurNode(){return curNode;}$/;"	f	class:XMLParser
getCurrentSystemTime	Xabsl/XabslEngineExecutor.cpp	/^static unsigned long getCurrentSystemTime() $/;"	f	file:
getCycle	Utilities/Logger.cpp	/^long Timer::getCycle() const$/;"	f	class:Timer
getDate	Utilities/Logger.cpp	/^std::string OnlineTimer::getDate()$/;"	f	class:OnlineTimer
getDecimalOutputSymbol	Xabsl/XabslAction.cpp	/^const DecimalOutputSymbol* Action::getDecimalOutputSymbol() const$/;"	f	class:xabsl::Action
getDecimalOutputSymbolValue	Xabsl/XabslAction.cpp	/^double Action::getDecimalOutputSymbolValue() const$/;"	f	class:xabsl::Action
getDefaultSolution	Module/SolutionRequest.h	/^    static ModuleSolutionID getDefaultSolution(ModuleID id)$/;"	f	class:SolutionRequest
getDest	Net/socket.cpp	/^        Socket::getDest() const$/;"	f	class:rcss::net::Socket
getElement	Xabsl/XabslArray.h	/^    T getElement(const char* name, T defaultValue) const$/;"	f	class:xabsl::Array
getElement	Xabsl/XabslArray.h	/^    T& getElement(const char* name) const$/;"	f	class:xabsl::Array
getElement	Xabsl/XabslArray.h	/^    T& getElement(int pos) const$/;"	f	class:xabsl::Array
getEndCycle	AdvancedAgent/Plan.h	/^	int getEndCycle(){return endCycle;}$/;"	f	class:Plan
getEnumeratedOutputSymbol	Xabsl/XabslAction.cpp	/^const EnumeratedOutputSymbol* Action::getEnumeratedOutputSymbol() const$/;"	f	class:xabsl::Action
getEnumeratedOutputSymbolValue	Xabsl/XabslAction.cpp	/^int Action::getEnumeratedOutputSymbolValue() const$/;"	f	class:xabsl::Action
getFD	Net/socket.cpp	/^        Socket::getFD() const$/;"	f	class:rcss::net::Socket
getFatherNode	Utilities/xmlParser.h	/^	xmlNodePtr getFatherNode(){return fatherNode;}$/;"	f	class:XMLParser
getFieldInfo	WorldModel/worldmodel.h	/^	FieldInfo& getFieldInfo(){return *mFieldInfo;}$/;"	f	class:WorldModel
getFileName	Utilities/xmlParser.h	/^	std::string getFileName()$/;"	f	class:XMLParser
getGuiDebuggerMsg	Utilities/MessageStorage.h	/^	string getGuiDebuggerMsg(){return guiDebuggerMsg;}$/;"	f	class:MessageStorage
getGyroAngulaVel	WorldModel/self.h	/^	const salt::Vector3f & getGyroAngulaVel() { return mGyroAngularVel; }$/;"	f	class:Self
getHeadControlModeName	HeadControl/HeadControlMode.h	/^    static const char* getHeadControlModeName(HeadControlModes mode)$/;"	f	class:HeadControlMode
getHeadMotionName	HeadControl/HeadMotionRequest.h	/^    const char* getHeadMotionName() const$/;"	f	class:HeadMotionRequest
getHeadMotionName	HeadControl/HeadMotionRequest.h	/^    static const char* getHeadMotionName(HeadMotionID id)$/;"	f	class:HeadMotionRequest
getHitout	WorldModel/worldmodel.h	/^	bool getHitout() {return mCanHitout;}$/;"	f	class:WorldModel
getHost	Net/addr.cpp	/^            getHost() const$/;"	f	class:rcss::net::AddrImpl
getHost	Net/addr.cpp	/^        Addr::getHost() const$/;"	f	class:rcss::net::Addr
getHostStr	Net/addr.cpp	/^            getHostStr() const$/;"	f	class:rcss::net::AddrImpl
getHostStr	Net/addr.cpp	/^        Addr::getHostStr() const$/;"	f	class:rcss::net::Addr
getInstance	Utilities/StaticModule.h	/^	static T& getInstance()$/;"	f	class:StaticModule
getInstancePtr	Utilities/StaticModule.h	/^	static T* getInstancePtr()$/;"	f	class:StaticModule
getIsFinished	AdvancedAgent/Plan.h	/^	bool getIsFinished(){return isFinished;}\/\/After the whole action is done, $/;"	f	class:Plan
getKd	Action/PIDController.h	/^	float getKd() { return mKd; }$/;"	f	class:PIDController
getKi	Action/PIDController.h	/^	float getKi() { return mKi; }$/;"	f	class:PIDController
getKickTypeName	Action/ActionRequest.h	/^    const char* getKickTypeName() const$/;"	f	class:ActionRequest
getKickTypeName	Action/ActionRequest.h	/^    static const char* getKickTypeName(KickType id)$/;"	f	class:KickRequest
getKp	Action/PIDController.h	/^	float getKp() { return mKp; }$/;"	f	class:PIDController
getLFCenter	WorldModel/self.h	/^	const salt::Vector3f & getLFCenter() { 	return mLFCenter; }$/;"	f	class:Self
getLFForce	WorldModel/self.h	/^	const salt::Vector3f & getLFForce()  {	return mLFForce;  }$/;"	f	class:Self
getLastUpdateTime	WorldModel/dynamicobject.h	/^	float getLastUpdateTime(){return mLastUpdateTime;}$/;"	f	class:DynamicObject
getModuleName	Module/SolutionRequest.h	/^    static const char* getModuleName(ModuleID id)$/;"	f	class:SolutionRequest
getModuleSolutionName	Module/SolutionRequest.h	/^    static const char* getModuleSolutionName(ModuleID module, ModuleSolutionID solution)$/;"	f	class:SolutionRequest
getMySimTime	WorldModel/worldmodel.cpp	/^float WorldModel::getMySimTime()$/;"	f	class:WorldModel
getName	AdvancedAgent/Plan.h	/^	std::string getName(){return name;}$/;"	f	class:Plan
getName	Net/socket.cpp	/^        Socket::getName() const$/;"	f	class:rcss::net::Socket
getName	Xabsl/XabslArray.h	/^    const char* getName(int pos) const$/;"	f	class:xabsl::Array
getNextState	Xabsl/XabslState.cpp	/^State* State::getNextState()$/;"	f	class:xabsl::State
getNextState	Xabsl/XabslState.cpp	/^State* TransitionToState::getNextState()$/;"	f	class:xabsl::TransitionToState
getNextState	Xabsl/XabslStatement.cpp	/^State* IfElseBlock::getNextState()$/;"	f	class:xabsl::IfElseBlock
getNumOfSolutions	Module/SolutionRequest.h	/^    static int getNumOfSolutions(ModuleID id)$/;"	f	class:SolutionRequest
getOpp	WorldModel/worldmodel.cpp	/^Player& WorldModel::getOpp(int index)$/;"	f	class:WorldModel
getOppByNum	WorldModel/worldmodel.h	/^	Player& getOppByNum(int uniNum){return getOpp(uniNum-1);}$/;"	f	class:WorldModel
getOppTeamNearestToBall	WorldModel/worldmodel.h	/^	Player& getOppTeamNearestToBall()	{ return *mOppTeamNearestToBall; }$/;"	f	class:WorldModel
getOption	Xabsl/XabslAction.cpp	/^Option* Action::getOption()$/;"	f	class:xabsl::Action
getOption	Xabsl/XabslAction.cpp	/^const Option* Action::getOption() const$/;"	f	class:xabsl::Action
getOptionReachedATargetState	Xabsl/XabslOption.cpp	/^bool Option::getOptionReachedATargetState() const$/;"	f	class:xabsl::Option
getOptions	Xabsl/XabslEngine.h	/^  const Array<Option*>& getOptions() const {return options;}$/;"	f	class:xabsl::Engine
getOurForward1	WorldModel/worldmodel.h	/^	Player& getOurForward1()	{ return *mRoleForward1; }$/;"	f	class:WorldModel
getOurForward2	WorldModel/worldmodel.h	/^	Player& getOurForward2(){ return *mRoleForward2; }$/;"	f	class:WorldModel
getOurTeamNearestToBall	WorldModel/worldmodel.h	/^	Player& getOurTeamNearestToBall()	{ return *mOurTeamNearestToBall; }$/;"	f	class:WorldModel
getOurTeamSecondToBall	WorldModel/worldmodel.h	/^	Player& getOurTeamSecondToBall ()	{ return *mOurTeamSecondToBall; }$/;"	f	class:WorldModel
getPElement	Xabsl/XabslArray.h	/^    ArrayElement<T>* getPElement(const char* name)$/;"	f	class:xabsl::Array
getParameters	Xabsl/XabslAction.cpp	/^ParameterAssignment* Action::getParameters()$/;"	f	class:xabsl::Action
getParameters	Xabsl/XabslAction.cpp	/^const ParameterAssignment* Action::getParameters() const$/;"	f	class:xabsl::Action
getPathPlanning2ActionMsg	Utilities/MessageStorage.cpp	/^std::string MessageStorage::getPathPlanning2ActionMsg()$/;"	f	class:MessageStorage
getPathPlanning2ActionUpdateCycle	Utilities/MessageStorage.h	/^	float getPathPlanning2ActionUpdateCycle(){return pathPlanning2ActionUpdateCycle;}$/;"	f	class:MessageStorage
getPeer	Net/socket.cpp	/^        Socket::getPeer() const$/;"	f	class:rcss::net::Socket
getPlan2PathPlanningMsg	Utilities/MessageStorage.cpp	/^std::string MessageStorage::getPlan2PathPlanningMsg()$/;"	f	class:MessageStorage
getPlan2PathPlanningUpdateCycle	Utilities/MessageStorage.h	/^	float getPlan2PathPlanningUpdateCycle(){return plan2PathPlanningUpdateCycle;}$/;"	f	class:MessageStorage
getPlayerNearestToBall	WorldModel/worldmodel.h	/^	Player& getPlayerNearestToBall()	{ return *mPlayerNearestToBall;	}$/;"	f	class:WorldModel
getPort	Net/addr.cpp	/^            getPort() const$/;"	f	class:rcss::net::AddrImpl
getPort	Net/addr.cpp	/^        Addr::getPort() const$/;"	f	class:rcss::net::Addr
getPortStr	Net/addr.cpp	/^		    getPortStr( const std::string& proto = "" ) const$/;"	f	class:rcss::net::AddrImpl
getPortStr	Net/addr.cpp	/^		Addr::getPortStr( const std::string& proto ) const$/;"	f	class:rcss::net::Addr
getRFCenter	WorldModel/self.h	/^	const salt::Vector3f & getRFCenter() { 	return mRFCenter; }$/;"	f	class:Self
getRFForce	WorldModel/self.h	/^	const salt::Vector3f & getRFForce()  {	return mRFForce; }$/;"	f	class:Self
getRootAction	Xabsl/XabslEngine.cpp	/^Action* Engine::getRootAction()$/;"	f	class:xabsl::Engine
getRootAction	Xabsl/XabslEngine.cpp	/^const Action* Engine::getRootAction() const$/;"	f	class:xabsl::Engine
getRootNode	Utilities/xmlParser.h	/^	xmlNodePtr getRootNode(){return rootNode;}$/;"	f	class:XMLParser
getRootOption	Xabsl/XabslAgent.cpp	/^Behavior* Agent::getRootOption() const$/;"	f	class:xabsl::Agent
getRootOption	Xabsl/XabslEngine.cpp	/^const Option* Engine::getRootOption() const$/;"	f	class:xabsl::Engine
getRunCount	AdvancedAgent/Plan.h	/^	int getRunCount(){return runCount;}$/;"	f	class:Plan
getSafeConvexHullManager	WorldModel/worldmodel.h	/^	ConvexHullManager & getSafeConvexHullManager() { return mSafeConvexHullManager; }$/;"	f	class:WorldModel
getSelectedAgentName	Xabsl/XabslEngine.cpp	/^const char* Engine::getSelectedAgentName() const$/;"	f	class:xabsl::Engine
getSelectedSolution	Module/ModuleHandler.cpp	/^SolutionRequest::ModuleSolutionID ModuleHandler::getSelectedSolution(SolutionRequest::ModuleID id) const$/;"	f	class:ModuleHandler
getSelectedSolution	Module/ModuleSelector.cpp	/^SolutionRequest::ModuleSolutionID ModuleSelector::getSelectedSolution() const $/;"	f	class:ModuleSelector
getSelf	WorldModel/worldmodel.h	/^	Self& getSelf(){return *mSelf;}$/;"	f	class:WorldModel
getSize	Utilities/Range.h	/^    T getSize() const {return max - min;}$/;"	f	class:Range
getSize	Xabsl/XabslArray.h	/^    int getSize() const {return usedSize;}$/;"	f	class:xabsl::Array
getSpecialActionIDFromName	Action/ActionRequest.cpp	/^SpecialActionRequest::SpecialActionID SpecialActionRequest::getSpecialActionIDFromName(const char* name)$/;"	f	class:SpecialActionRequest
getSpecialActionIDName	Action/ActionRequest.h	/^    static const char* getSpecialActionIDName(SpecialActionID id)$/;"	f	class:SpecialActionRequest
getSpecialActionName	Action/ActionRequest.h	/^    const char* getSpecialActionName() const$/;"	f	class:ActionRequest
getStartCycle	AdvancedAgent/Plan.h	/^	int getStartCycle(){return startCycle;}$/;"	f	class:Plan
getTactics	AdvancedAgent/AdvancedAgent.cpp	/^Tactics AdvancedAgent::getTactics()$/;"	f	class:AdvancedAgent
getTmm	WorldModel/worldmodel.cpp	/^Player& WorldModel::getTmm(int index)$/;"	f	class:WorldModel
getTmmByNum	WorldModel/worldmodel.h	/^	Player& getTmmByNum(int uniNum){return getTmm(uniNum-1);}$/;"	f	class:WorldModel
getUp	Action/ActionRequest.h	/^        getUp,$/;"	e	enum:SpecialActionRequest::SpecialActionID
getUp1	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp1()$/;"	f	class:NaoGetupEngine
getUp1	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUp1()$/;"	f	class:Strive3DGetupEngine
getUp2	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp2()$/;"	f	class:NaoGetupEngine
getUp2	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUp2()$/;"	f	class:Strive3DGetupEngine
getUp3	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp3()$/;"	f	class:NaoGetupEngine
getUp3	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUp3()$/;"	f	class:Strive3DGetupEngine
getUp4	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp4()$/;"	f	class:NaoGetupEngine
getUp4	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUp4()$/;"	f	class:Strive3DGetupEngine
getUp5	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp5()$/;"	f	class:NaoGetupEngine
getUp5	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUp5()$/;"	f	class:Strive3DGetupEngine
getUp6	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp6()$/;"	f	class:NaoGetupEngine
getUp6	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUp6()$/;"	f	class:Strive3DGetupEngine
getUp7	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUp7()$/;"	f	class:NaoGetupEngine
getUpFB1	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUpFB1()$/;"	f	class:NaoGetupEngine
getUpFB1	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUpFB1()$/;"	f	class:Strive3DGetupEngine
getUpFB2	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUpFB2()$/;"	f	class:NaoGetupEngine
getUpFB2	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUpFB2()$/;"	f	class:Strive3DGetupEngine
getUpFB3	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUpFB3()$/;"	f	class:NaoGetupEngine
getUpFB3	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUpFB3()$/;"	f	class:Strive3DGetupEngine
getUpFB4	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUpFB4()$/;"	f	class:NaoGetupEngine
getUpFB4	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUpFB4()$/;"	f	class:Strive3DGetupEngine
getUpFB5	Action/NaoGetUp.cpp	/^void NaoGetupEngine::getUpFB5()$/;"	f	class:NaoGetupEngine
getUpFB5	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::getUpFB5()$/;"	f	class:Strive3DGetupEngine
getUpFromBack	Action/ActionRequest.h	/^        getUpFromBack,$/;"	e	enum:SpecialActionRequest::SpecialActionID
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool AndOperator::getValue() const$/;"	f	class:xabsl::AndOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool BooleanInputSymbolRef::getValue() const$/;"	f	class:xabsl::BooleanInputSymbolRef
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool BooleanOptionParameterRef::getValue() const$/;"	f	class:xabsl::BooleanOptionParameterRef
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool BooleanOutputSymbolRef::getValue() const$/;"	f	class:xabsl::BooleanOutputSymbolRef
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool BooleanValue::getValue() const$/;"	f	class:xabsl::BooleanValue
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool EnumeratedInputSymbolComparison::getValue() const$/;"	f	class:xabsl::EnumeratedInputSymbolComparison
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool EqualToOperator::getValue() const$/;"	f	class:xabsl::EqualToOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool GreaterThanOperator::getValue() const$/;"	f	class:xabsl::GreaterThanOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool GreaterThanOrEqualToOperator::getValue() const$/;"	f	class:xabsl::GreaterThanOrEqualToOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool LessThanOperator::getValue() const$/;"	f	class:xabsl::LessThanOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool LessThanOrEqualToOperator::getValue() const$/;"	f	class:xabsl::LessThanOrEqualToOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool NotEqualToOperator::getValue() const$/;"	f	class:xabsl::NotEqualToOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool NotOperator::getValue() const$/;"	f	class:xabsl::NotOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool OrOperator::getValue() const$/;"	f	class:xabsl::OrOperator
getValue	Xabsl/XabslBooleanExpression.cpp	/^bool SubsequentOptionReachedTargetStateCondition::getValue() const$/;"	f	class:xabsl::SubsequentOptionReachedTargetStateCondition
getValue	Xabsl/XabslDecimalExpression.cpp	/^double ConditionalDecimalExpression::getValue() const$/;"	f	class:xabsl::ConditionalDecimalExpression
getValue	Xabsl/XabslDecimalExpression.cpp	/^double DecimalInputSymbolRef::getValue() const$/;"	f	class:xabsl::DecimalInputSymbolRef
getValue	Xabsl/XabslDecimalExpression.cpp	/^double DecimalOptionParameterRef::getValue() const$/;"	f	class:xabsl::DecimalOptionParameterRef
getValue	Xabsl/XabslDecimalExpression.cpp	/^double DecimalOutputSymbolRef::getValue() const$/;"	f	class:xabsl::DecimalOutputSymbolRef
getValue	Xabsl/XabslDecimalExpression.cpp	/^double DecimalValue::getValue() const$/;"	f	class:xabsl::DecimalValue
getValue	Xabsl/XabslDecimalExpression.cpp	/^double DivideOperator::getValue() const$/;"	f	class:xabsl::DivideOperator
getValue	Xabsl/XabslDecimalExpression.cpp	/^double MinusOperator::getValue() const$/;"	f	class:xabsl::MinusOperator
getValue	Xabsl/XabslDecimalExpression.cpp	/^double ModOperator::getValue() const$/;"	f	class:xabsl::ModOperator
getValue	Xabsl/XabslDecimalExpression.cpp	/^double MultiplyOperator::getValue() const$/;"	f	class:xabsl::MultiplyOperator
getValue	Xabsl/XabslDecimalExpression.cpp	/^double PlusOperator::getValue() const$/;"	f	class:xabsl::PlusOperator
getValue	Xabsl/XabslDecimalExpression.cpp	/^double TimeRef::getValue() const$/;"	f	class:xabsl::TimeRef
getValue	Xabsl/XabslEnumeratedExpression.cpp	/^int ConditionalEnumeratedExpression::getValue() const$/;"	f	class:xabsl::ConditionalEnumeratedExpression
getValue	Xabsl/XabslEnumeratedExpression.cpp	/^int EnumeratedInputSymbolRef::getValue() const$/;"	f	class:xabsl::EnumeratedInputSymbolRef
getValue	Xabsl/XabslEnumeratedExpression.cpp	/^int EnumeratedOptionParameterRef::getValue() const$/;"	f	class:xabsl::EnumeratedOptionParameterRef
getValue	Xabsl/XabslEnumeratedExpression.cpp	/^int EnumeratedOutputSymbolRef::getValue() const$/;"	f	class:xabsl::EnumeratedOutputSymbolRef
getValue	Xabsl/XabslEnumeratedExpression.cpp	/^int EnumeratedValue::getValue() const$/;"	f	class:xabsl::EnumeratedValue
getValue	Xabsl/XabslSymbols.h	/^  T getValue() const$/;"	f	class:xabsl::InputSymbol
getValue	Xabsl/XabslSymbols.h	/^  T getValue() const$/;"	f	class:xabsl::OutputSymbol
getVisionSense	WorldModel/worldmodel.h	/^	const VisionSense & getVisionSense( VisionObject VO ) $/;"	f	class:WorldModel
getVisionState	WorldModel/worldmodel.h	/^	bool getVisionState() { return mVisionOn; }$/;"	f	class:WorldModel
getWalkTypeName	Action/ActionRequest.h	/^    const char* getWalkTypeName() const$/;"	f	class:ActionRequest
getWalkTypeName	Action/ActionRequest.h	/^    static const char* getWalkTypeName(WalkType id)$/;"	f	class:WalkRequest
getXMLDocPtr	Utilities/xmlParser.h	/^	xmlDocPtr getXMLDocPtr()$/;"	f	class:XMLParser
getXMLPropVal	Utilities/xmlParser.cpp	/^Str& XMLParser::getXMLPropVal(const char* Xpath, const char* prop, int index)$/;"	f	class:XMLParser
getXMLValue	Utilities/xmlParser.cpp	/^Str& XMLParser::getXMLValue(const char* Xpath, int index)$/;"	f	class:XMLParser
getXMLValueCount	Utilities/xmlParser.cpp	/^int XMLParser::getXMLValueCount(const char* Xpath)$/;"	f	class:XMLParser
getXabslEngineFileID	Module/SolutionRequest.h	/^    static const char* getXabslEngineFileID(xabslEngineID id)$/;"	f	class:SolutionRequest
getXabslEngineIDName	Module/SolutionRequest.h	/^    static const char* getXabslEngineIDName(xabslEngineID id)$/;"	f	class:SolutionRequest
get_action	Trainer_Client/trainer_client.cpp	/^bool trainer_client::get_action(action *act)$/;"	f	class:trainer_client
get_nodeset	Utilities/xmlParser.cpp	/^xmlXPathObjectPtr XMLParser::get_nodeset(const xmlChar *xpath) $/;"	f	class:XMLParser
get_rate	Trainer_Client/control.cpp	/^bool control::get_rate(float angle,float curAngle,float maxVel,float precision,float &rate)$/;"	f	class:control
get_to_ball	BehaviorControl/NaoBehaviorControl.h	/^        get_to_ball,$/;"	e	enum:NaoBehaviorControl::BehaviorControlState
getmOppTeamNearestToGoalie	WorldModel/worldmodel.h	/^	Player& getmOppTeamNearestToGoalie(){ return *mOppTeamNearestToGoalie; }$/;"	f	class:WorldModel
getreadyfordivingsave	BehaviorControl/Strive3DBehaviorControl.h	/^		getreadyfordivingsave =1,$/;"	e	enum:Strive3DBehaviorControl::GolieState
gettingUp	Action/NaoGetUp.cpp	/^void NaoGetupEngine::gettingUp()$/;"	f	class:NaoGetupEngine
gettingUp	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::gettingUp()$/;"	f	class:Strive3DGetupEngine
gettingUpFromBack	Action/NaoGetUp.cpp	/^void NaoGetupEngine::gettingUpFromBack()$/;"	f	class:NaoGetupEngine
gettingUpFromBack	Action/Strive3DGetUp.cpp	/^void Strive3DGetupEngine::gettingUpFromBack()$/;"	f	class:Strive3DGetupEngine
getup	Action/ActionRequest.h	/^        getup,$/;"	e	enum:ActionRequest::ActionID
getup	Action/NaoActionControl.h	/^        getup,$/;"	e	enum:NaoActionControl::__anon3
getupEngine	Module/SolutionRequest.h	/^        getupEngine, \/*!< See class GetupEngineSelector *\/$/;"	e	enum:SolutionRequest::ModuleID
go_to_state	Trainer_Client/control.cpp	/^bool control::go_to_state(state *st, command *cm)\/\/agar reside bashe true bar migardoone$/;"	f	class:control
goalKick	BaseAgent.cpp	/^void BaseAgent::goalKick()$/;"	f	class:BaseAgent
goalPlan	AdvancedAgent/PlanManager.h	/^	GoalPlan* goalPlan;$/;"	m	class:PlanManager
goaldepth	WorldModel/fieldinfo.h	/^    float goaldepth;$/;"	m	class:FieldInfo
goalheight	WorldModel/fieldinfo.h	/^    float goalheight;$/;"	m	class:FieldInfo
goaliePlan	AdvancedAgent/PlanManager.h	/^	GoaliePlan* goaliePlan;$/;"	m	class:PlanManager
goalwidth	WorldModel/fieldinfo.h	/^    float goalwidth;$/;"	m	class:FieldInfo
goaround	BehaviorControl/Strive3DBehaviorControl.h	/^		goaround = 4,$/;"	e	enum:Strive3DBehaviorControl::GolieState
golie	WorldModel/self.h	/^		golie = 0,$/;"	e	enum:Self::RoleInTeam
goliestate	BehaviorControl/Strive3DBehaviorControl.h	/^	GolieState goliestate;$/;"	m	class:Strive3DBehaviorControl
goliestatejudge	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::goliestatejudge()$/;"	f	class:Strive3DBehaviorControl
guard1	WorldModel/self.h	/^		guard1 = 4,$/;"	e	enum:Self::RoleInTeam
guard2	WorldModel/self.h	/^		guard2 = 5,$/;"	e	enum:Self::RoleInTeam
guard3	WorldModel/self.h	/^		guard3 = 6,$/;"	e	enum:Self::RoleInTeam
guard4	WorldModel/self.h	/^		guard4 = 7,$/;"	e	enum:Self::RoleInTeam
guard5	WorldModel/self.h	/^		guard5 = 8,$/;"	e	enum:Self::RoleInTeam
guard6	WorldModel/self.h	/^        guard6 = 9,$/;"	e	enum:Self::RoleInTeam
guard7	WorldModel/self.h	/^		guard7 = 10,$/;"	e	enum:Self::RoleInTeam
guiDebuggerMsg	Utilities/MessageStorage.h	/^	string guiDebuggerMsg;$/;"	m	class:MessageStorage
handle_ball	BehaviorControl/NaoBehaviorControl.h	/^        handle_ball ,$/;"	e	enum:NaoBehaviorControl::BehaviorControlState
handler	strive3d.cpp	/^extern "C" void handler ( int sig )$/;"	f
handmode	HeadControl/HeadMotionRequest.h	/^		handmode,$/;"	e	enum:HeadMotionRequest::HeadMotionID
hasOpp	AdvancedAgent/PathPlanning.h	/^	bool hasOpp;$/;"	m	class:PathPlanning
hd_sexp	Parser/sexp_ops.h	54;"	d
head	types.h	/^	salt::Vector3f 	head;$/;"	m	struct:Limb
headControl	Module/SolutionRequest.h	/^        headControl, \/*!< See class HeadControlSelector *\/$/;"	e	enum:SolutionRequest::ModuleID
headControlMode	BaseAgent.h	/^	HeadControlMode headControlMode;$/;"	m	class:BaseAgent
headControlMode	HeadControl/HeadControl.h	/^  const HeadControlMode& headControlMode;$/;"	m	class:HeadControlInterfaces
headControlMode	HeadControl/HeadControlMode.h	/^    HeadControlModes headControlMode;$/;"	m	class:HeadControlMode
headControlState	HeadControl/NaoHeadControl.h	/^    } headControlState;$/;"	m	class:NaoHeadControl	typeref:enum:NaoHeadControl::HeadControlState
headDown	HeadControl/NaoHeadControl.h	/^    Vector3f headDown;$/;"	m	class:NaoHeadControl
headIsBlockedBySpecialActionOrWalk	HeadControl/HeadControl.h	/^  const bool headIsBlockedBySpecialActionOrWalk;$/;"	m	class:HeadControlInterfaces
headLeft	HeadControl/NaoHeadControl.h	/^    Vector3f headLeft;$/;"	m	class:NaoHeadControl
headLeftDown	HeadControl/NaoHeadControl.h	/^    Vector3f headLeftDown;$/;"	m	class:NaoHeadControl
headMiddleLeft	HeadControl/NaoHeadControl.h	/^    Vector3f headMiddleLeft;$/;"	m	class:NaoHeadControl
headMiddleLeftDown	HeadControl/NaoHeadControl.h	/^    Vector3f headMiddleLeftDown;$/;"	m	class:NaoHeadControl
headMiddleRight	HeadControl/NaoHeadControl.h	/^    Vector3f headMiddleRight;$/;"	m	class:NaoHeadControl
headMiddleRightDown	HeadControl/NaoHeadControl.h	/^    Vector3f headMiddleRightDown;$/;"	m	class:NaoHeadControl
headMotionRequest	Action/ActionControl.h	/^  const HeadMotionRequest& headMotionRequest;$/;"	m	class:ActionControlInterfaces
headMotionRequest	BaseAgent.h	/^	HeadMotionRequest headMotionRequest ;$/;"	m	class:BaseAgent
headMotionRequest	BehaviorControl/BehaviorControl.h	/^	HeadMotionRequest& headMotionRequest;$/;"	m	class:BehaviorControlInterfaces
headMotionRequest	HeadControl/HeadControl.h	/^  HeadMotionRequest& headMotionRequest;$/;"	m	class:HeadControlInterfaces
headMotionType	HeadControl/HeadMotionRequest.h	/^	HeadMotionID headMotionType;$/;"	m	class:HeadMotionRequest
headPathPlanner	HeadControl/NaoHeadControl.h	/^    HeadPathPlanner headPathPlanner;$/;"	m	class:NaoHeadControl
headPathSpeedHeadPitch	HeadControl/HeadPathPlanner.h	/^    float headPathSpeedHeadPitch,headPathSpeedNeckYaw;$/;"	m	class:HeadPathPlanner
headPathSpeedNeckYaw	HeadControl/HeadPathPlanner.h	/^    float headPathSpeedHeadPitch,headPathSpeedNeckYaw;$/;"	m	class:HeadPathPlanner
headPositionDistanceToActualPosition	HeadControl/NaoHeadControl.cpp	/^float NaoHeadControl::headPositionDistanceToActualPosition(Vector3f comp,bool leftSide)$/;"	f	class:NaoHeadControl
headPositionReached	HeadControl/HeadPathPlanner.cpp	/^bool HeadPathPlanner::headPositionReached(Vector3f pos)$/;"	f	class:HeadPathPlanner
headRight	HeadControl/NaoHeadControl.h	/^    Vector3f headRight;$/;"	m	class:NaoHeadControl
headRightDown	HeadControl/NaoHeadControl.h	/^    Vector3f headRightDown;$/;"	m	class:NaoHeadControl
headUp	HeadControl/NaoHeadControl.h	/^    Vector3f headUp;$/;"	m	class:NaoHeadControl
headYawIsLeft	HeadControl/NaoHeadControl.cpp	/^bool NaoHeadControl::headYawIsLeft()$/;"	f	class:NaoHeadControl
headZero	HeadControl/NaoHeadControl.h	/^    Vector3f headZero;$/;"	m	class:NaoHeadControl
height	Parser/faststack.h	/^  int height;$/;"	m	struct:stack_wrapper
hip_end_x	Geometry/trajectory.h	/^    Spline hip_end_x;$/;"	m	class:Trajectory
hip_end_z	Geometry/trajectory.h	/^    Spline hip_end_z;$/;"	m	class:Trajectory
hip_start_x	Geometry/trajectory.h	/^    Spline hip_start_x;$/;"	m	class:Trajectory
hip_start_z	Geometry/trajectory.h	/^    Spline hip_start_z;$/;"	m	class:Trajectory
hip_x	Geometry/trajectory.h	/^    Spline hip_x;$/;"	m	class:Trajectory
hip_z	Geometry/trajectory.h	/^    Spline hip_z;$/;"	m	class:Trajectory
iKnowOppName	Parser/Parser.h	/^	bool		iKnowOppName;$/;"	m	class:Parser
id	RobotModel/robot.h	/^        int id;$/;"	m	struct:Robot::Link
id	Xabsl/XabslEngineExecutor.h	/^  SolutionRequest::xabslEngineID id;$/;"	m	class:MyXabslErrorHandler
id	Xabsl/XabslEngineExecutor.h	/^  SolutionRequest::xabslEngineID id;$/;"	m	class:XabslEngineExecutor
idCounterMate	Parser/Parser.h	/^	int 		idCounterMate;$/;"	m	class:Parser
idCounterOpp	Parser/Parser.h	/^	int 		idCounterOpp;$/;"	m	class:Parser
ifCondition	Xabsl/XabslStatement.h	/^  BooleanExpression* ifCondition;$/;"	m	class:xabsl::IfElseBlock
ifStatement	Xabsl/XabslStatement.h	/^  Statement* ifStatement;$/;"	m	class:xabsl::IfElseBlock
imp	Trainer_Client/common.h	/^	bool imp[20];$/;"	m	struct:state
inf	WorldModel/convexhullmanager.cpp	27;"	d	file:
infoOn	Utilities/Logger.h	/^	bool infoOn;$/;"	m	class:LogStream
info_arch	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	Action/ActionRequest.h	/^		init,$/;"	e	enum:SpecialActionRequest::SpecialActionID
init	Action/NaoActionControl.h	/^		init,$/;"	e	enum:NaoActionControl::__anon3
init	HeadControl/HeadPathPlanner.cpp	/^void HeadPathPlanner::init(const Vector3f* vectors, long* durations,int numberOfVectors, bool optimizeTimings)$/;"	f	class:HeadPathPlanner
init	Module/ModuleSelector.cpp	/^void ModuleSelector::init()$/;"	f	class:ModuleSelector
init	Utilities/StaticModule.h	/^	static void init()$/;"	f	class:StaticModule
init	Xabsl/XabslEngineExecutor.cpp	/^void XabslEngineExecutor::init(InputSource& input)$/;"	f	class:XabslEngineExecutor
initStaticModules	strive3d.cpp	/^void initStaticModules( int argc, char* argv[])$/;"	f
init_continuation	Parser/parser.c	/^init_continuation(char *str)$/;"	f
init_iowrap	Parser/io.c	/^sexp_iowrap_t *init_iowrap(int fd) {$/;"	f
initialState	Xabsl/XabslOption.h	/^  State* initialState;$/;"	m	class:xabsl::Option
initialized	Xabsl/XabslEngine.h	/^  bool initialized;$/;"	m	class:xabsl::Engine
instance	Net/handler.cpp	/^		Handler::instance()$/;"	f	class:rcss::net::Handler
instance	salt/random.h	/^    instance(const result_type& value)$/;"	f	class:salt::RandomEngine
instance	salt/random.h	/^    static RandomEngine& instance()$/;"	f	class:salt::RandomEngine
instance	salt/random.h	/^    static RandomEngine& instance(Generator& gen)$/;"	f	class:salt::RandomEngine
int_type	Net/socketstreambuf.hpp	/^            typedef int int_type;$/;"	t	class:rcss::net::SocketStreamBuf
intelligencemode	HeadControl/HeadMotionRequest.h	/^		intelligencemode,$/;"	e	enum:HeadMotionRequest::HeadMotionID
internalBooleanSymbols	Xabsl/XabslEngine.h	/^  Array<bool> internalBooleanSymbols;$/;"	m	class:xabsl::Engine
internalDecimalSymbols	Xabsl/XabslEngine.h	/^  Array<double> internalDecimalSymbols;$/;"	m	class:xabsl::Engine
internalEnumeratedSymbols	Xabsl/XabslEngine.h	/^  Array<int> internalEnumeratedSymbols;$/;"	m	class:xabsl::Engine
iparse_sexp	Parser/parser.c	/^iparse_sexp (char *s, int len, pcont_t *cc) {$/;"	f
isActive	Xabsl/XabslBehavior.h	/^  bool isActive;$/;"	m	class:xabsl::Behavior
isBallPosValid	AdvancedAgent/PathPlanning.h	/^	bool isBallPosValid;$/;"	m	class:PathPlanning
isConnected	Net/socket.cpp	/^        Socket::isConnected() const$/;"	f	class:rcss::net::Socket
isDesPosValid	AdvancedAgent/PathPlanning.h	/^	bool isDesPosValid;$/;"	m	class:PathPlanning
isDocExist	Utilities/xmlParser.h	/^	bool isDocExist;$/;"	m	class:XMLParser
isEmptyDoc	Utilities/xmlParser.h	/^	bool isEmptyDoc;$/;"	m	class:XMLParser
isFinished	AdvancedAgent/Plan.h	/^	bool isFinished;$/;"	m	class:Plan
isInside	Utilities/Range.h	/^    bool isInside(T t) const$/;"	f	class:Range
isLastPathFinished	HeadControl/HeadPathPlanner.h	/^    inline bool isLastPathFinished()$/;"	f	class:HeadPathPlanner
isNeeded	AdvancedAgent/DribblePlan.cpp	/^bool DribblePlan::isNeeded()$/;"	f	class:DribblePlan
isNeeded	AdvancedAgent/GoalPlan.cpp	/^bool GoalPlan::isNeeded()$/;"	f	class:GoalPlan
isNeeded	AdvancedAgent/GoaliePlan.cpp	/^bool GoaliePlan::isNeeded()$/;"	f	class:GoaliePlan
isNeeded	AdvancedAgent/PositioningPlan.cpp	/^bool PositioningPlan::isNeeded()$/;"	f	class:PositioningPlan
isOpen	Net/socket.cpp	/^        Socket::isOpen() const$/;"	f	class:rcss::net::Socket
isOutValid	Utilities/Logger.cpp	/^bool LogStream::isOutValid()$/;"	f	class:LogStream
isTargetState	Xabsl/XabslState.cpp	/^bool State::isTargetState() const$/;"	f	class:xabsl::State
isValid	BehaviorControl/WalkPathPlanningControl.h	/^	bool isValid() const {return mIsValid;}$/;"	f	class:WayPoint
isValid	Net/Net.h	/^	bool  isValid(){return mIsValid;}$/;"	f	class:Net
isValid	WorldModel/dynamicobject.h	/^	bool isValid(){return mIsValid;}$/;"	f	class:DynamicObject
isWhitespace	Xabsl/XabslEngineExecutor.cpp	/^bool MyXabslFileInputSource::isWhitespace()$/;"	f	class:MyXabslFileInputSource
isnan	Geometry/MatrixSpline.cpp	25;"	d	file:
isnan	Geometry/spline.cpp	21;"	d	file:
jointRangeHeadPitch	HeadControl/NaoHeadControl.h	/^    Range<float> jointRangeNeckYaw, jointRangeHeadPitch;$/;"	m	class:NaoHeadControl
jointRangeNeckYaw	HeadControl/NaoHeadControl.h	/^    Range<float> jointRangeNeckYaw, jointRangeHeadPitch;$/;"	m	class:NaoHeadControl
joint_name_to_number	Trainer_Client/common.cpp	/^void joint_name_to_number(const string &n, int &a, int &b)$/;"	f
joint_number_to_name	Trainer_Client/common.cpp	/^string joint_number_to_name[]={$/;"	v
joyStickR	BehaviorControl/WalkPathPlanningControl.h	/^	float joyStickR() const {return mJoyStickR;}$/;"	f	class:DebugMsgParser
joyStickX	BehaviorControl/WalkPathPlanningControl.h	/^	float joyStickX() const {return mJoyStickX;}$/;"	f	class:DebugMsgParser
joyStickY	BehaviorControl/WalkPathPlanningControl.h	/^	float joyStickY() const {return mJoyStickY;}$/;"	f	class:DebugMsgParser
k	Geometry/trajectory.h	/^    int k;$/;"	m	class:Trajectory
kick	Action/ActionRequest.h	/^        kick,$/;"	e	enum:ActionRequest::ActionID
kick	Action/NaoActionControl.h	/^	    kick,$/;"	e	enum:NaoActionControl::__anon3
kick	BehaviorControl/NaoBehaviorControl.h	/^        kick,$/;"	e	enum:NaoBehaviorControl::BehaviorControlState
kickCycles	BaseAgent.h	/^	int		kickCycles;$/;"	m	class:BaseAgent
kickEngine	Module/SolutionRequest.h	/^        kickEngine,   \/*!< See class KickEngineSelector *\/$/;"	e	enum:SolutionRequest::ModuleID
kickIn	BaseAgent.cpp	/^void BaseAgent::kickIn()$/;"	f	class:BaseAgent
kickLeft1	Action/NaoDynamicKick.cpp	/^ void NaoDynamicKickEngine::kickLeft1()$/;"	f	class:NaoDynamicKickEngine
kickLeft1	Action/NaoKick.cpp	/^void NaoKickEngine::kickLeft1()$/;"	f	class:NaoKickEngine
kickLeft2	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickLeft2()$/;"	f	class:NaoDynamicKickEngine
kickLeft2	Action/NaoKick.cpp	/^void NaoKickEngine::kickLeft2()$/;"	f	class:NaoKickEngine
kickLeft3	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickLeft3()$/;"	f	class:NaoDynamicKickEngine
kickLeft3	Action/NaoKick.cpp	/^void NaoKickEngine::kickLeft3()$/;"	f	class:NaoKickEngine
kickLeft4	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickLeft4()$/;"	f	class:NaoDynamicKickEngine
kickLeft4	Action/NaoKick.cpp	/^void NaoKickEngine::kickLeft4()$/;"	f	class:NaoKickEngine
kickLeft5	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickLeft5()$/;"	f	class:NaoDynamicKickEngine
kickLeft5	Action/NaoKick.cpp	/^void NaoKickEngine::kickLeft5()$/;"	f	class:NaoKickEngine
kickLeft6	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickLeft6()$/;"	f	class:NaoDynamicKickEngine
kickLeft7	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickLeft7()$/;"	f	class:NaoDynamicKickEngine
kickOff	BaseAgent.cpp	/^void BaseAgent::kickOff()$/;"	f	class:BaseAgent
kickRequest	Action/ActionRequest.h	/^    KickRequest kickRequest;$/;"	m	class:ActionRequest
kickRight1	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickRight1()$/;"	f	class:NaoDynamicKickEngine
kickRight2	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickRight2()$/;"	f	class:NaoDynamicKickEngine
kickRight3	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickRight3()$/;"	f	class:NaoDynamicKickEngine
kickRight4	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickRight4()$/;"	f	class:NaoDynamicKickEngine
kickRight5	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::kickRight5()$/;"	f	class:NaoDynamicKickEngine
kickType	Action/ActionRequest.h	/^    KickType kickType;$/;"	m	class:KickRequest
kickWithLeft	Action/ActionRequest.h	/^        kickWithLeft,$/;"	e	enum:SpecialActionRequest::SpecialActionID
kickWithRight	Action/ActionRequest.h	/^        kickWithRight,$/;"	e	enum:SpecialActionRequest::SpecialActionID
kickleft	Action/ActionRequest.h	/^	kickleft$/;"	e	enum:KickRequest::KickType
kickright	Action/ActionRequest.h	/^        kickright,$/;"	e	enum:KickRequest::KickType
lastActionType	Action/GetUpEngine.h	/^  const ActionRequest::ActionID& lastActionType;$/;"	m	class:GetupEngineInterfaces
lastActionType	Action/KickEngine.h	/^  const ActionRequest::ActionID& lastActionType;$/;"	m	class:KickEngineInterfaces
lastActionType	Action/NaoActionControl.h	/^    ActionRequest::ActionID lastActionType;$/;"	m	class:NaoActionControl
lastActionType	Action/SpecialAction.h	/^  const ActionRequest::ActionID& lastActionType;$/;"	m	class:SpecialActionInterfaces
lastActionType	Action/WalkingEngine.h	/^  const ActionRequest::ActionID& lastActionType;$/;"	m	class:WalkingEngineInterfaces
lastBallPos	AdvancedAgent/GoaliePlan.h	/^		Vector2f lastBallPos;$/;"	m	class:GoaliePlan
lastBehaviorControlState	BehaviorControl/NaoBehaviorControl.h	/^    BehaviorControlState lastBehaviorControlState;$/;"	m	class:NaoBehaviorControl
lastCycle	Utilities/Logger.h	/^		timeval lastCycle;$/;"	m	class:OnlineTimer
lastHeadControlMode	HeadControl/NaoHeadControl.h	/^    HeadControlMode::HeadControlModes lastHeadControlMode;$/;"	m	class:NaoHeadControl
lastHeadControlState	HeadControl/NaoHeadControl.h	/^    HeadControlState lastHeadControlState;$/;"	m	class:NaoHeadControl
lastHeadPitch	HeadControl/HeadPathPlanner.h	/^    float lastHeadPitch;$/;"	m	class:HeadPathPlanner
lastNeckYaw	HeadControl/HeadPathPlanner.h	/^    float lastNeckYaw;$/;"	m	class:HeadPathPlanner
lastNode	Utilities/xmlParser.h	/^	xmlNodePtr lastNode;$/;"	m	class:XMLParser
lastPos	Parser/sexp.h	/^  char        *lastPos;$/;"	m	struct:pcont
lastScanWasLeft	HeadControl/NaoHeadControl.h	/^    bool lastScanWasLeft;$/;"	m	class:NaoHeadControl
last_check	Parser/malloc_util.c	/^static int last_check = 0;$/;"	v	file:
last_sexp	Parser/sexp.h	/^  sexp_t     *last_sexp;$/;"	m	struct:pcont
latestSpecialActionRequest	Action/NaoActionControl.h	/^    SpecialActionRequest latestSpecialActionRequest;$/;"	m	class:NaoActionControl
latestWalkRequest	Action/NaoActionControl.h	/^    WalkRequest latestWalkRequest;$/;"	m	class:NaoActionControl
leftarm	types.h	/^	salt::Vector3f 	leftarm;$/;"	m	struct:Limb
leftfoot	types.h	/^	salt::Vector3f	leftfoot;$/;"	m	struct:Limb
len	Parser/cstring.h	/^  size_t len;$/;"	m	struct:__cstring
limit	Utilities/Range.h	/^    Range<T> limit(const Range<T>& r) const {return Range<T>(limit(r.min),limit(r.max));} \/\/sets the limit of a Range$/;"	f	class:Range
limit	Utilities/Range.h	/^    T limit(T t) const {return t < min ? min : t > max ? max : t;} \/\/sets a limit for a Range$/;"	f	class:Range
line	Parser/malloc_util.c	/^    int   line;$/;"	m	struct:__anon7	file:
line	Parser/sexp.h	/^  unsigned int line;$/;"	m	struct:elt
line	Parser/sexp.h	/^  unsigned int line;$/;"	m	struct:pcont
list	Parser/sexp.h	/^  struct elt *list;$/;"	m	struct:elt	typeref:struct:elt::elt
listen	Net/socket.cpp	/^        Socket::listen( int backlog )$/;"	f	class:rcss::net::Socket
load	Trainer_Client/common.cpp	/^bool action::load(istream &is)$/;"	f	class:action
localPos	RobotModel/robot.h	/^		salt::Vector3f	localPos;	\/\/By QuJunjun$/;"	m	struct:Robot::RobotPartInfo
localPos	types.h	/^    salt::Vector3f localPos;\/\/local position for the robot's torso coordinate$/;"	m	struct:VisionSense
localPosInVision	types.h	/^	salt::Vector3f localPosInVision;\/\/local position for the vision coordinate$/;"	m	struct:VisionSense
localRot	RobotModel/robot.h	/^		salt::Matrix	localRot;	\/\/By QuJunjun$/;"	m	struct:Robot::RobotPartInfo
logNull	Utilities/Logger.h	/^		LogNull logNull;$/;"	m	class:Logger::LogStreams
logStreams	Utilities/Logger.h	/^	static LogStreams *logStreams;$/;"	m	class:Logger
lookAroundCommunicatedBallPosition	HeadControl/HeadControlMode.h	/^        lookAroundCommunicatedBallPosition,$/;"	e	enum:HeadControlMode::HeadControlModes
lookAtInsertionPointFrontLeft	HeadControl/HeadControlMode.h	/^        lookAtInsertionPointFrontLeft,$/;"	e	enum:HeadControlMode::HeadControlModes
lookAtInsertionPointFrontRight	HeadControl/HeadControlMode.h	/^        lookAtInsertionPointFrontRight,$/;"	e	enum:HeadControlMode::HeadControlModes
lookBetweenFeet	HeadControl/HeadControlMode.h	/^        lookBetweenFeet,$/;"	e	enum:HeadControlMode::HeadControlModes
lookLeft	HeadControl/HeadControlMode.h	/^        lookLeft,$/;"	e	enum:HeadControlMode::HeadControlModes
lookRight	HeadControl/HeadControlMode.h	/^        lookRight,$/;"	e	enum:HeadControlMode::HeadControlModes
look_at_opp_goal	HeadControl/NaoHeadControl.h	/^		look_at_opp_goal,$/;"	e	enum:NaoHeadControl::HeadControlState
look_at_our_goal	HeadControl/NaoHeadControl.h	/^		look_at_our_goal,$/;"	e	enum:NaoHeadControl::HeadControlState
lookatball	HeadControl/HeadMotionRequest.h	/^		lookatball,$/;"	e	enum:HeadMotionRequest::HeadMotionID
lookatoppgoal	HeadControl/HeadMotionRequest.h	/^		lookatoppgoal,$/;"	e	enum:HeadMotionRequest::HeadMotionID
lookatourgoal	HeadControl/HeadMotionRequest.h	/^		lookatourgoal,$/;"	e	enum:HeadMotionRequest::HeadMotionID
lookforward	HeadControl/HeadMotionRequest.h	/^		lookforward,$/;"	e	enum:HeadMotionRequest::HeadMotionID
lookleft	HeadControl/HeadMotionRequest.h	/^		lookleft,$/;"	e	enum:HeadMotionRequest::HeadMotionID
lookright	HeadControl/HeadMotionRequest.h	/^		lookright,$/;"	e	enum:HeadMotionRequest::HeadMotionID
lst	Parser/parser.c	/^  sexp_t *fst, *lst;$/;"	m	struct:parse_stack_data	file:
m	RobotModel/robot.h	/^        float m;$/;"	m	struct:Robot::Link
m	salt/matrix.h	/^    float m[16];$/;"	m	class:salt::Matrix
mAcceleration	WorldModel/self.h	/^	Vector3f              mAcceleration;	\/\/!By Qu Junjun 2010.1.23$/;"	m	class:Self
mActionCommand	Action/NaoActionControl.h	/^    std::string mActionCommand;$/;"	m	class:NaoActionControl
mActionControl	BaseAgent.h	/^  	ActionControlSelector *mActionControl;$/;"	m	class:BaseAgent
mBall	WorldModel/worldmodel.h	/^	Ball *mBall;$/;"	m	class:WorldModel
mBasePos	salt/frustum.h	/^    Vector3f    mBasePos;$/;"	m	class:salt::Frustum
mBehaviorControl	BaseAgent.h	/^	BehaviorControlSelector *mBehaviorControl;$/;"	m	class:BaseAgent
mBottom	salt/rect.h	/^    int mBottom;$/;"	m	class:salt::Rect
mCanHitout	WorldModel/worldmodel.h	/^	bool 			mCanHitout;$/;"	m	class:WorldModel
mCanLocalize	WorldModel/worldmodel.h	/^	bool 			mCanLocalize;$/;"	m	class:WorldModel
mCandidatePath	BehaviorControl/WalkPathPlanningControl.h	/^	vector<WayPoint*> mCandidatePath; \/\/the destination way point vector$/;"	m	class:PathPlanningTest
mCenterPoint	WorldModel/convexhull.h	/^		Vector3f 				mCenterPoint;$/;"	m	class:ConvexHull
mChildren	BehaviorControl/WalkPathPlanningControl.h	/^	vector<WayPoint*> mChildren;$/;"	m	class:WayPoint
mCmdType	BehaviorControl/WalkPathPlanningControl.h	/^	CmdType mCmdType;$/;"	m	class:DebugMsgParser
mCoMIsStable	WorldModel/self.cpp	/^bool Self::mCoMIsStable()$/;"	f	class:Self
mCommand	BaseAgent.h	/^	std::string     mCommand;$/;"	m	class:BaseAgent
mConvexHullList	WorldModel/convexhullmanager.h	/^		list<ConvexHull *> mConvexHullList;$/;"	m	class:ConvexHullManager
mConvexHullManager	WorldModel/worldmodel.h	/^	ConvexHullManager mConvexHullManager; \/\/By Qu Junjun 2009.10.4$/;"	m	class:WorldModel
mCycle	BaseAgent.h	/^	int		 mCycle;$/;"	m	class:BaseAgent
mData	salt/tvector.h	/^    DATATYPE mData[ELEMENTS];$/;"	m	class:salt::TVector
mDebugMsgParser	BehaviorControl/WalkPathPlanningControl.h	/^  	DebugMsgParser mDebugMsgParser;$/;"	m	class:WalkPathPlanningControl
mDestination	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f mDestination;$/;"	m	class:DebugMsgParser
mDs3D	Action/NaoWalkingEngine.h	/^	salt::Vector3f mDs3D;\/\/by Neil$/;"	m	class:NaoWalkingEngine
mDs3D	Geometry/trajectory.h	/^    salt::Vector3f mDs3D;$/;"	m	class:Trajectory
mErr	Action/PIDController.h	/^	float mErr;			\/\/!e(n) = mErr$/;"	m	class:PIDController
mErr_1	Action/PIDController.h	/^	float mErr_1;		\/\/!e(n-1) = mErr_1$/;"	m	class:PIDController
mErr_2	Action/PIDController.h	/^	float mErr_2;		\/\/!e(n-2) = mErr_2$/;"	m	class:PIDController
mExtraSafeRadius	BehaviorControl/WalkPathPlanningControl.h	/^	float mExtraSafeRadius;$/;"	m	class:PathPlanningTest
mFieldInfo	WorldModel/worldmodel.h	/^	FieldInfo *mFieldInfo;$/;"	m	class:WorldModel
mFinalWayPoints	BehaviorControl/WalkPathPlanningControl.h	/^	vector<Vector2f> mFinalWayPoints;$/;"	m	class:PathPlanningTest
mGlobleLimb	WorldModel/player.h	/^	Limb mGlobleLimb;$/;"	m	class:Player
mGyroAngularVel	WorldModel/self.h	/^    Vector3f              mGyroAngularVel;$/;"	m	class:Self
mHeadConrol	BaseAgent.h	/^	HeadControlSelector *mHeadConrol;$/;"	m	class:BaseAgent
mHearCycles	WorldModel/worldmodel.h	/^	int			mHearCycles;$/;"	m	class:WorldModel
mHearInfo	WorldModel/self.h	/^    HearInfo                    mHearInfo;$/;"	m	class:Self
mHearInfo	WorldModel/worldmodel.h	/^	HearInfo mHearInfo;$/;"	m	class:WorldModel
mHearingOn	WorldModel/worldmodel.h	/^	bool			mHearingOn;$/;"	m	class:WorldModel
mHingeJointSenseMap	RobotModel/robot.h	/^    THingeJointSenseMap mHingeJointSenseMap;$/;"	m	class:Robot
mHipMatrix	Geometry/trajectory.h	/^    salt::Matrix mHipMatrix;$/;"	m	class:Trajectory
mHoldAnkleMatrix	Geometry/trajectory.h	/^    salt::Matrix mHoldAnkleMatrix;$/;"	m	class:Trajectory
mHoldFootMatrix	Action/NaoWalkingEngine.h	/^    salt::Matrix        mHoldFootMatrix;$/;"	m	class:NaoWalkingEngine
mHoldFootMatrix	Geometry/trajectory.h	/^    salt::Matrix mHoldFootMatrix;$/;"	m	class:Trajectory
mHost	Net/Net.h	/^	string mHost;$/;"	m	class:Net
mICanSeeBall	WorldModel/worldmodel.h	/^	bool			mICanSeeBall;$/;"	m	class:WorldModel
mIKJointAngle	RobotModel/robot.h	/^    boost::shared_array<float> mIKJointAngle;$/;"	m	class:Robot
mIKJointVel	RobotModel/robot.h	/^    boost::shared_array<float> mIKJointVel;$/;"	m	class:Robot
mIdentity	salt/matrix.cpp	/^float Matrix::mIdentity[16]=$/;"	m	class:Matrix	file:
mIdentity	salt/matrix.h	/^    static float mIdentity[16];$/;"	m	class:salt::Matrix
mInit	Action/NaoDynamicKick.h	/^	bool mInit;$/;"	m	class:NaoDynamicKickEngine
mInit	Action/NaoGetUp.h	/^	bool mInit;$/;"	m	class:NaoGetupEngine
mInit	Action/NaoKick.h	/^	bool mInit;$/;"	m	class:NaoKickEngine
mInit	Action/NaoSpecialAction.h	/^	bool mInit;$/;"	m	class:NaoSpecialAction
mInit	Action/NaoWalkingEngine.h	/^	bool mInit;$/;"	m	class:NaoWalkingEngine
mInit	Action/Strive3DGetUp.h	/^	bool mInit;$/;"	m	class:Strive3DGetupEngine
mInput	Action/PIDController.h	/^	float mInput;		\/\/!mInput = mErr = e(n)$/;"	m	class:PIDController
mIsDestValid	BehaviorControl/WalkPathPlanningControl.h	/^	bool mIsDestValid;$/;"	m	class:DebugMsgParser
mIsDone	Action/NaoDynamicKick.h	/^	bool mIsDone;$/;"	m	class:NaoDynamicKickEngine
mIsDone	Action/NaoGetUp.h	/^	bool mIsDone;$/;"	m	class:NaoGetupEngine
mIsDone	Action/NaoKick.h	/^	bool mIsDone;$/;"	m	class:NaoKickEngine
mIsDone	Action/NaoSpecialAction.h	/^	bool mIsDone;$/;"	m	class:NaoSpecialAction
mIsDone	Action/NaoWalkingEngine.h	/^	bool mIsDone;$/;"	m	class:NaoWalkingEngine
mIsDone	Action/Strive3DGetUp.h	/^	bool mIsDone;$/;"	m	class:Strive3DGetupEngine
mIsValid	BehaviorControl/WalkPathPlanningControl.h	/^	bool mIsValid;$/;"	m	class:WayPoint
mIsValid	Net/Net.h	/^	bool  mIsValid;$/;"	m	class:Net
mIsValid	WorldModel/dynamicobject.h	/^	bool mIsValid;$/;"	m	class:DynamicObject
mJointAngle	Action/GetUpEngine.h	/^    boost::shared_array<float> mJointAngle;$/;"	m	class:GetupEngineInterfaces
mJointAngle	Action/KickEngine.h	/^    boost::shared_array<float> mJointAngle;$/;"	m	class:KickEngineInterfaces
mJointAngle	Action/NaoActionControl.h	/^    boost::shared_array<float>  mJointAngle;$/;"	m	class:NaoActionControl
mJointAngle	Action/SpecialAction.h	/^    boost::shared_array<float> mJointAngle;$/;"	m	class:SpecialActionInterfaces
mJointAngle	Action/WalkingEngine.h	/^    boost::shared_array<float> mJointAngle;$/;"	m	class:WalkingEngineInterfaces
mJointIDMap	RobotModel/robot.h	/^    TJointIDMap mJointIDMap;$/;"	m	class:Robot
mJointVel	Action/GetUpEngine.h	/^    boost::shared_array<float> mJointVel;$/;"	m	class:GetupEngineInterfaces
mJointVel	Action/KickEngine.h	/^    boost::shared_array<float> mJointVel;$/;"	m	class:KickEngineInterfaces
mJointVel	Action/NaoActionControl.h	/^    boost::shared_array<float>  mJointVel;$/;"	m	class:NaoActionControl
mJointVel	Action/SpecialAction.h	/^    boost::shared_array<float> mJointVel;$/;"	m	class:SpecialActionInterfaces
mJointVel	Action/WalkingEngine.h	/^    boost::shared_array<float> mJointVel;$/;"	m	class:WalkingEngineInterfaces
mJoyStickR	BehaviorControl/WalkPathPlanningControl.h	/^	float mJoyStickR;$/;"	m	class:DebugMsgParser
mJoyStickX	BehaviorControl/WalkPathPlanningControl.h	/^	float mJoyStickX;$/;"	m	class:DebugMsgParser
mJoyStickY	BehaviorControl/WalkPathPlanningControl.h	/^	float mJoyStickY;$/;"	m	class:DebugMsgParser
mKd	Action/PIDController.h	/^	float mKd;$/;"	m	class:PIDController
mKi	Action/PIDController.h	/^	float mKi;$/;"	m	class:PIDController
mKp	Action/PIDController.h	/^	float mKp;$/;"	m	class:PIDController
mLFCenter	WorldModel/self.h	/^    Vector3f              mLFCenter;$/;"	m	class:Self
mLFForce	WorldModel/self.h	/^    Vector3f              mLFForce;$/;"	m	class:Self
mLastSimTime	WorldModel/worldmodel.h	/^	float          	 mLastSimTime;$/;"	m	class:WorldModel
mLastUpdateTime	WorldModel/dynamicobject.h	/^	float mLastUpdateTime;$/;"	m	class:DynamicObject
mLeft	salt/rect.h	/^    int mLeft;$/;"	m	class:salt::Rect
mLeftFirstMove	Action/NaoWalkingEngine.h	/^    bool                mLeftFirstMove;$/;"	m	class:NaoWalkingEngine
mLeftFlagsSee	WorldModel/worldmodel.h	/^	int             	mLeftFlagsSee;$/;"	m	class:WorldModel
mLocalLimb	WorldModel/player.h	/^	Limb mLocalLimb;$/;"	m	class:Player
mMax	Action/PIDController.h	/^	float mMax;$/;"	m	class:PIDController
mMin	Action/PIDController.h	/^	float mMin;$/;"	m	class:PIDController
mModelInit	Geometry/trajectory.h	/^    bool mModelInit;$/;"	m	class:Trajectory
mMoveAnkleMatrix	Geometry/trajectory.h	/^    salt::Matrix mMoveAnkleMatrix;$/;"	m	class:Trajectory
mMoveFootMatrix	Action/NaoWalkingEngine.h	/^    salt::Matrix        mMoveFootMatrix;$/;"	m	class:NaoWalkingEngine
mMoveFootMatrix	Geometry/trajectory.h	/^    salt::Matrix mMoveFootMatrix;$/;"	m	class:Trajectory
mName	WorldModel/player.h	/^	std::string mName;$/;"	m	class:Player
mObstacleVect	BehaviorControl/WalkPathPlanningControl.h	/^	vector<DebugObstacle> mObstacleVect;$/;"	m	class:DebugMsgParser
mOpp	WorldModel/worldmodel.h	/^	Player* mOpp[MAX_TEAM_SIZE];$/;"	m	class:WorldModel
mOppTeamNearestToBall	WorldModel/worldmodel.h	/^	Player*	mOppTeamNearestToBall;$/;"	m	class:WorldModel
mOppTeamNearestToGoalie	WorldModel/worldmodel.h	/^	Player* mOppTeamNearestToGoalie;$/;"	m	class:WorldModel
mOurTeamNearestToBall	WorldModel/worldmodel.h	/^	Player* mOurTeamNearestToBall;$/;"	m	class:WorldModel
mOurTeamSecondToBall	WorldModel/worldmodel.h	/^	Player* mOurTeamSecondToBall;$/;"	m	class:WorldModel
mOutput	Action/PIDController.h	/^	float mOutput; 		\/\/!mOutput = u(n)$/;"	m	class:PIDController
mOutput	WorldModel/convexhullmanager.h	/^		vector< vector<Vector3f> >	mOutput;$/;"	m	class:ConvexHullManager
mOutput_1	Action/PIDController.h	/^	float mOutput_1;	\/\/!mOutput = u(n-1)$/;"	m	class:PIDController
mParent	BehaviorControl/WalkPathPlanningControl.h	/^	WayPoint* mParent;$/;"	m	class:WayPoint
mParser	WorldModel/worldmodel.h	/^	Parser *mParser;\/\/Neil 2009.3$/;"	m	class:WorldModel
mPassed	BehaviorControl/WalkPathPlanningControl.h	/^	bool mPassed;$/;"	m	class:DebugWayPoint
mPathPlanningTest	BehaviorControl/WalkPathPlanningControl.h	/^  	PathPlanningTest mPathPlanningTest;$/;"	m	class:WalkPathPlanningControl
mPhase	Action/NaoDynamicKick.h	/^	TPhaseForKickLeft mPhase;$/;"	m	class:NaoDynamicKickEngine
mPhase	Action/NaoGetUp.h	/^	TPhaseForGetUp mPhase;$/;"	m	class:NaoGetupEngine
mPhase	Action/NaoKick.h	/^	TPhaseForKickLeft mPhase;$/;"	m	class:NaoKickEngine
mPhase	Action/NaoSpecialAction.h	/^	TPhaseForDivingSave mPhase;$/;"	m	class:NaoSpecialAction
mPhase	Action/NaoWalkingEngine.h	/^    TPhase              mPhase;$/;"	m	class:NaoWalkingEngine
mPhase	Action/Strive3DGetUp.h	/^	TPhaseForGetUp mPhase;$/;"	m	class:Strive3DGetupEngine
mPhase2	Action/NaoDynamicKick.h	/^	TPhaseForKcikRight mPhase2;$/;"	m	class:NaoDynamicKickEngine
mPhase2	Action/NaoGetUp.h	/^	TPhaseForGetUpFromBack mPhase2;$/;"	m	class:NaoGetupEngine
mPhase2	Action/NaoKick.h	/^	TPhaseForKcikRight mPhase2;$/;"	m	class:NaoKickEngine
mPhase2	Action/Strive3DGetUp.h	/^	TPhaseForGetUpFromBack mPhase2;$/;"	m	class:Strive3DGetupEngine
mPhase3	Action/NaoDynamicKick.h	/^	TPhaseForPass mPhase3;$/;"	m	class:NaoDynamicKickEngine
mPhase4	Action/NaoDynamicKick.h	/^	TPhaseForPassQuick mPhase4;$/;"	m	class:NaoDynamicKickEngine
mPhaseCycle	Action/NaoDynamicKick.h	/^    int                 mPhaseCycle;$/;"	m	class:NaoDynamicKickEngine
mPhaseCycle	Action/NaoGetUp.h	/^    int                 mPhaseCycle;$/;"	m	class:NaoGetupEngine
mPhaseCycle	Action/NaoKick.h	/^    int                 mPhaseCycle;$/;"	m	class:NaoKickEngine
mPhaseCycle	Action/NaoSpecialAction.h	/^    int                 mPhaseCycle;$/;"	m	class:NaoSpecialAction
mPhaseCycle	Action/NaoWalkingEngine.h	/^    int                 mPhaseCycle;$/;"	m	class:NaoWalkingEngine
mPhaseCycle	Action/Strive3DGetUp.h	/^    int                 mPhaseCycle;$/;"	m	class:Strive3DGetupEngine
mPhaseStartCycle	Action/NaoDynamicKick.h	/^    int                 mPhaseStartCycle;$/;"	m	class:NaoDynamicKickEngine
mPhaseStartCycle	Action/NaoGetUp.h	/^    int                 mPhaseStartCycle;$/;"	m	class:NaoGetupEngine
mPhaseStartCycle	Action/NaoKick.h	/^    int                 mPhaseStartCycle;$/;"	m	class:NaoKickEngine
mPhaseStartCycle	Action/NaoSpecialAction.h	/^    int                 mPhaseStartCycle;$/;"	m	class:NaoSpecialAction
mPhaseStartCycle	Action/NaoWalkingEngine.h	/^    int                 mPhaseStartCycle;$/;"	m	class:NaoWalkingEngine
mPhaseStartCycle	Action/Strive3DGetUp.h	/^    int                 mPhaseStartCycle;$/;"	m	class:Strive3DGetupEngine
mPhaseStartTime	Action/NaoDynamicKick.h	/^    double              mPhaseStartTime;$/;"	m	class:NaoDynamicKickEngine
mPhaseStartTime	Action/NaoGetUp.h	/^    double              mPhaseStartTime;$/;"	m	class:NaoGetupEngine
mPhaseStartTime	Action/NaoKick.h	/^    double              mPhaseStartTime;$/;"	m	class:NaoKickEngine
mPhaseStartTime	Action/NaoSpecialAction.h	/^    double              mPhaseStartTime;$/;"	m	class:NaoSpecialAction
mPhaseStartTime	Action/NaoWalkingEngine.h	/^    double              mPhaseStartTime;$/;"	m	class:NaoWalkingEngine
mPhaseStartTime	Action/Strive3DGetUp.h	/^    double              mPhaseStartTime;$/;"	m	class:Strive3DGetupEngine
mPhaseTime	Action/NaoDynamicKick.h	/^    double              mPhaseTime;$/;"	m	class:NaoDynamicKickEngine
mPhaseTime	Action/NaoGetUp.h	/^    double              mPhaseTime;$/;"	m	class:NaoGetupEngine
mPhaseTime	Action/NaoKick.h	/^    double              mPhaseTime;$/;"	m	class:NaoKickEngine
mPhaseTime	Action/NaoSpecialAction.h	/^    double              mPhaseTime;$/;"	m	class:NaoSpecialAction
mPhaseTime	Action/NaoWalkingEngine.h	/^    double              mPhaseTime;$/;"	m	class:NaoWalkingEngine
mPhaseTime	Action/Strive3DGetUp.h	/^    double              mPhaseTime;$/;"	m	class:Strive3DGetupEngine
mPlanes	salt/frustum.h	/^    Plane               mPlanes[6];$/;"	m	class:salt::Frustum
mPlayModeMap	WorldModel/fieldinfo.h	/^    TPlayModeMap mPlayModeMap;$/;"	m	class:FieldInfo
mPlayerNearestToBall	WorldModel/worldmodel.h	/^	Player* mPlayerNearestToBall;$/;"	m	class:WorldModel
mPointList	WorldModel/convexhull.h	/^		list<Vector3f> 		mPointList;$/;"	m	class:ConvexHull
mPort	Net/Net.h	/^	int mPort;$/;"	m	class:Net
mPos	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f mPos;$/;"	m	class:DebugObstacle
mPos	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f mPos;$/;"	m	class:DebugWayPoint
mPos	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f mPos;$/;"	m	class:WayPoint
mPrevVisionPerceptorMatrix	WorldModel/worldmodel.h	/^	salt::Matrix   	mVisionPerceptorMatrix, mPrevVisionPerceptorMatrix;$/;"	m	class:WorldModel
mPtrToXMax	WorldModel/convexhull.h	/^		list<Vector3f>::iterator 	mPtrToXMax;$/;"	m	class:ConvexHull
mPtrToXMin	WorldModel/convexhull.h	/^		list<Vector3f>::iterator 	mPtrToXMin;$/;"	m	class:ConvexHull
mPtrToYMax	WorldModel/convexhull.h	/^		list<Vector3f>::iterator 	mPtrToYMax;$/;"	m	class:ConvexHull
mPtrToYMin	WorldModel/convexhull.h	/^		list<Vector3f>::iterator 	mPtrToYMin;$/;"	m	class:ConvexHull
mRFCenter	WorldModel/self.h	/^    Vector3f              mRFCenter;$/;"	m	class:Self
mRFForce	WorldModel/self.h	/^    Vector3f              mRFForce;$/;"	m	class:Self
mRadius	BehaviorControl/WalkPathPlanningControl.h	/^	float mRadius;$/;"	m	class:DebugObstacle
mRight	salt/rect.h	/^    int mRight;$/;"	m	class:salt::Rect
mRightFlagsSee	WorldModel/worldmodel.h	/^	int            	 mRightFlagsSee;$/;"	m	class:WorldModel
mRobotCameraInfo	RobotModel/robot.h	/^    boost::shared_array<RobotPartInfo> mRobotCameraInfo;$/;"	m	class:Robot
mRobotCoM	WorldModel/self.h	/^    Vector3f              mRobotCoM;$/;"	m	class:Self
mRobotModel	WorldModel/self.h	/^    ERobotModel                 mRobotModel;$/;"	m	class:Self
mRobotPartInfo	RobotModel/robot.h	/^    boost::shared_array<RobotPartInfo> mRobotPartInfo;$/;"	m	class:Robot
mRoleForward1	WorldModel/worldmodel.h	/^	Player* mRoleForward1;$/;"	m	class:WorldModel
mRoleForward2	WorldModel/worldmodel.h	/^	Player* mRoleForward2;$/;"	m	class:WorldModel
mSafeArea	WorldModel/player.h	/^	vector<Vector3f> mSafeArea;$/;"	m	class:Player
mSafeConvexHullManager	WorldModel/worldmodel.h	/^	ConvexHullManager mSafeConvexHullManager;$/;"	m	class:WorldModel
mSelf	Parser/Parser.h	/^	boost::shared_ptr<Self>    mSelf;$/;"	m	class:Parser
mSelf	WorldModel/worldmodel.h	/^	Self *mSelf;$/;"	m	class:WorldModel
mSimTime	WorldModel/worldmodel.h	/^	float           	mSimTime;$/;"	m	class:WorldModel
mSlowGain	Action/NaoWalkingEngine.h	/^    float               mSlowGain;$/;"	m	class:NaoWalkingEngine
mSocket	Net/Net.h	/^	TCPSocket mSocket;$/;"	m	class:Net
mSplineKickFootRx	Action/NaoDynamicKick.h	/^	Spline				mSplineKickFootRx;$/;"	m	class:NaoDynamicKickEngine
mSplineKickFootRy	Action/NaoDynamicKick.h	/^	Spline				mSplineKickFootRy;$/;"	m	class:NaoDynamicKickEngine
mSplineKickFootRz	Action/NaoDynamicKick.h	/^	Spline				mSplineKickFootRz;$/;"	m	class:NaoDynamicKickEngine
mSplineKickFootX	Action/NaoDynamicKick.h	/^	Spline				mSplineKickFootX;$/;"	m	class:NaoDynamicKickEngine
mSplineKickFootY	Action/NaoDynamicKick.h	/^	Spline				mSplineKickFootY;$/;"	m	class:NaoDynamicKickEngine
mSplineKickFootZ	Action/NaoDynamicKick.h	/^	Spline				mSplineKickFootZ;$/;"	m	class:NaoDynamicKickEngine
mSplineTorsorRx	Action/NaoDynamicKick.h	/^	Spline				mSplineTorsorRx;$/;"	m	class:NaoDynamicKickEngine
mSplineTorsorRy	Action/NaoDynamicKick.h	/^	Spline				mSplineTorsorRy;$/;"	m	class:NaoDynamicKickEngine
mSplineTorsorRz	Action/NaoDynamicKick.h	/^	Spline				mSplineTorsorRz;$/;"	m	class:NaoDynamicKickEngine
mSplineTorsorX	Action/NaoDynamicKick.h	/^	Spline				mSplineTorsorX;$/;"	m	class:NaoDynamicKickEngine
mSplineTorsorY	Action/NaoDynamicKick.h	/^	Spline				mSplineTorsorY;$/;"	m	class:NaoDynamicKickEngine
mSplineTorsorZ	Action/NaoDynamicKick.h	/^	Spline				mSplineTorsorZ;$/;"	m	class:NaoDynamicKickEngine
mState	WorldModel/player.h	/^	PlayerState mState;$/;"	m	class:Player
mSteadyParam	Action/NaoWalkingEngine.h	/^    float               mSteadyParam;$/;"	m	class:NaoWalkingEngine
mTimeNotRefresh	WorldModel/dynamicobject.h	/^	int mTimeNotRefresh;$/;"	m	class:DynamicObject
mTimeNotRefresh	WorldModel/player.h	/^	int mTimeNotRefresh;$/;"	m	class:Player
mTmm	WorldModel/worldmodel.h	/^	Player* mTmm[MAX_TEAM_SIZE];$/;"	m	class:WorldModel
mTmpPosVect	BehaviorControl/NaoBehaviorControl.h	/^    std::vector<salt::Vector2f> mTmpPosVect;$/;"	m	class:NaoBehaviorControl
mTmpPosVect	BehaviorControl/Strive3DBehaviorControl.h	/^	std::vector<salt::Vector2f> mTmpPosVect;$/;"	m	class:Strive3DBehaviorControl
mTop	salt/rect.h	/^    int mTop;$/;"	m	class:salt::Rect
mTorsoMatrix	Action/NaoWalkingEngine.h	/^    salt::Matrix        mTorsoMatrix;$/;"	m	class:NaoWalkingEngine
mTorsoMatrix	Geometry/trajectory.h	/^    salt::Matrix mTorsoMatrix;$/;"	m	class:Trajectory
mTorsoPitchAngle	WorldModel/self.h	/^    float mTorsoPitchAngle;$/;"	m	class:Self
mTorsoPitchAngleByGyro	WorldModel/self.h	/^    float mTorsoPitchAngleByGyro;$/;"	m	class:Self
mTorsoRollAngle	WorldModel/self.h	/^    float mTorsoRollAngle;$/;"	m	class:Self
mTorsoRollAngleByGyro	WorldModel/self.h	/^    float mTorsoRollAngleByGyro;$/;"	m	class:Self
mTorsoYawAngle	WorldModel/self.h	/^    float mTorsoYawAngle;$/;"	m	class:Self
mTorsoYawAngleByGyro	WorldModel/self.h	/^    float mTorsoYawAngleByGyro;$/;"	m	class:Self
mTotalStep	Action/NaoWalkingEngine.h	/^    int                 mTotalStep;$/;"	m	class:NaoWalkingEngine
mTurnAngle	Geometry/trajectory.h	/^    float mTurnAngle;$/;"	m	class:Trajectory
mUniversalJointSenseMap	RobotModel/robot.h	/^    TUniversalJointSenseMap mUniversalJointSenseMap;$/;"	m	class:Robot
mUnum	WorldModel/player.h	/^	int mUnum;$/;"	m	class:Player
mVisionObjectMap	WorldModel/worldmodel.h	/^	TVisionObjectMap mVisionObjectMap;$/;"	m	class:WorldModel
mVisionOn	WorldModel/worldmodel.h	/^	bool			mVisionOn;$/;"	m	class:WorldModel
mVisionPerceptorMatrix	WorldModel/worldmodel.h	/^	salt::Matrix   	mVisionPerceptorMatrix, mPrevVisionPerceptorMatrix;$/;"	m	class:WorldModel
mVisionSenseMap	WorldModel/worldmodel.h	/^	TVisionSenseMap mVisionSenseMap;$/;"	m	class:WorldModel
mVisitedWayPoints	BehaviorControl/WalkPathPlanningControl.h	/^	vector<WayPoint*> mVisitedWayPoints;$/;"	m	class:PathPlanningTest
mWalkingSlowGain	Action/NaoWalkingEngine.h	/^    float               mWalkingSlowGain;$/;"	m	class:NaoWalkingEngine
mWayPointQueue	BehaviorControl/WalkPathPlanningControl.h	/^	queue<WayPoint*> mWayPointQueue;$/;"	m	class:PathPlanningTest
mWayPointType	BehaviorControl/WalkPathPlanningControl.h	/^	WayPointType mWayPointType;$/;"	m	class:WayPoint
mWayPointVect	BehaviorControl/WalkPathPlanningControl.h	/^	vector<DebugWayPoint> mWayPointVect;$/;"	m	class:DebugMsgParser
m_WSAData	Net/handler.hpp	/^			WSADATA m_WSAData;$/;"	m	class:rcss::net::Handler
m_addr	Net/addr.cpp	/^			Addr::AddrType m_addr;$/;"	m	class:rcss::net::AddrImpl	file:
m_bufsize	Net/socketstreambuf.hpp	/^            std::streamsize m_bufsize;$/;"	m	class:rcss::net::SocketStreamBuf
m_connect	Net/socketstreambuf.hpp	/^            ConnType m_connect;$/;"	m	class:rcss::net::SocketStreamBuf
m_end_point	Net/socketstreambuf.hpp	/^            Addr m_end_point;$/;"	m	class:rcss::net::SocketStreamBuf
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::AcceptErr
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::BindErr
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::ConnectErr
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::GetNameErr
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::HostNotFound
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::ListenErr
m_err	Net/exception.hpp	/^            int m_err;$/;"	m	class:rcss::net::OpenErr
m_errno	Net/addr.cpp	/^            int m_errno;$/;"	m	class:rcss::net::AddrImpl	file:
m_error	Net/addr.cpp	/^            Addr::Error m_error;$/;"	m	class:rcss::net::AddrImpl	file:
m_file	AdvancedAgent/PathPlanning.h	/^	fstream m_file;\/\/used in matlab$/;"	m	class:PathPlanning
m_handle	Net/socket.hpp	/^            boost::shared_ptr< SocketDesc > m_handle;$/;"	m	class:rcss::net::Socket
m_handler	Net/addr.cpp	/^			Handler& m_handler;$/;"	m	class:rcss::net::AddrImpl	file:
m_handler	Net/socket.hpp	/^                        Handler* m_handler;$/;"	m	class:rcss::net::Socket
m_host_name	Net/addr.cpp	/^            mutable std::string m_host_name;$/;"	m	class:rcss::net::AddrImpl	file:
m_impl	Net/addr.hpp	/^            boost::shared_ptr< AddrImpl > m_impl;$/;"	m	class:rcss::net::Addr
m_inbuf	Net/socketstreambuf.hpp	/^            char_type* m_inbuf;$/;"	m	class:rcss::net::SocketStreamBuf
m_matrix	Geometry/MatrixSpline.h	/^    float* m_matrix[12];$/;"	m	class:MatrixSpline
m_n	Geometry/MatrixSpline.h	/^    int m_n;$/;"	m	class:MatrixSpline
m_n	Geometry/spline.h	/^    int m_n;$/;"	m	class:Spline
m_outbuf	Net/socketstreambuf.hpp	/^            char_type* m_outbuf;$/;"	m	class:rcss::net::SocketStreamBuf
m_port_name	Net/addr.cpp	/^            mutable std::string m_port_name;$/;"	m	class:rcss::net::AddrImpl	file:
m_remained	Net/socketstreambuf.hpp	/^            int m_remained;$/;"	m	class:rcss::net::SocketStreamBuf
m_remained_char	Net/socketstreambuf.hpp	/^            char_type m_remained_char;$/;"	m	class:rcss::net::SocketStreamBuf
m_socket	Net/socketstreambuf.hpp	/^            Socket& m_socket;$/;"	m	class:rcss::net::SocketStreamBuf
m_spline	Geometry/MatrixSpline.h	/^    Spline m_spline[12];$/;"	m	class:MatrixSpline
m_valid	Net/handler.hpp	/^            bool m_valid;$/;"	m	class:rcss::net::Handler
m_x	Geometry/MatrixSpline.h	/^    float* m_x;$/;"	m	class:MatrixSpline
m_x	Geometry/spline.h	/^    float* m_x;$/;"	m	class:Spline
m_y	Geometry/spline.h	/^    float* m_y;$/;"	m	class:Spline
m_y2	Geometry/spline.h	/^    float* m_y2;$/;"	m	class:Spline
m_yp1	Geometry/MatrixSpline.h	/^    float m_yp1;$/;"	m	class:MatrixSpline
m_yp1	Geometry/spline.h	/^    float m_yp1;$/;"	m	class:Spline
m_ypn	Geometry/MatrixSpline.h	/^    float m_ypn;$/;"	m	class:MatrixSpline
m_ypn	Geometry/spline.h	/^    float m_ypn;$/;"	m	class:Spline
main	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	one_build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	one_build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	strive3d.cpp	/^int main ( int argc, char* argv[] )$/;"	f
make_stack	Parser/faststack.c	/^make_stack ()$/;"	f
malloc	Parser/malloc_util.c	16;"	d	file:
malloc	Parser/malloc_util.h	27;"	d
man	Utilities/Logger.cpp	/^LogStream &LogStream::operator<<(ios_base &(*man)(ios_base &))$/;"	f	class:LogStream
man	Utilities/Logger.cpp	/^LogStream &LogStream::operator<<(ostream &(*man)(ostream &))$/;"	f	class:LogStream
massFactor	AdvancedAgent/PathPlanning.h	/^	float massFactor;$/;"	m	class:PathPlanning
matchPlan	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::matchPlan()$/;"	f	class:AdvancedAgent
matchSimCycleMax	AdvancedAgent/PathPlanning.h	/^	int matchSimCycleMax;$/;"	m	class:PathPlanning
match_time	WorldModel/fieldinfo.h	/^    float match_time;$/;"	m	class:FieldInfo
max	Utilities/Range.h	/^    T min,max;                    \/**< The limits of the range. *\/$/;"	m	class:Range
maxNumberOfPoints	HeadControl/HeadPathPlanner.h	/^    enum {maxNumberOfPoints = 20};$/;"	e	enum:HeadPathPlanner::__anon2
maxRunTime	Module/ModuleSelector.h	/^  unsigned long maxRunTime;$/;"	m	class:ModuleSelector
maxVec	salt/bounds.h	/^    Vector2f                maxVec;$/;"	m	class:salt::AABB2
maxVec	salt/bounds.h	/^    Vector3f                maxVec;$/;"	m	class:salt::AABB3
max_time	Trainer_Client/common.h	/^	double max_time;$/;"	m	struct:state
meets	Utilities/Range.h	/^    bool meets(const Range<T>& r) const {return max == r.min;}$/;"	f	class:Range
message	Xabsl/XabslTools.cpp	/^void ErrorHandler::message(const char* format, ...)$/;"	f	class:xabsl::ErrorHandler
message	types.h	/^    std::string		message;$/;"	m	struct:HearInfo
messageBuffer	Xabsl/XabslTools.h	/^  char messageBuffer[300];$/;"	m	class:xabsl::ErrorHandler
metBy	Utilities/Range.h	/^    bool metBy(const Range<T>& r) const {return min == r.max;}$/;"	f	class:Range
min	Utilities/Range.h	/^    T min,max;                    \/**< The limits of the range. *\/$/;"	m	class:Range
minHeadSpeed	HeadControl/NaoHeadControl.h	/^    enum {minHeadSpeed=2};$/;"	e	enum:NaoHeadControl::__anon1
minRunTime	Module/ModuleSelector.h	/^  unsigned long minRunTime;$/;"	m	class:ModuleSelector
minVec	salt/bounds.h	/^    Vector2f                minVec;$/;"	m	class:salt::AABB2
minVec	salt/bounds.h	/^    Vector3f                minVec;$/;"	m	class:salt::AABB3
min_time	Trainer_Client/common.h	/^	double min_time;$/;"	m	struct:state
minimumHeadSpeed	HeadControl/HeadPathPlanner.cpp	/^const float HeadPathPlanner::minimumHeadSpeed=180.0;\/\/degree\/s,just a test by Neil;$/;"	m	class:HeadPathPlanner	file:
minimumHeadSpeed	HeadControl/HeadPathPlanner.h	/^    static const float minimumHeadSpeed;$/;"	m	class:HeadPathPlanner
mode	Parser/sexp.h	/^  parsermode_t mode;$/;"	m	struct:pcont
module	Xabsl/XabslEngineExecutor.h	/^  SolutionRequest::ModuleID module;$/;"	m	class:XabslEngineExecutor
moduleHandler	Action/ActionSelector.h	/^  ModuleHandler& moduleHandler;$/;"	m	class:ActionControlSelector
moduleHandler	Action/NaoActionControl.h	/^    ModuleHandler& moduleHandler;$/;"	m	class:NaoActionControl
moduleHandler	BaseAgent.h	/^ 	ModuleHandler moduleHandler;$/;"	m	class:BaseAgent
moduleHandler	BehaviorControl/BehaviorControlSelector.h	/^  ModuleHandler& moduleHandler;$/;"	m	class:BehaviorControlSelector
moduleHandler	BehaviorControl/NaoBehaviorControl.h	/^    ModuleHandler& moduleHandler;$/;"	m	class:NaoBehaviorControl
moduleHandler	BehaviorControl/Strive3DBehaviorControl.h	/^  	ModuleHandler& moduleHandler;$/;"	m	class:Strive3DBehaviorControl
moduleHandler	BehaviorControl/WalkPathPlanningControl.h	/^  	ModuleHandler& moduleHandler;$/;"	m	class:WalkPathPlanningControl
moduleHandler	HeadControl/HeadControlSelector.h	/^  	ModuleHandler& moduleHandler;$/;"	m	class:HeadControlSelector
moduleHandler	HeadControl/NaoHeadControl.h	/^    ModuleHandler& moduleHandler;$/;"	m	class:NaoHeadControl
moduleID	Module/ModuleSelector.h	/^  SolutionRequest::ModuleID moduleID;$/;"	m	class:ModuleSelector
mother	RobotModel/robot.h	/^        int mother;$/;"	m	struct:Robot::Link
mySpeedMax	AdvancedAgent/PathPlanning.h	/^	float mySpeedMax;$/;"	m	class:PathPlanning
n	Xabsl/XabslArray.h	/^  char* n;$/;"	m	class:xabsl::NamedItem
name	AdvancedAgent/Plan.h	/^	std::string name;$/;"	m	class:Plan
name	RobotModel/robot.h	/^        std::string     name;$/;"	m	struct:Robot::RobotPartInfo
name	RobotModel/robot.h	/^        std::string name;$/;"	m	struct:Robot::Link
name	Trainer_Client/common.h	/^	std::string name;$/;"	m	struct:action
nao	Module/SolutionRequest.h	/^        nao,$/;"	e	enum:SolutionRequest::xabslEngineID
naoActionControl	Module/SolutionRequest.h	/^        naoActionControl,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoBehaviorControl	Module/SolutionRequest.h	/^        naoBehaviorControl,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoDynamicKickEngine	Module/SolutionRequest.h	/^		naoDynamicKickEngine,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoGetupEngine	Module/SolutionRequest.h	/^        naoGetupEngine,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoHeadControl	Module/SolutionRequest.h	/^        naoHeadControl,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoKickEngine	Module/SolutionRequest.h	/^        naoKickEngine,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoSpecialAction	Module/SolutionRequest.h	/^        naoSpecialAction,$/;"	e	enum:SolutionRequest::ModuleSolutionID
naoWalkingEngine	Module/SolutionRequest.h	/^        naoWalkingEngine,$/;"	e	enum:SolutionRequest::ModuleSolutionID
nao_headControl	Module/SolutionRequest.h	/^        nao_headControl,$/;"	e	enum:SolutionRequest::xabslEngineID
nearestValidOpp	AdvancedAgent/PathPlanning.h	/^	int nearestValidOpp;$/;"	m	class:PathPlanning
needVirtualDestPos	AdvancedAgent/PathPlanning.h	/^	bool needVirtualDestPos;$/;"	m	class:PathPlanning
net	Net/addr.cpp	/^    namespace net$/;"	n	namespace:rcss	file:
net	Net/addr.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/exception.cpp	/^    namespace net$/;"	n	namespace:rcss	file:
net	Net/exception.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/handler.cpp	/^	namespace net$/;"	n	namespace:rcss	file:
net	Net/handler.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/iosocketstream.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/isocketstream.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/osocketstream.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/socket.cpp	/^    namespace net$/;"	n	namespace:rcss	file:
net	Net/socket.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/socketstreambuf.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/tcpsocket.cpp	/^    namespace net$/;"	n	namespace:rcss	file:
net	Net/tcpsocket.hpp	/^    namespace net$/;"	n	namespace:rcss
net	Net/udpsocket.cpp	/^    namespace net$/;"	n	namespace:rcss	file:
net	Net/udpsocket.hpp	/^    namespace net$/;"	n	namespace:rcss
nets	Net/Net.h	/^	map<string, Net*>nets;$/;"	m	class:NetManager
newCycle	Utilities/Logger.cpp	/^void LogStream::newCycle()$/;"	f	class:LogStream
newCycle	Utilities/Logger.cpp	/^void LogStream::newCycle(long cycle) \/\/Start to log a new cycle, print the current cycle at the first line of this cycle's log$/;"	f	class:LogStream
new_sexp_atom	Parser/sexp.c	/^sexp_t *new_sexp_atom(char *buf, int bs) {$/;"	f
new_sexp_list	Parser/sexp.c	/^sexp_t *new_sexp_list(sexp_t *l) {$/;"	f
newgoliestatejudge	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::newgoliestatejudge()$/;"	f	class:Strive3DBehaviorControl
next	Parser/sexp.h	/^  struct elt *next;$/;"	m	struct:elt	typeref:struct:elt::elt
nextState	Xabsl/XabslStatement.h	/^  State* nextState;$/;"	m	class:xabsl::TransitionToState
next_sexp	Parser/sexp_ops.h	64;"	d
nobehavior	BehaviorControl/Strive3DBehaviorControl.h	/^		nobehavior$/;"	e	enum:Strive3DBehaviorControl::DefenceState
none	HeadControl/HeadControlMode.h	/^        none,$/;"	e	enum:HeadControlMode::HeadControlModes
normal	Action/ActionRequest.h	/^        normal,$/;"	e	enum:WalkRequest::WalkType
normal	salt/plane.h	/^    Vector3f    normal;$/;"	m	class:salt::Plane
now	Utilities/Logger.cpp	/^long OnlineTimer::now() const$/;"	f	class:OnlineTimer
now	Utilities/Logger.cpp	/^long VirtualTimer::now() const$/;"	f	class:VirtualTimer
nowTime	Utilities/Logger.h	/^		time_t nowTime;$/;"	m	class:Timer
now_string	Utilities/Logger.cpp	/^std::string OnlineTimer::now_string() const$/;"	f	class:OnlineTimer
numOfAction	Action/ActionRequest.h	/^        numOfAction$/;"	e	enum:ActionRequest::ActionID
numOfActionControlSolutions	Module/SolutionRequest.h	/^        numOfActionControlSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfBehaviorControlSolutions	Module/SolutionRequest.h	/^        numOfBehaviorControlSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfGetupEngineSolutions	Module/SolutionRequest.h	/^        numOfGetupEngineSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfHeadControlModes	HeadControl/HeadControlMode.h	/^        numOfHeadControlModes$/;"	e	enum:HeadControlMode::HeadControlModes
numOfHeadControlSolutions	Module/SolutionRequest.h	/^        numOfHeadControlSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfHeadMotion	HeadControl/HeadMotionRequest.h	/^		numOfHeadMotion$/;"	e	enum:HeadMotionRequest::HeadMotionID
numOfKickEngineSolutions	Module/SolutionRequest.h	/^        numOfKickEngineSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfModules	Module/SolutionRequest.h	/^        numOfModules \/*!< Number of exchangeable modules *\/$/;"	e	enum:SolutionRequest::ModuleID
numOfSpecialAction	Action/ActionRequest.h	/^        numOfSpecialAction$/;"	e	enum:SpecialActionRequest::SpecialActionID
numOfSpecialActionSolutions	Module/SolutionRequest.h	/^        numOfSpecialActionSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfWalkType	Action/ActionRequest.h	/^        numOfWalkType$/;"	e	enum:WalkRequest::WalkType
numOfWalkingEngineSolutions	Module/SolutionRequest.h	/^        numOfWalkingEngineSolutions,$/;"	e	enum:SolutionRequest::ModuleSolutionID
numOfXabslBehaviors	Module/SolutionRequest.h	/^        numOfXabslBehaviors,$/;"	e	enum:SolutionRequest::xabslEngineID
numberOfFrames	HeadControl/HeadPathPlanner.h	/^    long numberOfFrames;$/;"	m	class:HeadPathPlanner
numberOfPoints	HeadControl/HeadPathPlanner.h	/^    long numberOfPoints;$/;"	m	class:HeadPathPlanner
oLOG	Utilities/Logger.h	51;"	d
obstacleVect	BehaviorControl/WalkPathPlanningControl.h	/^	vector<DebugObstacle>& obstacleVect(){return mObstacleVect;}$/;"	f	class:DebugMsgParser
oldInit	HeadControl/HeadPathPlanner.h	/^    void oldInit(const Vector3f* vectors=0,int numberOfVectors=0, long duration=0)$/;"	f	class:HeadPathPlanner
onMyBelly	WorldModel/self.cpp	/^bool Self::onMyBelly()$/;"	f	class:Self
onMySide	WorldModel/self.cpp	/^bool Self::onMySide()$/;"	f	class:Self
onMyback	WorldModel/self.cpp	/^bool Self::onMyback()$/;"	f	class:Self
onMyfeet	WorldModel/self.cpp	/^bool Self::onMyfeet()$/;"	f	class:Self
open	Net/socket.cpp	/^        Socket::open()$/;"	f	class:rcss::net::Socket
open	Xabsl/XabslEngineExecutor.cpp	/^bool MyXabslFileInputSource::open()$/;"	f	class:MyXabslFileInputSource
operand1	Xabsl/XabslBooleanExpression.h	/^  BooleanExpression* operand1;$/;"	m	class:xabsl::NotOperator
operand1	Xabsl/XabslBooleanExpression.h	/^  DecimalExpression* operand1;$/;"	m	class:xabsl::RelationalAndEqualityOperator
operand1	Xabsl/XabslBooleanExpression.h	/^  const EnumeratedExpression* operand1;$/;"	m	class:xabsl::EnumeratedInputSymbolComparison
operand1	Xabsl/XabslDecimalExpression.h	/^  DecimalExpression* operand1;$/;"	m	class:xabsl::ArithmeticOperator
operand2	Xabsl/XabslBooleanExpression.h	/^  DecimalExpression* operand2;$/;"	m	class:xabsl::RelationalAndEqualityOperator
operand2	Xabsl/XabslBooleanExpression.h	/^  const EnumeratedExpression* operand2;$/;"	m	class:xabsl::EnumeratedInputSymbolComparison
operand2	Xabsl/XabslDecimalExpression.h	/^  DecimalExpression* operand2;$/;"	m	class:xabsl::ArithmeticOperator
operands	Xabsl/XabslBooleanExpression.h	/^  Array<BooleanExpression*> operands;$/;"	m	class:xabsl::AndOperator
operands	Xabsl/XabslBooleanExpression.h	/^  Array<BooleanExpression*> operands;$/;"	m	class:xabsl::OrOperator
operator !=	Module/SolutionRequest.h	/^    bool operator != (const SolutionRequest& other)$/;"	f	class:SolutionRequest
operator !=	Net/addr.cpp	/^        operator!=( const Addr& a,$/;"	f	namespace:rcss::net
operator !=	salt/rect.h	/^    f_inline bool           operator!=(const Rect &inRHS) const                                                     { return (mLeft!=inRHS.Left()) || (mTop!=inRHS.Top()) || (mRight!=inRHS.Right()) || (mBottom!=inRHS.Bottom()); }$/;"	f	class:salt::Rect
operator !=	salt/tvector.h	/^f_inline bool TVector<DATATYPE, ELEMENTS, TYPE>::operator!=(const TYPE& v) const$/;"	f	class:salt::TVector
operator ()	salt/matrix.h	/^    f_inline const float& operator() (int inRow, int inColumn) const {  return El(inRow, inColumn);     }$/;"	f	class:salt::Matrix
operator ()	salt/matrix.h	/^    f_inline float& operator() (int inRow, int inColumn) {      return El(inRow, inColumn);     }$/;"	f	class:salt::Matrix
operator *	salt/matrix.h	/^f_inline const Matrix Matrix::operator*(const Matrix & inRHS) const$/;"	f	class:salt::Matrix
operator *	salt/matrix.h	/^f_inline const Vector3f Matrix::operator*(const Vector2f &inRHS) const$/;"	f	class:salt::Matrix
operator *	salt/matrix.h	/^f_inline const Vector3f Matrix::operator*(const Vector3f &inRHS) const$/;"	f	class:salt::Matrix
operator *	salt/tvector.h	/^f_inline const TYPE TVector<DATATYPE, ELEMENTS, TYPE>::operator*(const DATATYPE& v) const$/;"	f	class:salt::TVector
operator *	salt/tvector.h	/^f_inline const TYPE operator*(const DATATYPE& f, const TVector<DATATYPE, ELEMENTS, TYPE>& vec)$/;"	f	namespace:salt
operator *=	salt/matrix.h	/^f_inline const Matrix & Matrix::operator*=(const Matrix &inRHS)$/;"	f	class:salt::Matrix
operator *=	salt/tvector.h	/^f_inline TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::operator*=(const DATATYPE& v)$/;"	f	class:salt::TVector
operator +	salt/tvector.h	/^f_inline const TYPE TVector<DATATYPE, ELEMENTS, TYPE>::operator+(const TYPE& v) const$/;"	f	class:salt::TVector
operator +=	salt/tvector.h	/^f_inline TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::operator+=(const TYPE& v)$/;"	f	class:salt::TVector
operator -	salt/tvector.h	/^f_inline TYPE TVector<DATATYPE, ELEMENTS, TYPE>::operator-() const$/;"	f	class:salt::TVector
operator -	salt/tvector.h	/^f_inline const TYPE TVector<DATATYPE, ELEMENTS, TYPE>::operator-(const TYPE& v) const$/;"	f	class:salt::TVector
operator -=	salt/tvector.h	/^f_inline TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::operator-=(const TYPE& v)$/;"	f	class:salt::TVector
operator /	salt/tvector.h	/^f_inline const TYPE TVector<DATATYPE, ELEMENTS, TYPE>::operator\/(const DATATYPE& v) const$/;"	f	class:salt::TVector
operator /=	salt/tvector.h	/^f_inline TYPE& TVector<DATATYPE, ELEMENTS, TYPE>::operator\/=(const DATATYPE& v)$/;"	f	class:salt::TVector
operator <	Net/addr.cpp	/^        operator < ( const Addr& a,$/;"	f	namespace:rcss::net
operator <	Utilities/Range.h	/^    bool operator<(const Range<T>& r) const {return max < r.min;}$/;"	f	class:Range
operator <<	Net/addr.cpp	/^        operator<<( std::ostream& o, const rcss::net::Addr& addr )$/;"	f	namespace:rcss::net
operator <<	Utilities/Logger.h	/^	LogStream &operator<<(const T &value)$/;"	f	class:LogStream
operator <<	salt/matrix.h	/^f_inline std::ostream& operator <<(std::ostream& ost, const Matrix& mat)$/;"	f	namespace:salt
operator <<	salt/tvector.h	/^std::ostream& operator <<(std::ostream& ost, const TVector<DATATYPE,ELEMENTS,TYPE>& v)$/;"	f	namespace:salt
operator =	Action/ActionRequest.cpp	/^void ActionRequest::operator = (const ActionRequest& other)$/;"	f	class:ActionRequest
operator =	HeadControl/HeadMotionRequest.cpp	/^void HeadMotionRequest::operator = (const HeadMotionRequest& other)$/;"	f	class:HeadMotionRequest
operator =	salt/plane.h	/^    f_inline const Plane&       operator=(const Plane& p)$/;"	f	class:salt::Plane
operator =	salt/rect.h	/^    f_inline Rect&          operator=(const Rect &inOther)                                                          { mLeft=inOther.Left(); mTop=inOther.Top();     mRight=inOther.Right(); mBottom=inOther.Bottom(); return *this; }$/;"	f	class:salt::Rect
operator ==	Action/ActionRequest.h	/^    bool operator==(const ActionRequest& other) const$/;"	f	class:ActionRequest
operator ==	HeadControl/HeadMotionRequest.h	/^	bool operator==(const HeadMotionRequest& other) const$/;"	f	class:HeadMotionRequest
operator ==	Module/SolutionRequest.cpp	/^bool SolutionRequest::operator == (const SolutionRequest& other)$/;"	f	class:SolutionRequest
operator ==	Net/addr.cpp	/^        operator==( const Addr& a,$/;"	f	namespace:rcss::net
operator ==	Utilities/Range.h	/^    bool operator==(const Range<T>& r) const {return min == r.min && max == r.max;}$/;"	f	class:Range
operator ==	salt/rect.h	/^    f_inline bool           operator==(const Rect &inRHS) const                                                     { return (mLeft==inRHS.Left()) && (mTop==inRHS.Top()) && (mRight==inRHS.Right()) && (mBottom==inRHS.Bottom()); }$/;"	f	class:salt::Rect
operator ==	salt/tvector.h	/^f_inline bool TVector<DATATYPE, ELEMENTS, TYPE>::operator==(const TYPE& v) const$/;"	f	class:salt::TVector
operator >	Utilities/Range.h	/^    bool operator>(const Range<T>& r) const {return min > r.max;}$/;"	f	class:Range
operator Array<const T>&	Xabsl/XabslArray.h	/^    operator Array<const T>&() {return this;}$/;"	f	class:xabsl::Array
operator []	Utilities/Logger.cpp	/^LogStream &Logger::LogStreams::operator[](const string &name) const$/;"	f	class:Logger::LogStreams
operator []	Utilities/Logger.cpp	/^LogStream &Logger::operator[](const string &name) const$/;"	f	class:Logger
operator []	Xabsl/XabslArray.h	/^    T operator[](const char* name) const$/;"	f	class:xabsl::Array
operator []	Xabsl/XabslArray.h	/^    T operator[](int pos) const$/;"	f	class:xabsl::Array
operator []	salt/tvector.h	/^    f_inline DATATYPE& operator[](int row)$/;"	f	class:salt::TVector
operator []	salt/tvector.h	/^    f_inline const DATATYPE& operator[](int row) const$/;"	f	class:salt::TVector
oppDistFactor	AdvancedAgent/PathPlanning.h	/^	float oppDistFactor;$/;"	m	class:PathPlanning
oppForceIndex	AdvancedAgent/PathPlanning.h	/^	float oppForceIndex;$/;"	m	class:PathPlanning
oppNum	AdvancedAgent/PathPlanning.h	/^	int oppNum;$/;"	m	class:PathPlanning
oppSize	AdvancedAgent/PathPlanning.h	/^	float oppSize;$/;"	m	class:PathPlanning
opp_teamname	WorldModel/fieldinfo.h	/^    std::string opp_teamname;$/;"	m	class:FieldInfo
oppdribbling	BehaviorControl/Strive3DBehaviorControl.h	/^		oppdribbling = 2,$/;"	e	enum:Strive3DBehaviorControl::DefenceState
oppgoalcenter	WorldModel/fieldinfo.h	/^    salt::Vector3f oppgoalcenter;$/;"	m	class:FieldInfo
oppgoalcenterlocal	WorldModel/fieldinfo.h	/^    salt::Vector3f oppgoalcenterlocal;$/;"	m	class:FieldInfo
oppleftgoallocal	WorldModel/fieldinfo.h	/^    salt::Vector3f oppleftgoallocal;$/;"	m	class:FieldInfo
oppoppreadyforshoot	BehaviorControl/Strive3DBehaviorControl.h	/^		oppoppreadyforshoot =1,$/;"	e	enum:Strive3DBehaviorControl::DefenceState
opprightgoallocal	WorldModel/fieldinfo.h	/^    salt::Vector3f opprightgoallocal;$/;"	m	class:FieldInfo
oppshooting	BehaviorControl/Strive3DBehaviorControl.h	/^		oppshooting = 0,$/;"	e	enum:Strive3DBehaviorControl::DefenceState
option	Xabsl/XabslAction.h	/^  Option* option;$/;"	m	class:xabsl::ActionOption
options	Xabsl/XabslEngine.h	/^  Array<Option*> options;$/;"	m	class:xabsl::Engine
other_modes	HeadControl/NaoHeadControl.h	/^        other_modes ,$/;"	e	enum:NaoHeadControl::HeadControlState
ourGoal	AdvancedAgent/GoaliePlan.h	/^		Vector2f ourGoal;$/;"	m	class:GoaliePlan
ourGoal2Ball	AdvancedAgent/GoaliePlan.h	/^		Vector2f ourGoal2Ball;$/;"	m	class:GoaliePlan
our_teamname	WorldModel/fieldinfo.h	/^    std::string our_teamname;$/;"	m	class:FieldInfo
ourgoalcenter	WorldModel/fieldinfo.h	/^    salt::Vector3f ourgoalcenter;$/;"	m	class:FieldInfo
ourgoalcenterlocal	WorldModel/fieldinfo.h	/^    salt::Vector3f ourgoalcenterlocal;$/;"	m	class:FieldInfo
ourleftgoallocal	WorldModel/fieldinfo.h	/^    salt::Vector3f ourleftgoallocal;$/;"	m	class:FieldInfo
ourrightgoallocal	WorldModel/fieldinfo.h	/^    salt::Vector3f ourrightgoallocal;$/;"	m	class:FieldInfo
out	Utilities/Logger.h	/^	std::ostream *out;$/;"	m	class:LogStream
overflow	Net/socketstreambuf.hpp	/^            overflow( int_type c = EOF )$/;"	f	class:rcss::net::SocketStreamBuf
overlappedBy	Utilities/Range.h	/^    bool overlappedBy(const Range<T>& r) const {return min > r.min && max > r.max && min < r.max;}$/;"	f	class:Range
overlaps	Utilities/Range.h	/^    bool overlaps(const Range<T>& r) const {return min < r.min && max < r.max && max > r.min;}$/;"	f	class:Range
oxygen	RobotModel/robot.h	/^namespace oxygen {$/;"	n
p	RobotModel/robot.h	/^        salt::Vector3f  p;$/;"	m	struct:Robot::RobotPartInfo
p	RobotModel/robot.h	/^        salt::Vector3f p;$/;"	m	struct:Robot::Link
pEngine	Xabsl/XabslEngineExecutor.h	/^  	Engine* pEngine;$/;"	m	class:XabslEngineExecutor
pEnumerations	Xabsl/XabslParameters.h	/^  Array<Enumeration*>* pEnumerations;$/;"	m	class:xabsl::Parameters
pF	Xabsl/XabslSymbols.h	/^  T (FunctionProvider::*pF)(); $/;"	m	class:xabsl::InputSymbol
pGetF	Xabsl/XabslSymbols.h	/^  T (FunctionProvider::*pGetF)(); $/;"	m	class:xabsl::OutputSymbol
pGetModuleSelector	Module/ModuleHandler.cpp	/^ModuleSelector* ModuleHandler::pGetModuleSelector(SolutionRequest::ModuleID id) const$/;"	f	class:ModuleHandler
pGetupEngine	Action/NaoActionControl.h	/^    GetupEngineSelector *pGetupEngine;$/;"	m	class:NaoActionControl
pI	Xabsl/XabslSymbols.h	/^  FunctionProvider* pI;$/;"	m	class:xabsl::InputSymbol
pI	Xabsl/XabslSymbols.h	/^  FunctionProvider* pI;$/;"	m	class:xabsl::OutputSymbol
pKickEngine	Action/NaoActionControl.h	/^	KickEngineSelector *pKickEngine;$/;"	m	class:NaoActionControl
pLOG	Utilities/Logger.h	45;"	d
pModuleSelectors	Module/ModuleHandler.h	/^  ModuleSelector *pModuleSelectors[SolutionRequest::numOfModules];$/;"	m	class:ModuleHandler
pSetF	Xabsl/XabslSymbols.h	/^  void (FunctionProvider::*pSetF)(T); $/;"	m	class:xabsl::OutputSymbol
pSpecialAction	Action/NaoActionControl.h	/^    SpecialActionSelector *pSpecialAction;$/;"	m	class:NaoActionControl
pTimeFunction	Xabsl/XabslAction.h	/^  unsigned long (*pTimeFunction)();$/;"	m	class:xabsl::Action
pTimeFunction	Xabsl/XabslEngine.h	/^  unsigned long (*pTimeFunction)();$/;"	m	class:xabsl::Engine
pTimeFunction	Xabsl/XabslOption.h	/^  unsigned long (*pTimeFunction)();$/;"	m	class:xabsl::Option
pTimeFunction	Xabsl/XabslState.h	/^  unsigned long (*pTimeFunction)();$/;"	m	class:xabsl::State
pV	Xabsl/XabslSymbols.h	/^  T* pV; $/;"	m	class:xabsl::OutputSymbol
pV	Xabsl/XabslSymbols.h	/^  const T* pV; $/;"	m	class:xabsl::InputSymbol
pWalkingEngine	Action/NaoActionControl.h	/^    WalkingEngine *pWalkingEngine[WalkRequest::numOfWalkType];$/;"	m	class:NaoActionControl
parameter	Xabsl/XabslBooleanExpression.h	/^  bool* parameter;$/;"	m	class:xabsl::BooleanOptionParameterRef
parameter	Xabsl/XabslDecimalExpression.h	/^  double* parameter;$/;"	m	class:xabsl::DecimalOptionParameterRef
parameter	Xabsl/XabslEnumeratedExpression.h	/^  int* parameter;$/;"	m	class:xabsl::EnumeratedOptionParameterRef
parameters	Xabsl/XabslAction.h	/^  ParameterAssignment* parameters;$/;"	m	class:xabsl::ActionBehavior
parameters	Xabsl/XabslBehavior.h	/^  Parameters* parameters; $/;"	m	class:xabsl::Behavior
parameters	Xabsl/XabslBooleanExpression.h	/^  ParameterAssignment* parameters;$/;"	m	class:xabsl::BooleanInputSymbolRef
parameters	Xabsl/XabslDecimalExpression.h	/^  ParameterAssignment* parameters;$/;"	m	class:xabsl::DecimalInputSymbolRef
parameters	Xabsl/XabslEnumeratedExpression.h	/^  ParameterAssignment* parameters;$/;"	m	class:xabsl::EnumeratedInputSymbolRef
parameters	Xabsl/XabslSymbols.h	/^  Parameters parameters;$/;"	m	class:xabsl::InputSymbol
parent	BehaviorControl/WalkPathPlanningControl.h	/^	WayPoint* parent() const {return mParent;}$/;"	f	class:WayPoint
parseAccelerometer	Parser/Parser.cpp	/^bool Parser::parseAccelerometer( const sexp_t* sexp)$/;"	f	class:Parser
parseAll	Parser/Parser.cpp	/^bool Parser::parseAll( const string& msg )$/;"	f	class:Parser
parseDebugMsg	BehaviorControl/WalkPathPlanningControl.cpp	/^void DebugMsgParser::parseDebugMsg(string msg)$/;"	f	class:DebugMsgParser
parseDebugMsg	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::parseDebugMsg()$/;"	f	class:WalkPathPlanningControl
parseDestination	BehaviorControl/WalkPathPlanningControl.cpp	/^void DebugMsgParser::parseDestination( const sexp_t* sexp )$/;"	f	class:DebugMsgParser
parseFRP	Parser/Parser.cpp	/^bool Parser::parseFRP                   ( const sexp_t* sexp )$/;"	f	class:Parser
parseGameState	Parser/Parser.cpp	/^bool Parser::parseGameState( const sexp_t* sexp )$/;"	f	class:Parser
parseGivenValue	Parser/Parser.h	/^	static bool parseGivenValue( const sexp_t* sexp, const char* given, T &res )$/;"	f	class:Parser
parseGyro	Parser/Parser.cpp	/^bool Parser::parseGyro( const sexp_t* sexp )$/;"	f	class:Parser
parseHear	Parser/Parser.cpp	/^bool Parser::parseHear( const sexp_t* sexp )$/;"	f	class:Parser
parseHingeJoint	Parser/Parser.cpp	/^bool Parser::parseHingeJoint            ( const sexp_t* sexp )$/;"	f	class:Parser
parseJoyStick	BehaviorControl/WalkPathPlanningControl.cpp	/^void DebugMsgParser::parseJoyStick( const sexp_t* sexp )$/;"	f	class:DebugMsgParser
parseLimbPosition	Parser/Parser.cpp	/^bool Parser::parseLimbPosition( const sexp_t* sexp, string name )$/;"	f	class:Parser
parseObstacle	BehaviorControl/WalkPathPlanningControl.cpp	/^void DebugMsgParser::parseObstacle( const sexp_t* sexp )$/;"	f	class:DebugMsgParser
parsePlayer	Parser/Parser.cpp	/^bool Parser::parsePlayer( const sexp_t* sexp )$/;"	f	class:Parser
parsePosition	Parser/Parser.cpp	/^bool Parser::parsePosition( const sexp_t* sexp )$/;"	f	class:Parser
parseTime	Parser/Parser.cpp	/^bool Parser::parseTime( const sexp_t* sexp )$/;"	f	class:Parser
parseUniversalJoint	Parser/Parser.cpp	/^bool Parser::parseUniversalJoint        ( const sexp_t* sexp )$/;"	f	class:Parser
parseValue	Parser/Parser.cpp	/^bool Parser::parseValue( const sexp_t* sexp, float &res )$/;"	f	class:Parser
parseValue	Parser/Parser.cpp	/^bool Parser::parseValue( const sexp_t* sexp, int &res )$/;"	f	class:Parser
parseValue	Parser/Parser.cpp	/^bool Parser::parseValue( const sexp_t* sexp, string& res )$/;"	f	class:Parser
parseVision	Parser/Parser.cpp	/^bool Parser::parseVision( const sexp_t* sexp )$/;"	f	class:Parser
parseWayPoint	BehaviorControl/WalkPathPlanningControl.cpp	/^void DebugMsgParser::parseWayPoint( const sexp_t* sexp )$/;"	f	class:DebugMsgParser
parse_data_t	Parser/parser.c	/^parse_data_t;$/;"	t	typeref:struct:parse_stack_data	file:
parse_sexp	Parser/parser.c	/^parse_sexp (char *s, int len)$/;"	f
parse_stack_data	Parser/parser.c	/^typedef struct parse_stack_data$/;"	s	file:
parserWayPoints	Parser/Parser.cpp	/^bool Parser::parserWayPoints(std::string msg)$/;"	f	class:Parser
parsermode_t	Parser/sexp.h	/^} parsermode_t;$/;"	t	typeref:enum:__anon6
pass1	Action/NaoDynamicKick.cpp	/^ void NaoDynamicKickEngine::pass1()$/;"	f	class:NaoDynamicKickEngine
pass2	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::pass2()$/;"	f	class:NaoDynamicKickEngine
pass3	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::pass3()$/;"	f	class:NaoDynamicKickEngine
pass4	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::pass4()$/;"	f	class:NaoDynamicKickEngine
pass5	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::pass5()$/;"	f	class:NaoDynamicKickEngine
passed	BehaviorControl/WalkPathPlanningControl.h	/^	bool passed() const {return mPassed;}$/;"	f	class:DebugWayPoint
passq1	Action/NaoDynamicKick.cpp	/^ void NaoDynamicKickEngine::passq1()$/;"	f	class:NaoDynamicKickEngine
passq2	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::passq2()$/;"	f	class:NaoDynamicKickEngine
passq3	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::passq3()$/;"	f	class:NaoDynamicKickEngine
passq4	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::passq4()$/;"	f	class:NaoDynamicKickEngine
passq5	Action/NaoDynamicKick.cpp	/^void NaoDynamicKickEngine::passq5()$/;"	f	class:NaoDynamicKickEngine
pathPlanning2Action	Utilities/MessageStorage.h	/^	std::string pathPlanning2Action;$/;"	m	class:MessageStorage
pathPlanning2ActionUpdateCycle	Utilities/MessageStorage.h	/^	float pathPlanning2ActionUpdateCycle;$/;"	m	class:MessageStorage
pcont	Parser/sexp.h	/^typedef struct pcont {$/;"	s
pcont_t	Parser/sexp.h	/^} pcont_t;$/;"	t	typeref:struct:pcont
pd_allocate	Parser/parser.c	/^pd_allocate() {$/;"	f
pd_cache	Parser/parser.c	/^faststack_t *pd_cache;$/;"	v
pd_deallocate	Parser/parser.c	/^pd_deallocate(parse_data_t *p) {$/;"	f
penaltylength	WorldModel/fieldinfo.h	/^    float penaltylength;$/;"	m	class:FieldInfo
penaltywidth	WorldModel/fieldinfo.h	/^    float penaltywidth;$/;"	m	class:FieldInfo
phi	types.h	/^    double phi;$/;"	m	struct:VisionSense
pitch	HeadControl/HeadMotionRequest.h	/^  	float pitch,yaw;$/;"	m	class:HeadMotionRequest
plan2PathPlanning	Utilities/MessageStorage.h	/^	std::string plan2PathPlanning;$/;"	m	class:MessageStorage
plan2PathPlanningUpdateCycle	Utilities/MessageStorage.h	/^	float plan2PathPlanningUpdateCycle;$/;"	m	class:MessageStorage
planManager	AdvancedAgent/AdvancedAgent.h	/^	PlanManager planManager;$/;"	m	class:AdvancedAgent
plans	AdvancedAgent/PlanManager.h	/^	stack<Plan*>plans;$/;"	m	class:PlanManager
playOn	BaseAgent.cpp	/^void BaseAgent::playOn()$/;"	f	class:BaseAgent
play_mode	WorldModel/fieldinfo.h	/^    TPlayMode play_mode;$/;"	m	class:FieldInfo
points	HeadControl/HeadPathPlanner.h	/^    Vector3f points[maxNumberOfPoints];$/;"	m	class:HeadPathPlanner
pop	Parser/faststack.c	/^pop (faststack_t * s)$/;"	f
pos	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f pos() const {return mPos;}$/;"	f	class:DebugObstacle
pos	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f pos() const {return mPos;}$/;"	f	class:DebugWayPoint
pos	BehaviorControl/WalkPathPlanningControl.h	/^	Vector2f pos() const {return mPos;}$/;"	f	class:WayPoint
pos	WorldModel/dynamicobject.h	/^	salt::Vector3f pos;$/;"	m	class:DynamicObject
posbyhearing	WorldModel/dynamicobject.h	/^	salt::Vector3f posbyhearing;$/;"	m	class:DynamicObject
positionInWalkCycle	Action/ActionInfo.h	/^  double positionInWalkCycle;$/;"	m	class:ActionInfo
positionInWalkCycle	Action/NaoActionControl.h	/^    double positionInWalkCycle;$/;"	m	class:NaoActionControl
positioningDecisoin	AdvancedAgent/PlanManager.h	/^	PositioningPlan* positioningDecisoin;$/;"	m	class:PlanManager
positionqueue	WorldModel/dynamicobject.h	/^	queue<Vector3f> positionqueue;	\/\/By Qu Junjun 2009.10.4		Recorde The Past Position For Vel Cauculating$/;"	m	class:DynamicObject
power	Trainer_Client/common.h	/^	float power[20];$/;"	m	struct:command
precision	Trainer_Client/common.h	/^	float precision[20];$/;"	m	struct:state
prepare	BaseAgent.cpp	/^void BaseAgent::prepare()$/;"	f	class:BaseAgent
prepareData	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::prepareData()$/;"	f	class:PathPlanning
prepareMFile	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::prepareMFile()$/;"	f	class:PathPlanning
previous_action_name	Trainer_Client/control.h	/^	std::string previous_action_name;$/;"	m	class:control
previous_action_size	Trainer_Client/control.h	/^	int         previous_action_size;$/;"	m	class:control
previous_repeat_number	Trainer_Client/control.h	/^	int         previous_repeat_number;$/;"	m	class:control
printError	Xabsl/XabslEngineExecutor.cpp	/^void MyXabslErrorHandler::printError(const char* text)$/;"	f	class:MyXabslErrorHandler
printGeneratedMainActionToString	BehaviorControl/XabslBehaviorControl.cpp	/^void XabslBehaviorControl::printGeneratedMainActionToString(char* buf)$/;"	f	class:XabslBehaviorControl
printMFile	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::printMFile()$/;"	f	class:PathPlanning
printMessage	Xabsl/XabslEngineExecutor.cpp	/^void MyXabslErrorHandler::printMessage(const char* text)$/;"	f	class:MyXabslErrorHandler
printOut	Action/ActionRequest.cpp	/^void ActionRequest::printOut(char* destination) const$/;"	f	class:ActionRequest
print_sexp	Parser/sexp.c	/^print_sexp (char *buf, int size, sexp_t * sx)$/;"	f
print_sexp_cstr	Parser/sexp.c	/^print_sexp_cstr (CSTRING **s, sexp_t *sx, int ss, int gs)$/;"	f
push	Parser/faststack.c	/^push (faststack_t * cur_stack, void *data)$/;"	f
pythag	Geometry/geometry.cpp	/^pythag(float a, float b)$/;"	f
q	RobotModel/robot.h	/^        float q;              \/\/ joint angle$/;"	m	struct:Robot::Link
qdepth	Parser/sexp.h	/^  unsigned int qdepth;$/;"	m	struct:pcont
radius	BehaviorControl/WalkPathPlanningControl.h	/^	float radius() const {return mRadius;}$/;"	f	class:DebugObstacle
radius	salt/bounds.h	/^    float           radius;$/;"	m	class:salt::BoundingSphere
radiusSq	salt/bounds.h	/^    float           radiusSq;$/;"	m	class:salt::BoundingSphere
rate	types.h	/^    float rate;$/;"	m	struct:HingeJointSense
rate1	types.h	/^    float rate1;$/;"	m	struct:UniversalJointSense
rate2	types.h	/^    float rate2;$/;"	m	struct:UniversalJointSense
rcss	Net/addr.cpp	/^namespace rcss$/;"	n	file:
rcss	Net/addr.hpp	/^namespace rcss$/;"	n
rcss	Net/exception.cpp	/^namespace rcss$/;"	n	file:
rcss	Net/exception.hpp	/^namespace rcss$/;"	n
rcss	Net/handler.cpp	/^namespace rcss$/;"	n	file:
rcss	Net/handler.hpp	/^namespace rcss$/;"	n
rcss	Net/iosocketstream.hpp	/^namespace rcss$/;"	n
rcss	Net/isocketstream.hpp	/^namespace rcss$/;"	n
rcss	Net/osocketstream.hpp	/^namespace rcss$/;"	n
rcss	Net/socket.cpp	/^namespace rcss$/;"	n	file:
rcss	Net/socket.hpp	/^namespace rcss$/;"	n
rcss	Net/socketstreambuf.hpp	/^namespace rcss$/;"	n
rcss	Net/tcpsocket.cpp	/^namespace rcss$/;"	n	file:
rcss	Net/tcpsocket.hpp	/^namespace rcss$/;"	n
rcss	Net/udpsocket.cpp	/^namespace rcss$/;"	n	file:
rcss	Net/udpsocket.hpp	/^namespace rcss$/;"	n
read	Parser/io.c	47;"	d	file:
readFromFile	Xabsl/XabslEngineExecutor.cpp	/^void MyXabslFileInputSource::readFromFile(char* value)$/;"	f	class:MyXabslFileInputSource
readString	Xabsl/XabslEngineExecutor.cpp	/^bool MyXabslFileInputSource::readString(char* destination, int maxLength)$/;"	f	class:MyXabslFileInputSource
readValue	Xabsl/XabslEngineExecutor.cpp	/^double MyXabslFileInputSource::readValue()$/;"	f	class:MyXabslFileInputSource
readXMLFile	Utilities/xmlParser.cpp	/^bool XMLParser::readXMLFile(std::string name)$/;"	f	class:XMLParser
read_one_sexp	Parser/io.c	/^sexp_t *read_one_sexp(sexp_iowrap_t *iow) {$/;"	f
realPos	types.h	/^    salt::Vector3f realPos;$/;"	m	struct:VisionSense
realSlowScan	HeadControl/HeadControlMode.h	/^        realSlowScan,$/;"	e	enum:HeadControlMode::HeadControlModes
receivedNewSensorData	Action/ActionControl.h	/^  const bool& receivedNewSensorData;$/;"	m	class:ActionControlInterfaces
receivedNewSensorData	Action/WalkingEngine.h	/^  const bool& receivedNewSensorData;$/;"	m	class:WalkingEngineInterfaces
recv	Net/socket.cpp	/^        Socket::recv( char* msg,$/;"	f	class:rcss::net::Socket
recv	Net/socket.cpp	/^        Socket::recv( int timeout,$/;"	f	class:rcss::net::Socket
refParameters	Xabsl/XabslParameters.h	/^  Parameters* refParameters;  $/;"	m	class:xabsl::ParameterAssignment
registerBasicBehavior	Xabsl/XabslEngine.cpp	/^void Engine::registerBasicBehavior(BasicBehavior& basicBehavior)$/;"	f	class:xabsl::Engine
registerBasicBehaviors	BehaviorControl/CommonBasicBehaviors.cpp	/^void CommonBasicBehaviors::registerBasicBehaviors(Engine& engine)$/;"	f	class:CommonBasicBehaviors
registerBoolean	Xabsl/XabslParameters.cpp	/^void Parameters::registerBoolean(const char* name, bool& parameter)$/;"	f	class:xabsl::Parameters
registerBooleanInputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanInputSymbol(const char* name, FunctionProvider* pInstance,$/;"	f	class:xabsl::Symbols
registerBooleanInputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanInputSymbol(const char* name, const bool* pVariable)$/;"	f	class:xabsl::Symbols
registerBooleanInputSymbolBooleanParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanInputSymbolBooleanParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerBooleanInputSymbolDecimalParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanInputSymbolDecimalParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerBooleanInputSymbolEnumeratedParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanInputSymbolEnumeratedParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerBooleanOutputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanOutputSymbol(const char* name, FunctionProvider* pInstance,$/;"	f	class:xabsl::Symbols
registerBooleanOutputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerBooleanOutputSymbol(const char* name, bool* pVariable)$/;"	f	class:xabsl::Symbols
registerDecimal	Xabsl/XabslParameters.cpp	/^void Parameters::registerDecimal(const char* name, double& parameter)$/;"	f	class:xabsl::Parameters
registerDecimalInputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalInputSymbol$/;"	f	class:xabsl::Symbols
registerDecimalInputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalInputSymbol(const char* name, const double* pVariable)$/;"	f	class:xabsl::Symbols
registerDecimalInputSymbolBooleanParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalInputSymbolBooleanParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerDecimalInputSymbolDecimalParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalInputSymbolDecimalParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerDecimalInputSymbolEnumeratedParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalInputSymbolEnumeratedParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerDecimalOutputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalOutputSymbol(const char* name, FunctionProvider* pInstance,$/;"	f	class:xabsl::Symbols
registerDecimalOutputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerDecimalOutputSymbol(const char* name, double* pVariable)$/;"	f	class:xabsl::Symbols
registerEnumElement	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumElement(const char* symbolName, const char* name, int value)$/;"	f	class:xabsl::Symbols
registerEnumerated	Xabsl/XabslParameters.cpp	/^void Parameters::registerEnumerated(const char* name, const char* enumName, int& parameter)$/;"	f	class:xabsl::Parameters
registerEnumeratedInputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedInputSymbol(const char* name, const char* enumName, FunctionProvider* pInstance,$/;"	f	class:xabsl::Symbols
registerEnumeratedInputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedInputSymbol(const char* name, const char* enumName, const int* pVariable)$/;"	f	class:xabsl::Symbols
registerEnumeratedInputSymbolBooleanParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedInputSymbolBooleanParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerEnumeratedInputSymbolDecimalParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedInputSymbolDecimalParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerEnumeratedInputSymbolEnumeratedParameter	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedInputSymbolEnumeratedParameter(const char* symbolName, $/;"	f	class:xabsl::Symbols
registerEnumeratedOutputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedOutputSymbol(const char* name, const char* enumName, FunctionProvider* pInstance,$/;"	f	class:xabsl::Symbols
registerEnumeratedOutputSymbol	Xabsl/XabslSymbols.cpp	/^void Symbols::registerEnumeratedOutputSymbol(const char* name, const char* enumName, int* pVariable)$/;"	f	class:xabsl::Symbols
registerEnumerations	Xabsl/XabslParameters.cpp	/^void Parameters::registerEnumerations(Array<Enumeration*>& enumerations)$/;"	f	class:xabsl::Parameters
registerParameters	BehaviorControl/CommonBasicBehaviors.h	/^    virtual void registerParameters()$/;"	f	class:BasicBehaviorSpecialAction
registerParameters	BehaviorControl/CommonBasicBehaviors.h	/^    virtual void registerParameters()$/;"	f	class:BasicBehaviorWalk
registerParameters	BehaviorControl/CommonBasicBehaviors.h	/^    virtual void registerParameters(){}$/;"	f	class:BasicBehaviorStand
registerParameters	Xabsl/XabslBasicBehavior.h	/^  virtual void registerParameters() {}$/;"	f	class:xabsl::BasicBehavior
removeLast	Xabsl/XabslArray.h	/^    void removeLast()$/;"	f	class:xabsl::Array
renew	WorldModel/ball.h	/^	void renew()$/;"	f	class:Ball
renew	WorldModel/player.cpp	/^void Player::renew()$/;"	f	class:Player
repeat	Trainer_Client/common.h	/^	int repeat;$/;"	m	struct:action
reset	Trainer_Client/control.cpp	/^void control::reset()$/;"	f	class:control
reset	Xabsl/XabslEngine.cpp	/^void Engine::reset()$/;"	f	class:xabsl::Engine
reset	Xabsl/XabslParameters.cpp	/^void Parameters::reset()$/;"	f	class:xabsl::Parameters
reset	Xabsl/XabslState.cpp	/^void State::reset()$/;"	f	class:xabsl::State
resetAll	Utilities/MessageStorage.cpp	/^void MessageStorage::resetAll()$/;"	f	class:MessageStorage
resetCycle	Utilities/Logger.cpp	/^void OnlineTimer::resetCycle()$/;"	f	class:OnlineTimer
resetCycle	Utilities/Logger.cpp	/^void OnlineTimer::resetCycle(long cycle)$/;"	f	class:OnlineTimer
resetCycle	Utilities/Logger.cpp	/^void Timer::resetCycle(long cycle)$/;"	f	class:Timer
resetCycle	Utilities/Logger.cpp	/^void VirtualTimer::resetCycle(long cycle)$/;"	f	class:VirtualTimer
resetOutputSymbols	Xabsl/XabslSymbols.cpp	/^void Symbols::resetOutputSymbols()$/;"	f	class:xabsl::Symbols
reset_pcont	Parser/sexp_ops.h	70;"	d
result	Utilities/xmlParser.h	/^	xmlXPathObjectPtr result;$/;"	m	class:XMLParser
result_type	salt/random.h	/^    typedef boost::mt19937::result_type result_type;$/;"	t	class:salt::RandomEngine
return_to_ball	HeadControl/NaoHeadControl.h	/^        return_to_ball,$/;"	e	enum:NaoHeadControl::HeadControlState
returntocenter	BehaviorControl/Strive3DBehaviorControl.h	/^		returntocenter = 2,$/;"	e	enum:Strive3DBehaviorControl::GolieState
rightarm	types.h	/^	salt::Vector3f 	rightarm;$/;"	m	struct:Limb
rightfoot	types.h	/^	salt::Vector3f	rightfoot;$/;"	m	struct:Limb
roleinteam	WorldModel/self.h	/^	RoleInTeam roleinteam;$/;"	m	class:Self
rootAction	Xabsl/XabslEngine.h	/^  Action* rootAction;$/;"	m	class:xabsl::Engine
rootNode	Utilities/xmlParser.h	/^	xmlNodePtr rootNode;$/;"	m	class:XMLParser
rootOption	Xabsl/XabslAgent.h	/^  Behavior* rootOption;$/;"	m	class:xabsl::Agent
rotation	Action/ActionRequest.h	/^    double rotation;\/\/by Neil,need another parameter for rotation$/;"	m	class:WalkRequest
rotation	Action/NaoWalkingEngine.h	/^	double rotation;$/;"	m	class:NaoWalkingEngine
rotationSpeed	BehaviorControl/CommonBasicBehaviors.h	/^    double rotationSpeed;$/;"	m	class:BasicBehaviorWalk
run	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::run()$/;"	f	class:AdvancedAgent
run	AdvancedAgent/DribblePlan.cpp	/^void DribblePlan::run()$/;"	f	class:DribblePlan
run	AdvancedAgent/GoalPlan.cpp	/^void GoalPlan::run()$/;"	f	class:GoalPlan
run	AdvancedAgent/GoaliePlan.cpp	/^void GoaliePlan::run()$/;"	f	class:GoaliePlan
run	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::run()$/;"	f	class:PathPlanning
run	AdvancedAgent/PositioningPlan.cpp	/^void PositioningPlan::run()$/;"	f	class:PositioningPlan
run	BaseAgent.cpp	/^void BaseAgent::run()$/;"	f	class:BaseAgent
runCount	AdvancedAgent/Plan.h	/^	int runCount;$/;"	m	class:Plan
runMode	AdvancedAgent/AdvancedAgent.h	/^	RunMode runMode;$/;"	m	class:AdvancedAgent
s_instance	Utilities/StaticModule.h	/^	static T* s_instance;$/;"	m	class:StaticModule
s_instance	Utilities/StaticModule.h	/^T* StaticModule<T>::s_instance = 0;$/;"	m	class:StaticModule
sadd	Parser/cstring.c	/^CSTRING *sadd(CSTRING *s, char *a) {$/;"	f
saddch	Parser/cstring.c	/^CSTRING *saddch(CSTRING *s, char a) {$/;"	f
safe_malloc	Parser/malloc_util.h	28;"	d
salt	salt/bounds.h	/^namespace salt$/;"	n
salt	salt/frustum.h	/^namespace salt$/;"	n
salt	salt/gmath.h	/^namespace salt$/;"	n
salt	salt/matrix.h	/^namespace salt$/;"	n
salt	salt/plane.h	/^namespace salt$/;"	n
salt	salt/random.h	/^namespace salt$/;"	n
salt	salt/rect.h	/^namespace salt$/;"	n
salt	salt/tvector.h	/^namespace salt$/;"	n
salt	salt/vector.h	/^namespace salt$/;"	n
save	Trainer_Client/common.cpp	/^void action::save(ostream &os)$/;"	f	class:action
saveResults	BehaviorControl/WalkPathPlanningControl.cpp	/^void PathPlanningTest::saveResults(WayPoint* endPos)$/;"	f	class:PathPlanningTest
saycycle	BaseAgent.h	/^	int		saycycle;$/;"	m	class:BaseAgent
sbuffer	Parser/sexp.h	/^  char        *sbuffer;$/;"	m	struct:pcont
scan_away_from_ball	HeadControl/NaoHeadControl.h	/^        scan_away_from_ball,$/;"	e	enum:NaoHeadControl::HeadControlState
sdestroy	Parser/cstring.c	/^void sdestroy(CSTRING *s) {$/;"	f
searchAuto	HeadControl/HeadControlMode.h	/^        searchAuto,$/;"	e	enum:HeadControlMode::HeadControlModes
searchForBall	HeadControl/HeadControlMode.h	/^        searchForBall,$/;"	e	enum:HeadControlMode::HeadControlModes
searchForBallLeft	HeadControl/HeadControlMode.h	/^        searchForBallLeft,$/;"	e	enum:HeadControlMode::HeadControlModes
searchForBallRight	HeadControl/HeadControlMode.h	/^        searchForBallRight,$/;"	e	enum:HeadControlMode::HeadControlModes
seehead	types.h	/^	bool	seehead;$/;"	m	struct:Limb
seeleftarm	types.h	/^	bool	seeleftarm;$/;"	m	struct:Limb
seeleftfoot	types.h	/^	bool	seeleftfoot;$/;"	m	struct:Limb
seerightarm	types.h	/^	bool	seerightarm;$/;"	m	struct:Limb
seerightfoot	types.h	/^	bool	seerightfoot;$/;"	m	struct:Limb
selectNetwork	Net/Net.cpp	/^Net& NetManager::selectNetwork(string name)$/;"	f	class:NetManager
selectPlan	AdvancedAgent/PlanManager.cpp	/^bool PlanManager::selectPlan()$/;"	f	class:PlanManager
selectRunModeByFile	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::selectRunModeByFile()$/;"	f	class:AdvancedAgent
selectSolution	Module/ModuleHandler.cpp	/^void ModuleHandler::selectSolution(SolutionRequest::ModuleID id, SolutionRequest::ModuleSolutionID solution)$/;"	f	class:ModuleHandler
selectSolution	Module/ModuleSelector.cpp	/^void ModuleSelector::selectSolution(SolutionRequest::ModuleSolutionID id) $/;"	f	class:ModuleSelector
selectSolutions	Module/ModuleHandler.cpp	/^void ModuleHandler::selectSolutions(SolutionRequest request)$/;"	f	class:ModuleHandler
selectedAgent	Xabsl/XabslEngine.h	/^  Agent* selectedAgent;$/;"	m	class:xabsl::Engine
selectedSolution	Module/ModuleSelector.h	/^  Module *selectedSolution;$/;"	m	class:ModuleSelector
selectedSolutionID	Module/ModuleSelector.h	/^  SolutionRequest::ModuleSolutionID selectedSolutionID;$/;"	m	class:ModuleSelector
sempty	Parser/cstring.c	/^void sempty(CSTRING *s) {$/;"	f
send	Net/socket.cpp	/^        Socket::send( const char* msg,$/;"	f	class:rcss::net::Socket
sendInfo2GuiDebugger	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::sendInfo2GuiDebugger()$/;"	f	class:AdvancedAgent
sendMsg2GuiDebugger	BehaviorControl/NaoBehaviorControl.cpp	/^void NaoBehaviorControl::sendMsg2GuiDebugger()$/;"	f	class:NaoBehaviorControl
sendMsg2GuiDebugger	BehaviorControl/Strive3DBehaviorControl.cpp	/^void Strive3DBehaviorControl::sendMsg2GuiDebugger()$/;"	f	class:Strive3DBehaviorControl
sendMsg2GuiDebugger	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::sendMsg2GuiDebugger()$/;"	f	class:WalkPathPlanningControl
sender	types.h	/^    std::string		sender;$/;"	m	struct:HearInfo
set	Xabsl/XabslParameters.cpp	/^void ParameterAssignment::set()$/;"	f	class:xabsl::ParameterAssignment
setAcceleration	WorldModel/self.cpp	/^void Self::setAcceleration ( int i, float value )$/;"	f	class:Self
setActionControlState	Action/NaoActionControl.cpp	/^void NaoActionControl::setActionControlState()$/;"	f	class:NaoActionControl
setAddr	Net/addr.cpp	/^	    setAddr( Addr::PortType port, Addr::HostType host )$/;"	f	class:rcss::net::AddrImpl	file:
setAsync	Net/socket.cpp	/^        Socket::setAsync( bool on )$/;"	f	class:rcss::net::Socket
setBooleanParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setBooleanParameter(const char* param, bool value)$/;"	f	class:xabsl::ParameterAssignment
setBooleanParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setBooleanParameter(const char* param, const BooleanExpression* exp)$/;"	f	class:xabsl::ParameterAssignment
setBroadcast	Net/socket.cpp	/^        Socket::setBroadcast( bool on )$/;"	f	class:rcss::net::Socket
setCloseOnExec	Net/socket.cpp	/^        Socket::setCloseOnExec( bool on )$/;"	f	class:rcss::net::Socket
setCommonArg	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::setCommonArg()$/;"	f	class:PathPlanning
setConnectType	Net/socketstreambuf.hpp	/^            setConnectType( ConnType conn )$/;"	f	class:rcss::net::SocketStreamBuf
setCurMS	Utilities/Logger.cpp	/^void VirtualTimer::setCurMS(long curMSArg)$/;"	f	class:VirtualTimer
setCurNode	Utilities/xmlParser.cpp	/^void XMLParser::setCurNode(const char* Xpath, int index)$/;"	f	class:XMLParser
setCurNode	Utilities/xmlParser.h	/^	void setCurNode(xmlNodePtr node){curNode=node;}$/;"	f	class:XMLParser
setDecimalParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setDecimalParameter(const char* param, const DecimalExpression* exp)$/;"	f	class:xabsl::ParameterAssignment
setDecimalParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setDecimalParameter(const char* param, double value)$/;"	f	class:xabsl::ParameterAssignment
setDefaultSolutions	Module/SolutionRequest.cpp	/^void SolutionRequest::setDefaultSolutions()$/;"	f	class:SolutionRequest
setElement	Xabsl/XabslArray.h	/^    void setElement(const char* name, T value)$/;"	f	class:xabsl::Array
setElement	Xabsl/XabslArray.h	/^    void setElement(int pos, T value)$/;"	f	class:xabsl::Array
setEndPoint	Net/socketstreambuf.hpp	/^            setEndPoint( const Addr& addr )$/;"	f	class:rcss::net::SocketStreamBuf
setEnumeratedParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setEnumeratedParameter(const char* param, const EnumeratedExpression* exp)$/;"	f	class:xabsl::ParameterAssignment
setEnumeratedParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setEnumeratedParameter(const char* param, const Enumeration* enumeration, int value)$/;"	f	class:xabsl::ParameterAssignment
setEnumeratedParameter	Xabsl/XabslParameters.cpp	/^bool ParameterAssignment::setEnumeratedParameter(const char* param, const char* value)$/;"	f	class:xabsl::ParameterAssignment
setFrameNumber	Action/ActionRequest.h	/^    void setFrameNumber(unsigned long frameNumber)$/;"	f	class:ActionRequest
setGeometryByConfig	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::setGeometryByConfig()$/;"	f	class:PathPlanning
setGeometryInMatch	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::setGeometryInMatch()$/;"	f	class:PathPlanning
setGyroAngularVel	WorldModel/self.cpp	/^void Self::setGyroAngularVel ( int i, float value )$/;"	f	class:Self
setHearInfo	WorldModel/worldmodel.cpp	/^void WorldModel::setHearInfo( HearInfo& hearinfo )$/;"	f	class:WorldModel
setHingeJointSenseMap	RobotModel/robot.cpp	/^void Robot::setHingeJointSenseMap ( JointID jid , HingeJointSense value)$/;"	f	class:Robot
setHost	Net/addr.cpp	/^            setHost( Addr::HostType host )$/;"	f	class:rcss::net::AddrImpl
setHost	Net/addr.cpp	/^            setHost( const std::string& host )$/;"	f	class:rcss::net::AddrImpl
setHost	Net/addr.cpp	/^        Addr::setHost( HostType host )$/;"	f	class:rcss::net::Addr
setHost	Net/addr.cpp	/^        Addr::setHost( const std::string& host )$/;"	f	class:rcss::net::Addr
setHostRaw	Net/addr.cpp	/^            setHostRaw( Addr::HostType host )$/;"	f	class:rcss::net::AddrImpl	file:
setIsValid	WorldModel/dynamicobject.h	/^	void setIsValid(bool arg){mIsValid = arg;}$/;"	f	class:DynamicObject
setJoints	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::setJoints(float neckYaw, float headPitch, float speed)$/;"	f	class:NaoHeadControl
setJointsDirect	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::setJointsDirect(float yaw,float pitch)$/;"	f	class:NaoHeadControl
setJointsIsCloseToDestination	HeadControl/NaoHeadControl.h	/^    int setJointsIsCloseToDestination;$/;"	m	class:NaoHeadControl
setJointsMaxPanReached	HeadControl/NaoHeadControl.h	/^    bool setJointsMaxPanReached;$/;"	m	class:NaoHeadControl
setKd	Action/PIDController.h	/^	void setKd(float Kd) { mKd = Kd; }$/;"	f	class:PIDController
setKi	Action/PIDController.h	/^	void setKi(float Ki) { mKi = Ki; }$/;"	f	class:PIDController
setKp	Action/PIDController.h	/^	void setKp(float Kp) { mKp = Kp; }$/;"	f	class:PIDController
setLFCenterVel	WorldModel/self.cpp	/^void Self::setLFCenterVel ( int i,float value )$/;"	f	class:Self
setLFForce	WorldModel/self.cpp	/^void Self::setLFForce( int i, float value )$/;"	f	class:Self
setLastNode	Utilities/xmlParser.h	/^	void setLastNode(xmlNodePtr node){lastNode=node;}$/;"	f	class:XMLParser
setLastUpdateTime	WorldModel/dynamicobject.h	/^	void setLastUpdateTime(float arg){mLastUpdateTime = arg;}$/;"	f	class:DynamicObject
setModuleSelector	Module/ModuleHandler.cpp	/^void ModuleHandler::setModuleSelector(SolutionRequest::ModuleID id, ModuleSelector *module)$/;"	f	class:ModuleHandler
setMySimTime	WorldModel/worldmodel.cpp	/^void WorldModel::setMySimTime ( float simTime)$/;"	f	class:WorldModel
setName	WorldModel/player.h	/^	inline void setName( const std::string name) { mName = name; }$/;"	f	class:Player
setNonBlocking	Net/socket.cpp	/^        Socket::setNonBlocking( bool on )$/;"	f	class:rcss::net::Socket
setOppTeamName	WorldModel/fieldinfo.cpp	/^void FieldInfo::setOppTeamName(std::string name)$/;"	f	class:FieldInfo
setParent	BehaviorControl/WalkPathPlanningControl.h	/^	void setParent(WayPoint* parent){mParent = parent;}$/;"	f	class:WayPoint
setPassed	BehaviorControl/WalkPathPlanningControl.h	/^	void setPassed(bool p){mPassed = p;}$/;"	f	class:DebugWayPoint
setPathPlanning2ActionMsg	Utilities/MessageStorage.cpp	/^void MessageStorage::setPathPlanning2ActionMsg(std::string msg)$/;"	f	class:MessageStorage
setPlan2PathPlanningMsg	Utilities/MessageStorage.cpp	/^void MessageStorage::setPlan2PathPlanningMsg(std::string msg)$/;"	f	class:MessageStorage
setPort	Net/addr.cpp	/^            setPort( Addr::PortType port )$/;"	f	class:rcss::net::AddrImpl
setPort	Net/addr.cpp	/^            setPort( const std::string& port,$/;"	f	class:rcss::net::AddrImpl
setPort	Net/addr.cpp	/^        Addr::setPort( PortType port )$/;"	f	class:rcss::net::Addr
setPort	Net/addr.cpp	/^        Addr::setPort( const std::string& port,$/;"	f	class:rcss::net::Addr
setPortRaw	Net/addr.cpp	/^            setPortRaw( Addr::PortType port )$/;"	f	class:rcss::net::AddrImpl	file:
setPos	WorldModel/ball.h	/^	void setPos(Vector3f Pos)$/;"	f	class:Ball
setPos	WorldModel/player.h	/^	void setPos(Vector3f Pos)$/;"	f	class:Player
setRFCenterVel	WorldModel/self.cpp	/^void Self::setRFCenterVel ( int i,float value )$/;"	f	class:Self
setRFForce	WorldModel/self.cpp	/^void Self::setRFForce( int i, float value )$/;"	f	class:Self
setRootAction	Xabsl/XabslEngine.cpp	/^bool Engine::setRootAction(const char* name, bool isOption)$/;"	f	class:xabsl::Engine
setRootAction	Xabsl/XabslEngine.cpp	/^void Engine::setRootAction()$/;"	f	class:xabsl::Engine
setRootAction	Xabsl/XabslEngine.cpp	/^void Engine::setRootAction(Behavior* behavior)$/;"	f	class:xabsl::Engine
setSelectedAgent	Xabsl/XabslEngine.cpp	/^bool Engine::setSelectedAgent(const char* name)$/;"	f	class:xabsl::Engine
setSelectedAgent	Xabsl/XabslEngineExecutor.cpp	/^void XabslEngineExecutor::setSelectedAgent(const char* name)$/;"	f	class:XabslEngineExecutor
setTactics	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::setTactics()$/;"	f	class:AdvancedAgent
setUnum	WorldModel/player.h	/^	inline void setUnum( int Unum  ) { mUnum = Unum; }$/;"	f	class:Player
setValue	Xabsl/XabslSymbols.h	/^  void setValue(T value)$/;"	f	class:xabsl::OutputSymbol
setVirtualDest	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::setVirtualDest()$/;"	f	class:PathPlanning
setVisionObjectMap	WorldModel/worldmodel.cpp	/^VisionObject WorldModel::setVisionObjectMap ( string objName )$/;"	f	class:WorldModel
setVisionSenseMap	WorldModel/worldmodel.cpp	/^void WorldModel::setVisionSenseMap ( VisionObject VO,float distance,float theta,float phi)$/;"	f	class:WorldModel
set_alloc	Parser/malloc_util.c	/^void set_alloc(int i, void *addr, size_t bytes, char *file, int lineno) {$/;"	f	file:
set_parser_buffer_params	Parser/parser.c	/^void set_parser_buffer_params(int ss, int gs) {$/;"	f
setdBetweenBallandOpp	WorldModel/worldmodel.h	/^	queue<double> setdBetweenBallandOpp;$/;"	m	class:WorldModel
setupMainAngles	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::setupMainAngles()$/;"	f	class:NaoHeadControl
sexp_cleanup	Parser/parser.c	/^void sexp_cleanup() {$/;"	f
sexp_iowrap	Parser/sexp.h	/^typedef struct sexp_iowrap {$/;"	s
sexp_iowrap_t	Parser/sexp.h	/^} sexp_iowrap_t;$/;"	t	typeref:struct:sexp_iowrap
sexp_list_length	Parser/sexp_ops.c	/^int sexp_list_length(sexp_t *sx) {$/;"	f
sexp_t	Parser/sexp.h	/^} sexp_t;$/;"	t	typeref:struct:elt
sexp_t_allocate	Parser/parser.c	/^sexp_t_allocate() {$/;"	f
sexp_t_cache	Parser/parser.c	/^faststack_t *sexp_t_cache;$/;"	v
sexp_t_deallocate	Parser/parser.c	/^sexp_t_deallocate(sexp_t *s) {$/;"	f
sexp_val_grow_size	Parser/parser.c	/^static int sexp_val_grow_size  = 64;$/;"	v	file:
sexp_val_start_size	Parser/parser.c	/^static int sexp_val_start_size = 256;$/;"	v	file:
sgrowsize	Parser/cstring.c	/^void sgrowsize(size_t s) {$/;"	f
simCycleMax	AdvancedAgent/PathPlanning.h	/^	int simCycleMax;$/;"	m	class:PathPlanning
simFinished	AdvancedAgent/PathPlanning.h	/^	bool simFinished;$/;"	m	class:PathPlanning
simStep	AdvancedAgent/PathPlanning.h	/^	float simStep;$/;"	m	class:PathPlanning
simpleLookAtPointRelativeToRobot	HeadControl/NaoHeadControl.cpp	/^void NaoHeadControl::simpleLookAtPointRelativeToRobot( Vector3f offsetInImage,$/;"	f	class:NaoHeadControl
simulate	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::simulate()$/;"	f	class:PathPlanning
sister	RobotModel/robot.h	/^        int sister;$/;"	m	struct:Robot::Link
size	Parser/malloc_util.c	/^    int   size;$/;"	m	struct:__anon7	file:
smoothActionRequest	Action/NaoWalkingEngine.cpp	/^void NaoWalkingEngine::smoothActionRequest(const WalkRequest& request, WalkRequest& currentRequest)$/;"	f	class:NaoWalkingEngine
snew	Parser/cstring.c	/^CSTRING *snew(size_t s) {$/;"	f
snprintf	Parser/sexp.c	41;"	d	file:
socklen_t	Net/socket.cpp	/^typedef int socklen_t;$/;"	t	file:
solutionRequestMaxNumOfSolutions	Module/SolutionRequest.h	/^const int solutionRequestMaxNumOfSolutions = 40;$/;"	v
solutions	Module/SolutionRequest.h	/^    ModuleSolutionID solutions[numOfModules];$/;"	m	class:SolutionRequest
specialAction	Action/ActionRequest.h	/^        specialAction,$/;"	e	enum:ActionRequest::ActionID
specialAction	Action/NaoActionControl.h	/^        specialAction,$/;"	e	enum:NaoActionControl::__anon3
specialAction	Module/SolutionRequest.h	/^        specialAction,$/;"	e	enum:SolutionRequest::ModuleID
specialActionID	BehaviorControl/CommonBasicBehaviors.h	/^    double specialActionID;$/;"	m	class:BasicBehaviorSpecialAction
specialActionRequest	Action/ActionRequest.h	/^    SpecialActionRequest specialActionRequest;$/;"	m	class:ActionRequest
specialActionType	Action/ActionRequest.h	/^    }specialActionType;$/;"	m	class:SpecialActionRequest	typeref:enum:SpecialActionRequest::SpecialActionID
speedHeadPitch	HeadControl/NaoHeadControl.h	/^    float speedHeadPitch;$/;"	m	class:NaoHeadControl
speedNeckYaw	HeadControl/NaoHeadControl.h	/^    float speedNeckYaw;$/;"	m	class:NaoHeadControl
speedX	BehaviorControl/CommonBasicBehaviors.h	/^    double speedX;$/;"	m	class:BasicBehaviorWalk
speedY	BehaviorControl/CommonBasicBehaviors.h	/^    double speedY;$/;"	m	class:BasicBehaviorWalk
squoted	Parser/sexp.h	/^  unsigned int squoted;$/;"	m	struct:pcont
stabilize	Action/ActionRequest.h	/^    bool stabilize;$/;"	m	class:ActionRequest
stack	Parser/sexp.h	/^  faststack_t *stack;$/;"	m	struct:pcont
stack_level	Parser/faststack.h	/^typedef struct stack_level {$/;"	s
stack_lvl_t	Parser/faststack.h	/^} stack_lvl_t;$/;"	t	typeref:struct:stack_level
stack_wrapper	Parser/faststack.h	/^typedef struct stack_wrapper {$/;"	s
stand	Action/ActionRequest.h	/^        stand,$/;"	e	enum:ActionRequest::ActionID
stand	Action/NaoActionControl.h	/^        stand ,$/;"	e	enum:NaoActionControl::__anon3
stand	BehaviorControl/Strive3DBehaviorControl.h	/^		stand=5$/;"	e	enum:Strive3DBehaviorControl::GolieState
startCycle	AdvancedAgent/Plan.h	/^	int startCycle;$/;"	m	class:Plan
startCycle	HeadControl/NaoHeadControl.h	/^    int startCycle;$/;"	m	class:NaoHeadControl
startCycleForBallKeepSeeing	HeadControl/NaoHeadControl.h	/^    int startCycleForBallKeepSeeing;$/;"	m	class:NaoHeadControl
startCycleForBallLastSeen	HeadControl/NaoHeadControl.h	/^    int startCycleForBallLastSeen;$/;"	m	class:NaoHeadControl
startTest	BehaviorControl/WalkPathPlanningControl.cpp	/^void PathPlanningTest::startTest($/;"	f	class:PathPlanningTest
startedBy	Utilities/Range.h	/^    bool startedBy(const Range<T>& r) const {return min == r.min && max > r.max;}$/;"	f	class:Range
starts	Utilities/Range.h	/^    bool starts(const Range<T>& r) const {return min == r.min && max < r.max;}$/;"	f	class:Range
state	Action/NaoDynamicKick.h	/^	State state;$/;"	m	class:NaoDynamicKickEngine
state	Action/NaoGetUp.h	/^	State state;$/;"	m	class:NaoGetupEngine
state	Action/NaoKick.h	/^	State state;$/;"	m	class:NaoKickEngine
state	Action/NaoSpecialAction.h	/^	State state;$/;"	m	class:NaoSpecialAction
state	Action/Strive3DGetUp.h	/^	State state;$/;"	m	class:Strive3DGetupEngine
state	Parser/sexp.h	/^  unsigned int state;$/;"	m	struct:pcont
state	Trainer_Client/common.cpp	/^state::state()$/;"	f	class:state
state	Trainer_Client/common.h	/^struct state$/;"	s
state_number	Trainer_Client/control.h	/^	int state_number;$/;"	m	class:control
state_time	Trainer_Client/control.h	/^	float state_time;$/;"	m	class:control
states	Xabsl/XabslOption.h	/^  Array<State*> states;$/;"	m	class:xabsl::Option
stop	Action/ActionRequest.h	/^        stop,$/;"	e	enum:ActionRequest::ActionID
stop	Action/NaoActionControl.h	/^        stop$/;"	e	enum:NaoActionControl::__anon3
stopWalking	Action/ActionInfo.h	/^	bool stopWalking;$/;"	m	class:ActionInfo
strdup	Parser/malloc_util.h	30;"	d
streams	Utilities/Logger.h	/^		std::map<std::string, LogStream *> streams;$/;"	m	class:Logger::LogStreams
strim	Parser/cstring.c	/^CSTRING *strim(CSTRING *s) {$/;"	f
strive3D	Module/SolutionRequest.h	/^        strive3D,$/;"	e	enum:SolutionRequest::xabslEngineID
strive3DActionControl	Module/SolutionRequest.h	/^        strive3DActionControl = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DBehaviorControl	Module/SolutionRequest.h	/^        strive3DBehaviorControl = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DBehaviorControlAgentBasicsTester	Module/SolutionRequest.h	/^        strive3DBehaviorControlAgentBasicsTester,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DGetupEngine	Module/SolutionRequest.h	/^        strive3DGetupEngine = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DHeadControl	Module/SolutionRequest.h	/^        strive3DHeadControl = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DKickEngine	Module/SolutionRequest.h	/^        strive3DKickEngine = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DSpecialAction	Module/SolutionRequest.h	/^        strive3DSpecialAction = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3DWalkingEngine	Module/SolutionRequest.h	/^        strive3DWalkingEngine = 0,$/;"	e	enum:SolutionRequest::ModuleSolutionID
strive3D_headControl	Module/SolutionRequest.h	/^        strive3D_headControl,$/;"	e	enum:SolutionRequest::xabslEngineID
subsequentOption	Xabsl/XabslState.h	/^  Option* subsequentOption;  $/;"	m	class:xabsl::State
svd	Geometry/geometry.cpp	/^svd(float* X,const float** A, const float* B, int M, int N)$/;"	f
svdcmp	Geometry/geometry.cpp	/^svdcmp(float** a, int m, int n, float w[], float** v)$/;"	f
svdksb	Geometry/geometry.cpp	/^svdksb(float** u, float w[], float** v, int m, int n, float b[], float x[])$/;"	f
symbol	Xabsl/XabslBooleanExpression.h	/^  BooleanInputSymbol* symbol;$/;"	m	class:xabsl::BooleanInputSymbolRef
symbol	Xabsl/XabslBooleanExpression.h	/^  BooleanOutputSymbol* symbol;$/;"	m	class:xabsl::BooleanOutputSymbolRef
symbol	Xabsl/XabslDecimalExpression.h	/^  DecimalInputSymbol* symbol;$/;"	m	class:xabsl::DecimalInputSymbolRef
symbol	Xabsl/XabslDecimalExpression.h	/^  DecimalOutputSymbol* symbol;$/;"	m	class:xabsl::DecimalOutputSymbolRef
symbol	Xabsl/XabslEnumeratedExpression.h	/^  EnumeratedInputSymbol* symbol;$/;"	m	class:xabsl::EnumeratedInputSymbolRef
symbol	Xabsl/XabslEnumeratedExpression.h	/^  const EnumeratedOutputSymbol* symbol;$/;"	m	class:xabsl::EnumeratedOutputSymbolRef
sync	Net/socketstreambuf.hpp	/^            sync()$/;"	f	class:rcss::net::SocketStreamBuf
tLOG	Utilities/Logger.h	49;"	d
tactics	AdvancedAgent/AdvancedAgent.h	/^	Tactics tactics;$/;"	m	class:AdvancedAgent
targetState	Xabsl/XabslState.h	/^  bool targetState;$/;"	m	class:xabsl::State
tc	BaseAgent.h	/^	trainer_client *tc;$/;"	m	class:BaseAgent
team_index	WorldModel/fieldinfo.h	/^    TTeamIndex team_index;$/;"	m	class:FieldInfo
test	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::test()$/;"	f	class:AdvancedAgent
test	AdvancedAgent/PathPlanning.cpp	/^void PathPlanning::test()$/;"	f	class:PathPlanning
testDecison	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::testDecison()$/;"	f	class:AdvancedAgent
testDestination	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::testDestination()$/;"	f	class:WalkPathPlanningControl
testJoyStick	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::testJoyStick()$/;"	f	class:WalkPathPlanningControl
testPathPlanning	AdvancedAgent/AdvancedAgent.cpp	/^void AdvancedAgent::testPathPlanning()$/;"	f	class:AdvancedAgent
testWayPoint	BehaviorControl/WalkPathPlanningControl.cpp	/^void WalkPathPlanningControl::testWayPoint()$/;"	f	class:WalkPathPlanningControl
theChar	Xabsl/XabslEngineExecutor.h	/^  	char theChar; \/\/ the last character read$/;"	m	class:MyXabslFileInputSource
theta	types.h	/^    double theta;$/;"	m	struct:VisionSense
time	Xabsl/XabslDecimalExpression.h	/^  unsigned long& time;$/;"	m	class:xabsl::TimeRef
time	types.h	/^    float		time;$/;"	m	struct:HearInfo
timeOfExecution	Xabsl/XabslBehavior.h	/^  unsigned long timeOfExecution;$/;"	m	class:xabsl::Behavior
timeOfStateExecution	Xabsl/XabslState.h	/^  unsigned long timeOfStateExecution;$/;"	m	class:xabsl::State
timeWhenActivated	Xabsl/XabslBehavior.h	/^  unsigned long timeWhenActivated;$/;"	m	class:xabsl::Behavior
timeWhenStateWasActivated	Xabsl/XabslState.h	/^  unsigned long timeWhenStateWasActivated;$/;"	m	class:xabsl::State
timenow	Utilities/Logger.h	/^		struct tm *timenow;$/;"	m	class:Timer	typeref:struct:Timer::tm
timer	Utilities/Logger.h	/^	Timer *timer;$/;"	m	class:LogStream
tl_sexp	Parser/sexp_ops.h	59;"	d
to2D	salt/vector.h	/^	f_inline Vector2f to2D()$/;"	f	class:salt::Vector3f
toCharPtr	Parser/cstring.c	/^char *toCharPtr(CSTRING *s) {$/;"	f
top	Parser/faststack.h	/^  stack_lvl_t *top;$/;"	m	struct:stack_wrapper
top_data	Parser/faststack.h	135;"	d
torsoMatrixByGyro	WorldModel/self.h	/^    Matrix	              torsoMatrixByGyro;$/;"	m	class:Self
trainer_client	Trainer_Client/trainer_client.cpp	/^trainer_client::trainer_client()$/;"	f	class:trainer_client
trainer_client	Trainer_Client/trainer_client.h	/^class trainer_client$/;"	c
transJointAngle	Trainer_Client/control.cpp	/^int transJointAngle(int a)$/;"	f
transformMat	WorldModel/self.h	/^    Matrix transformMat;\/\/for change the Vision coordinate to Robot's world coordinate$/;"	m	class:Self
transformMat	WorldModel/worldmodel.h	/^	Matrix transformMat;\/\/for change the Robot's world coordinate to Vision coordinate $/;"	m	class:WorldModel
transformMat2	WorldModel/self.h	/^    Matrix transformMat2;$/;"	m	class:Self
tryPath	BehaviorControl/WalkPathPlanningControl.cpp	/^vector<WayPoint*> PathPlanningTest::tryPath($/;"	f	class:PathPlanningTest
turnKick	Action/ActionRequest.h	/^        turnKick,$/;"	e	enum:WalkRequest::WalkType
turnWithBall	Action/ActionRequest.h	/^        turnWithBall,$/;"	e	enum:WalkRequest::WalkType
twin	RobotModel/robot.h	/^        int twin;             \/\/ used for universal joint$/;"	m	struct:Robot::Link
ty	Parser/sexp.h	/^  elt_t ty;$/;"	m	struct:elt
type	Action/ActionRequest.h	/^    int type;$/;"	m	class:KickRequest
type	BehaviorControl/CommonBasicBehaviors.h	/^    double type;$/;"	m	class:BasicBehaviorWalk
type	BehaviorControl/WalkPathPlanningControl.h	/^	WayPointType type() const {return mWayPointType;}$/;"	f	class:WayPoint
uLINK	RobotModel/robot.h	/^    boost::shared_array<Link> uLINK;$/;"	m	class:Robot
uLinkForCamera	RobotModel/robot.h	/^    boost::shared_array<Link> uLinkForCamera;$/;"	m	class:Robot
ul2float	Utilities/Utilities.cpp	/^float ul2float(unsigned long num)$/;"	f
undefined	Module/SolutionRequest.h	/^        undefined$/;"	e	enum:SolutionRequest::xabslEngineID
underflow	Net/socketstreambuf.hpp	/^	    underflow()$/;"	f	class:rcss::net::SocketStreamBuf
unknow	WorldModel/self.h	/^		unknow = -1$/;"	e	enum:Self::RoleInTeam
updatedBetweenBallandOpp	WorldModel/worldmodel.cpp	/^void WorldModel::updatedBetweenBallandOpp()$/;"	f	class:WorldModel
useCommunicatedBall	HeadControl/NaoHeadControl.h	/^    bool useCommunicatedBall;$/;"	m	class:NaoHeadControl
usedSize	Xabsl/XabslArray.h	/^    int usedSize, allocatedSize;$/;"	m	class:xabsl::Array
v	RobotModel/robot.h	/^        salt::Vector3f v;$/;"	m	struct:Robot::Link
v	Xabsl/XabslSymbols.h	/^  int v;$/;"	m	class:xabsl::EnumElement
val	Parser/sexp.h	/^  char        *val;$/;"	m	struct:pcont
val	Parser/sexp.h	/^  char  *val;$/;"	m	struct:elt
val	Utilities/xmlParser.h	/^	std::string val;$/;"	m	class:Str
val_allocated	Parser/sexp.h	/^  int          val_allocated;$/;"	m	struct:pcont
val_allocated	Parser/sexp.h	/^  int   val_allocated;$/;"	m	struct:elt
val_used	Parser/sexp.h	/^  int          val_used;$/;"	m	struct:pcont
val_used	Parser/sexp.h	/^  int   val_used;$/;"	m	struct:elt
valid	Net/handler.hpp	/^            bool valid() const$/;"	f	class:rcss::net::Handler
valid	Parser/malloc_util.c	/^    int   valid;$/;"	m	struct:__anon7	file:
value	Xabsl/XabslBooleanExpression.h	/^  bool value;$/;"	m	class:xabsl::BooleanValue
value	Xabsl/XabslDecimalExpression.h	/^  double value;$/;"	m	class:xabsl::DecimalValue
value	Xabsl/XabslEnumeratedExpression.h	/^  int value;$/;"	m	class:xabsl::EnumeratedValue
values	Utilities/xmlParser.h	/^	vector<Str>values;$/;"	m	class:XMLParser
vcur	Parser/sexp.h	/^  char        *vcur;$/;"	m	struct:pcont
vel	WorldModel/dynamicobject.h	/^	salt::Vector3f vel;$/;"	m	class:DynamicObject
virtualDestAngle	AdvancedAgent/PathPlanning.h	/^	float virtualDestAngle;$/;"	m	class:PathPlanning
virtualDestPos	AdvancedAgent/PathPlanning.h	/^	Vector2f virtualDestPos;$/;"	m	class:PathPlanning
w	RobotModel/robot.h	/^        salt::Vector3f w;$/;"	m	struct:Robot::Link
wT	Action/NaoWalkingEngine.h	/^	Trajectory *wT;$/;"	m	class:NaoWalkingEngine
walk	Action/ActionRequest.h	/^        walk,$/;"	e	enum:ActionRequest::ActionID
walk	Action/NaoActionControl.h	/^        walk,$/;"	e	enum:NaoActionControl::__anon3
walkMaxBackwardSpeed	Action/ActionRequest.h	/^static const double walkMaxBackwardSpeed = 0.6;$/;"	v
walkMaxForwardSpeed	Action/ActionRequest.h	/^static const double walkMaxForwardSpeed = 0.6;$/;"	v
walkMaxLeftRightSpeed	Action/ActionRequest.h	/^static const double walkMaxLeftRightSpeed = 0.1;$/;"	v
walkMaxRotationSpeed	Action/ActionRequest.h	/^static const double walkMaxRotationSpeed = 10.0;$/;"	v
walkParameterTimeStamp	Action/ActionControl.h	/^  const unsigned long& walkParameterTimeStamp;$/;"	m	class:ActionControlInterfaces
walkParameterTimeStamp	Action/WalkingEngine.h	/^  const unsigned long& walkParameterTimeStamp;$/;"	m	class:WalkingEngineInterfaces
walkParams	Action/ActionRequest.h	/^    salt::Vector2f walkParams;$/;"	m	class:WalkRequest
walkPathPlanningControl	Module/SolutionRequest.h	/^        walkPathPlanningControl,$/;"	e	enum:SolutionRequest::ModuleSolutionID
walkRequest	Action/ActionRequest.h	/^    WalkRequest walkRequest;$/;"	m	class:ActionRequest
walkType	Action/ActionRequest.h	/^    WalkType walkType;$/;"	m	class:WalkRequest
walkWithBall	Action/ActionRequest.h	/^        walkWithBall,$/;"	e	enum:WalkRequest::WalkType
walk_to_position_behind_the_ball	BehaviorControl/NaoBehaviorControl.h	/^        walk_to_position_behind_the_ball,$/;"	e	enum:NaoBehaviorControl::BehaviorControlState
walkingEngine	Module/SolutionRequest.h	/^        walkingEngine, \/*!< See class WalkingEngineSelector *\/$/;"	e	enum:SolutionRequest::ModuleID
wasActive	Xabsl/XabslBehavior.h	/^  bool wasActive;$/;"	m	class:xabsl::Behavior
wayPointVect	BehaviorControl/WalkPathPlanningControl.h	/^	vector<DebugWayPoint>& wayPointVect(){return mWayPointVect;}$/;"	f	class:DebugMsgParser
wayPoints	AdvancedAgent/PathPlanning.h	/^	vector<Vector2f>wayPoints;\/\/This is the final result given by the path planning system, which is used to generate the way points' s-expressions.$/;"	m	class:PathPlanning
wayPointsVelUnit	AdvancedAgent/PathPlanning.h	/^	vector<Vector2f>wayPointsVelUnit;\/\/The unit velocities of the agent in the waypints.$/;"	m	class:PathPlanning
what	Net/exception.cpp	/^        AcceptErr::what() const throw()$/;"	f	class:rcss::net::AcceptErr
what	Net/exception.cpp	/^        BindErr::what() const throw()$/;"	f	class:rcss::net::BindErr
what	Net/exception.cpp	/^        ConnectErr::what() const throw()$/;"	f	class:rcss::net::ConnectErr
what	Net/exception.cpp	/^        GetNameErr::what() const throw()$/;"	f	class:rcss::net::GetNameErr
what	Net/exception.cpp	/^        HostNotFound::what() const throw()$/;"	f	class:rcss::net::HostNotFound
what	Net/exception.cpp	/^        ListenErr::what() const throw()$/;"	f	class:rcss::net::ListenErr
what	Net/exception.cpp	/^        OpenErr::what() const throw()$/;"	f	class:rcss::net::OpenErr
writeData	Net/socketstreambuf.hpp	/^            writeData()$/;"	f	class:rcss::net::SocketStreamBuf
x	salt/tvector.h	/^    f_inline DATATYPE& x()$/;"	f	class:salt::TVector2
x	salt/tvector.h	/^    f_inline DATATYPE& x()$/;"	f	class:salt::TVector3
x	salt/tvector.h	/^    f_inline const DATATYPE& x() const$/;"	f	class:salt::TVector2
x	salt/tvector.h	/^    f_inline const DATATYPE& x() const$/;"	f	class:salt::TVector3
x03	salt/matrix.cpp	177;"	d	file:
x03	salt/matrix.cpp	291;"	d	file:
x13	salt/matrix.cpp	178;"	d	file:
x13	salt/matrix.cpp	292;"	d	file:
x23	salt/matrix.cpp	179;"	d	file:
x23	salt/matrix.cpp	293;"	d	file:
x33	salt/matrix.cpp	180;"	d	file:
x33	salt/matrix.cpp	294;"	d	file:
x_check_point_count	Parser/malloc_util.c	/^void x_check_point_count(void) {$/;"	f
x_free	Parser/malloc_util.c	/^void x_free(char *file, int lineno, void *block) {$/;"	f
x_inc_check_point	Parser/malloc_util.c	/^void x_inc_check_point(void) {$/;"	f
x_init_alloc	Parser/malloc_util.c	/^void x_init_alloc(void) {$/;"	f
x_malloc	Parser/malloc_util.c	/^void *x_malloc(char * file, int lineno, size_t bytes) {$/;"	f
x_strdup	Parser/malloc_util.c	/^char *x_strdup(char *file, int lineno, char *str) {$/;"	f
xabsl	Xabsl/XabslAction.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslAction.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslAgent.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslAgent.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslArray.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslBasicBehavior.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslBehavior.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslBooleanExpression.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslBooleanExpression.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslDecimalExpression.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslDecimalExpression.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslEngine.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslEngine.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslEnumeratedExpression.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslEnumeratedExpression.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslOption.cpp	/^namespace xabsl$/;"	n	file:
xabsl	Xabsl/XabslOption.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslParameters.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslParameters.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslState.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslState.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslStatement.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslStatement.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslSymbols.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslSymbols.h	/^namespace xabsl $/;"	n
xabsl	Xabsl/XabslTools.cpp	/^namespace xabsl $/;"	n	file:
xabsl	Xabsl/XabslTools.h	/^namespace xabsl $/;"	n
xabslEngineID	Module/SolutionRequest.h	/^    enum xabslEngineID$/;"	g	class:SolutionRequest
xpath	Utilities/xmlParser.h	/^	xmlChar *xpath;$/;"	m	class:XMLParser
y	salt/tvector.h	/^    f_inline DATATYPE& y()$/;"	f	class:salt::TVector2
y	salt/tvector.h	/^    f_inline DATATYPE& y()$/;"	f	class:salt::TVector3
y	salt/tvector.h	/^    f_inline const DATATYPE& y() const$/;"	f	class:salt::TVector2
y	salt/tvector.h	/^    f_inline const DATATYPE& y() const$/;"	f	class:salt::TVector3
yaw	HeadControl/HeadMotionRequest.h	/^  	float pitch,yaw;$/;"	m	class:HeadMotionRequest
z	salt/tvector.h	/^    f_inline DATATYPE& z()$/;"	f	class:salt::TVector3
z	salt/tvector.h	/^    f_inline const DATATYPE& z() const$/;"	f	class:salt::TVector3
z00	salt/matrix.cpp	181;"	d	file:
z00	salt/matrix.cpp	295;"	d	file:
z01	salt/matrix.cpp	185;"	d	file:
z01	salt/matrix.cpp	299;"	d	file:
z10	salt/matrix.cpp	182;"	d	file:
z10	salt/matrix.cpp	296;"	d	file:
z11	salt/matrix.cpp	186;"	d	file:
z11	salt/matrix.cpp	300;"	d	file:
z20	salt/matrix.cpp	183;"	d	file:
z20	salt/matrix.cpp	297;"	d	file:
z21	salt/matrix.cpp	187;"	d	file:
z21	salt/matrix.cpp	301;"	d	file:
z30	salt/matrix.cpp	184;"	d	file:
z30	salt/matrix.cpp	298;"	d	file:
z31	salt/matrix.cpp	188;"	d	file:
z31	salt/matrix.cpp	302;"	d	file:
~ActionBehavior	Xabsl/XabslAction.cpp	/^ActionBehavior::~ActionBehavior()$/;"	f	class:xabsl::ActionBehavior
~ActionBooleanOutputSymbol	Xabsl/XabslAction.cpp	/^ActionBooleanOutputSymbol::~ActionBooleanOutputSymbol() $/;"	f	class:xabsl::ActionBooleanOutputSymbol
~ActionControl	Action/ActionControl.h	/^    	~ActionControl() {}$/;"	f	class:ActionControl
~ActionDecimalOutputSymbol	Xabsl/XabslAction.cpp	/^ActionDecimalOutputSymbol::~ActionDecimalOutputSymbol()$/;"	f	class:xabsl::ActionDecimalOutputSymbol
~ActionEnumeratedOutputSymbol	Xabsl/XabslAction.cpp	/^ActionEnumeratedOutputSymbol::~ActionEnumeratedOutputSymbol()$/;"	f	class:xabsl::ActionEnumeratedOutputSymbol
~AndOperator	Xabsl/XabslBooleanExpression.cpp	/^AndOperator::~AndOperator()$/;"	f	class:xabsl::AndOperator
~ArithmeticOperator	Xabsl/XabslDecimalExpression.cpp	/^ArithmeticOperator::~ArithmeticOperator()$/;"	f	class:xabsl::ArithmeticOperator
~Array	Xabsl/XabslArray.h	/^    ~Array() $/;"	f	class:xabsl::Array
~ArrayElement	Xabsl/XabslArray.h	/^    ~ArrayElement() {}$/;"	f	class:xabsl::ArrayElement
~Ball	WorldModel/ball.cpp	/^Ball::~Ball()$/;"	f	class:Ball
~BaseAgent	BaseAgent.h	/^	~BaseAgent(){}$/;"	f	class:BaseAgent
~BasicBehavior	Xabsl/XabslBasicBehavior.h	/^  ~BasicBehavior()$/;"	f	class:xabsl::BasicBehavior
~BehaviorControl	BehaviorControl/BehaviorControl.h	/^	~BehaviorControl(){}$/;"	f	class:BehaviorControl
~BooleanExpression	Xabsl/XabslBooleanExpression.cpp	/^BooleanExpression::~BooleanExpression()$/;"	f	class:xabsl::BooleanExpression
~BooleanInputSymbolRef	Xabsl/XabslBooleanExpression.cpp	/^BooleanInputSymbolRef::~BooleanInputSymbolRef()$/;"	f	class:xabsl::BooleanInputSymbolRef
~ConditionalDecimalExpression	Xabsl/XabslDecimalExpression.cpp	/^ConditionalDecimalExpression::~ConditionalDecimalExpression()$/;"	f	class:xabsl::ConditionalDecimalExpression
~ConditionalEnumeratedExpression	Xabsl/XabslEnumeratedExpression.cpp	/^ConditionalEnumeratedExpression::~ConditionalEnumeratedExpression()$/;"	f	class:xabsl::ConditionalEnumeratedExpression
~ConvexHull	WorldModel/convexhull.cpp	/^ConvexHull::~ConvexHull()$/;"	f	class:ConvexHull
~ConvexHullManager	WorldModel/convexhullmanager.cpp	/^ConvexHullManager::~ConvexHullManager()$/;"	f	class:ConvexHullManager
~DebugMsgParser	BehaviorControl/WalkPathPlanningControl.cpp	/^DebugMsgParser::~DebugMsgParser()$/;"	f	class:DebugMsgParser
~DecimalExpression	Xabsl/XabslDecimalExpression.cpp	/^DecimalExpression::~DecimalExpression()$/;"	f	class:xabsl::DecimalExpression
~DecimalInputSymbolRef	Xabsl/XabslDecimalExpression.cpp	/^DecimalInputSymbolRef::~DecimalInputSymbolRef()$/;"	f	class:xabsl::DecimalInputSymbolRef
~DynamicObject	WorldModel/dynamicobject.h	/^	virtual ~DynamicObject() {}$/;"	f	class:DynamicObject
~Engine	Xabsl/XabslEngine.cpp	/^Engine::~Engine()$/;"	f	class:xabsl::Engine
~EnumeratedExpression	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedExpression::~EnumeratedExpression()$/;"	f	class:xabsl::EnumeratedExpression
~EnumeratedInputSymbolComparison	Xabsl/XabslBooleanExpression.cpp	/^EnumeratedInputSymbolComparison::~EnumeratedInputSymbolComparison()$/;"	f	class:xabsl::EnumeratedInputSymbolComparison
~EnumeratedInputSymbolRef	Xabsl/XabslEnumeratedExpression.cpp	/^EnumeratedInputSymbolRef::~EnumeratedInputSymbolRef()$/;"	f	class:xabsl::EnumeratedInputSymbolRef
~Enumeration	Xabsl/XabslSymbols.cpp	/^Enumeration::~Enumeration()$/;"	f	class:xabsl::Enumeration
~FieldInfo	WorldModel/fieldinfo.cpp	/^FieldInfo::~FieldInfo()$/;"	f	class:FieldInfo
~GetupEngine	Action/GetUpEngine.h	/^  virtual ~GetupEngine() {}$/;"	f	class:GetupEngine
~Handler	Net/handler.cpp	/^		Handler::~Handler()$/;"	f	class:rcss::net::Handler
~HeadControl	HeadControl/HeadControl.h	/^  virtual ~HeadControl() {}$/;"	f	class:HeadControl
~HeadControlMode	HeadControl/HeadControlMode.h	/^    ~HeadControlMode(){};$/;"	f	class:HeadControlMode
~HeadMotionRequest	HeadControl/HeadMotionRequest.cpp	/^HeadMotionRequest::~HeadMotionRequest()$/;"	f	class:HeadMotionRequest
~IfElseBlock	Xabsl/XabslStatement.cpp	/^IfElseBlock::~IfElseBlock()$/;"	f	class:xabsl::IfElseBlock
~KickEngine	Action/KickEngine.h	/^  virtual ~KickEngine() {}$/;"	f	class:KickEngine
~LogFile	Utilities/Logger.cpp	/^LogFile::~LogFile()$/;"	f	class:LogFile
~LogNull	Utilities/Logger.cpp	/^LogNull::~LogNull()$/;"	f	class:LogNull
~LogStdErr	Utilities/Logger.cpp	/^LogStdErr::~LogStdErr()$/;"	f	class:LogStdErr
~LogStdOut	Utilities/Logger.cpp	/^LogStdOut::~LogStdOut()$/;"	f	class:LogStdOut
~LogStream	Utilities/Logger.cpp	/^LogStream::~LogStream()$/;"	f	class:LogStream
~LogStreams	Utilities/Logger.cpp	/^Logger::LogStreams::~LogStreams()$/;"	f	class:Logger::LogStreams
~Logger	Utilities/Logger.cpp	/^Logger::~Logger()$/;"	f	class:Logger
~MatrixSpline	Geometry/MatrixSpline.cpp	/^MatrixSpline::~MatrixSpline()$/;"	f	class:MatrixSpline
~Module	Module/Module.h	/^	virtual ~Module() {};$/;"	f	class:Module
~ModuleSelector	Module/ModuleSelector.cpp	/^ModuleSelector::~ModuleSelector()$/;"	f	class:ModuleSelector
~MyXabslFileInputSource	Xabsl/XabslEngineExecutor.cpp	/^MyXabslFileInputSource::~MyXabslFileInputSource()$/;"	f	class:MyXabslFileInputSource
~NamedItem	Xabsl/XabslArray.h	/^  ~NamedItem() { delete[] n; }$/;"	f	class:xabsl::NamedItem
~Nao	RobotModel/nao.cpp	/^Nao::~Nao()$/;"	f	class:Nao
~NaoActionControl	Action/NaoActionControl.cpp	/^NaoActionControl::~NaoActionControl()$/;"	f	class:NaoActionControl
~NaoBehaviorControl	BehaviorControl/NaoBehaviorControl.h	/^    ~NaoBehaviorControl() {}$/;"	f	class:NaoBehaviorControl
~NaoDynamicKickEngine	Action/NaoDynamicKick.h	/^    	~NaoDynamicKickEngine(){};$/;"	f	class:NaoDynamicKickEngine
~NaoGetupEngine	Action/NaoGetUp.h	/^    	~NaoGetupEngine(){};$/;"	f	class:NaoGetupEngine
~NaoHeadControl	HeadControl/NaoHeadControl.h	/^    ~NaoHeadControl() {}$/;"	f	class:NaoHeadControl
~NaoKickEngine	Action/NaoKick.h	/^    	~NaoKickEngine(){};$/;"	f	class:NaoKickEngine
~NaoSpecialAction	Action/NaoSpecialAction.h	/^    	~NaoSpecialAction(){};$/;"	f	class:NaoSpecialAction
~NaoWalkingEngine	Action/NaoWalkingEngine.cpp	/^NaoWalkingEngine::~NaoWalkingEngine()$/;"	f	class:NaoWalkingEngine
~Net	Net/Net.cpp	/^Net::~Net()$/;"	f	class:Net
~NotOperator	Xabsl/XabslBooleanExpression.cpp	/^NotOperator::~NotOperator()$/;"	f	class:xabsl::NotOperator
~OnlineTimer	Utilities/Logger.cpp	/^OnlineTimer::~OnlineTimer()$/;"	f	class:OnlineTimer
~Option	Xabsl/XabslOption.cpp	/^Option::~Option()$/;"	f	class:xabsl::Option
~OptionParameters	Xabsl/XabslOption.cpp	/^OptionParameters::~OptionParameters()$/;"	f	class:xabsl::OptionParameters
~OrOperator	Xabsl/XabslBooleanExpression.cpp	/^OrOperator::~OrOperator()$/;"	f	class:xabsl::OrOperator
~ParameterAssignment	Xabsl/XabslParameters.cpp	/^ParameterAssignment::~ParameterAssignment()$/;"	f	class:xabsl::ParameterAssignment
~Parser	Parser/Parser.h	/^	~Parser(){}$/;"	f	class:Parser
~PathPlanningTest	BehaviorControl/WalkPathPlanningControl.cpp	/^PathPlanningTest::~PathPlanningTest()$/;"	f	class:PathPlanningTest
~Player	WorldModel/player.h	/^	~Player() {}$/;"	f	class:Player
~RelationalAndEqualityOperator	Xabsl/XabslBooleanExpression.cpp	/^RelationalAndEqualityOperator ::~RelationalAndEqualityOperator ()$/;"	f	class:xabsl::RelationalAndEqualityOperator
~Robot	RobotModel/robot.cpp	/^Robot::~Robot()$/;"	f	class:Robot
~Self	WorldModel/self.cpp	/^Self::~Self()$/;"	f	class:Self
~Socket	Net/socket.cpp	/^        Socket::~Socket()$/;"	f	class:rcss::net::Socket
~SocketStreamBuf	Net/socketstreambuf.hpp	/^            ~SocketStreamBuf()$/;"	f	class:rcss::net::SocketStreamBuf
~SpecialAction	Action/SpecialAction.h	/^  virtual ~SpecialAction() {}$/;"	f	class:SpecialAction
~Spline	Geometry/spline.cpp	/^Spline::~Spline()$/;"	f	class:Spline
~State	Xabsl/XabslState.cpp	/^State::~State()$/;"	f	class:xabsl::State
~Statement	Xabsl/XabslStatement.cpp	/^Statement::~Statement()$/;"	f	class:xabsl::Statement
~Strive3DBehaviorControl	BehaviorControl/Strive3DBehaviorControl.h	/^  ~Strive3DBehaviorControl(){};$/;"	f	class:Strive3DBehaviorControl
~Strive3DGetupEngine	Action/Strive3DGetUp.h	/^    	~Strive3DGetupEngine(){};$/;"	f	class:Strive3DGetupEngine
~Symbols	Xabsl/XabslSymbols.cpp	/^Symbols::~Symbols()$/;"	f	class:xabsl::Symbols
~Timer	Utilities/Logger.cpp	/^Timer::~Timer()$/;"	f	class:Timer
~Trajectory	Geometry/trajectory.cpp	/^Trajectory::~Trajectory()$/;"	f	class:Trajectory
~VirtualTimer	Utilities/Logger.cpp	/^VirtualTimer::~VirtualTimer()$/;"	f	class:VirtualTimer
~WalkPathPlanningControl	BehaviorControl/WalkPathPlanningControl.h	/^	~WalkPathPlanningControl() {}$/;"	f	class:WalkPathPlanningControl
~WalkingEngine	Action/WalkingEngine.h	/^  	virtual ~WalkingEngine() {}$/;"	f	class:WalkingEngine
~WorldModel	WorldModel/worldmodel.cpp	/^WorldModel::~WorldModel()$/;"	f	class:WorldModel
~XabslBehaviorControl	BehaviorControl/XabslBehaviorControl.h	/^  ~XabslBehaviorControl() {};$/;"	f	class:XabslBehaviorControl
~XabslBehaviorControlAgentInterface	BehaviorControl/XabslBehaviorControl.cpp	/^XabslBehaviorControlAgentInterface::~XabslBehaviorControlAgentInterface()$/;"	f	class:XabslBehaviorControlAgentInterface
~XabslEngineExecutor	Xabsl/XabslEngineExecutor.cpp	/^XabslEngineExecutor::~XabslEngineExecutor()$/;"	f	class:XabslEngineExecutor
